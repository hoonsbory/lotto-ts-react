[{"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\App.tsx":"1","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\TsTest.tsx":"2","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\index.tsx":"3","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\Debounce.tsx":"4","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SelectNum.tsx":"5","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\store\\store.ts":"6","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\store\\index.tsx":"7","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\theme..js":"8","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\global.js":"9","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\Button.tsx":"10","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\ResultNum.tsx":"11"},{"size":893,"mtime":1608604524194,"results":"12","hashOfConfig":"13"},{"size":2845,"mtime":1608568817466,"results":"14","hashOfConfig":"13"},{"size":1066,"mtime":1608547399275,"results":"15","hashOfConfig":"13"},{"size":958,"mtime":1608544243744,"results":"16","hashOfConfig":"13"},{"size":2965,"mtime":1608604591897,"results":"17","hashOfConfig":"13"},{"size":1072,"mtime":1608529801743,"results":"18","hashOfConfig":"13"},{"size":205,"mtime":1608528185018,"results":"19","hashOfConfig":"13"},{"size":371,"mtime":1608547160069,"results":"20","hashOfConfig":"13"},{"size":221,"mtime":1608564591185,"results":"21","hashOfConfig":"13"},{"size":847,"mtime":1608564000000,"results":"22","hashOfConfig":"13"},{"size":712,"mtime":1608567464565,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rykv4c",{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\App.tsx",["48","49","50"],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\TsTest.tsx",["51","52","53","54","55"],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\index.tsx",["56"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { compose, createStore } from 'redux';\nimport rootReducer from './store/index';\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme.'\n// **** (1) Provider 불러오기\nimport { Provider } from 'react-redux'\nimport Global from './global'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,composeEnhancers())\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\Debounce.tsx",["57"],"// export function Debounce<Params extends any[]>(callback: (...args: Params) => any, milliseconds: number) {\r\n//     let debounceChek: NodeJS.Timeout\r\n//     return function (...args: Params) {\r\n//         // clearTimeout을 settimeout전에 걸어줘서 아무리 많이 버튼을 눌러도 \r\n//         //그 전 setTimeout들은 전부 삭제되고 마지막 setTimeout만 실행된다.\r\n//         clearTimeout(debounceChek);\r\n//         debounceChek = setTimeout(() => {\r\n//         console.log(debounceChek)\r\n//             callback(...args);\r\n//         }, milliseconds);\r\n//     }\r\n// }\r\nimport { useCallback } from 'react'\r\nexport function Debounce<Params extends any[]>(\r\n    func: (...args: Params) => any,\r\n    timeout: number\r\n  ): (...args: Params) => void {\r\n    let timer: NodeJS.Timeout;\r\n    return (...args: Params) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        func(...args);\r\n      }, timeout);\r\n    }\r\n  }","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SelectNum.tsx",["58","59"],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\store\\store.ts",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\store\\index.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\theme..js",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\global.js",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\Button.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\ResultNum.tsx",[],{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":16,"column":10,"nodeType":"62","messageId":"63","endLine":16,"endColumn":11},{"ruleId":"60","severity":1,"message":"65","line":16,"column":13,"nodeType":"62","messageId":"63","endLine":16,"endColumn":17},{"ruleId":"60","severity":1,"message":"66","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"67","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":14},{"ruleId":"68","severity":1,"message":"69","line":25,"column":14,"nodeType":"70","endLine":35,"endColumn":15},{"ruleId":"68","severity":1,"message":"71","line":56,"column":8,"nodeType":"72","endLine":56,"endColumn":10,"suggestions":"73"},{"ruleId":"68","severity":1,"message":"74","line":66,"column":7,"nodeType":"72","endLine":66,"endColumn":9,"suggestions":"75"},{"ruleId":"60","severity":1,"message":"76","line":12,"column":8,"nodeType":"62","messageId":"63","endLine":12,"endColumn":14},{"ruleId":"60","severity":1,"message":"77","line":13,"column":10,"nodeType":"62","messageId":"63","endLine":13,"endColumn":21},{"ruleId":"60","severity":1,"message":"78","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":21},{"ruleId":"60","severity":1,"message":"79","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":20},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'a' is assigned a value but never used.","'setA' is assigned a value but never used.","'useEffect' is defined but never used.","'styled' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'id' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","CallExpression","React Hook useCallback has missing dependencies: 'correct', 'id', and 'random'. Either include them or remove the dependency array. You can also do a functional update 'setCorrect(c => ...)' if you only need 'correct' in the 'setCorrect' call.","ArrayExpression",["80"],"React Hook useCallback has a missing dependency: 'id'. Either include it or remove the dependency array.",["81"],"'Global' is defined but never used.","'useCallback' is defined but never used.","'useSelector' is defined but never used.","'StoreState' is defined but never used.",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [correct, id, random]",{"range":"86","text":"87"},"Update the dependencies array to be: [id]",{"range":"88","text":"89"},[1771,1773],"[correct, id, random]",[2108,2110],"[id]"]