[{"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\index.tsx":"1","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\reportWebVitals.ts":"2","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\global.ts":"3","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\theme.ts":"4","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\store\\index.ts":"5","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\App.tsx":"6","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\store\\store.ts":"7","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\Footer.tsx":"8","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\SearchLotto.tsx":"9","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\ChartSelect.tsx":"10","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Loading.tsx":"11","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\HallOfFame.tsx":"12","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\UserResult.tsx":"13","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\SnsGroup.js":"14","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\RollingNum.js":"15","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\Debounce.ts":"16","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\LineDiv.tsx":"17","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\ResultNum.tsx":"18","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\ButtonGroup.tsx":"19","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\LoadingSvg.tsx":"20","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\SubTitle.tsx":"21","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\NobodyWin.tsx":"22","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\SlideFooterBtn.tsx":"23","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\NotSpeedMode.tsx":"24","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\SpeedMode.tsx":"25","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\AccumulateChart.tsx":"26","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\UserChart.tsx":"27","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Chart.js":"28","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\Kakao.tsx":"29","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\NaverBlog.tsx":"30","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\KakaoStory.tsx":"31","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\CopyUrl.tsx":"32","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\FaceBook.tsx":"33","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\models\\RankResultNum.ts":"34","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\models\\RankResult.ts":"35","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Button.tsx":"36","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\Draw.tsx":"37","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\DeleteSvg.tsx":"38","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\DoubleArrow.tsx":"39","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\NumLineWrap.tsx":"40","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\NumList.tsx":"41","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Rank.tsx":"42","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Arrow.tsx":"43","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\LineChart.js":"44","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\FakeLotto.tsx":"45"},{"size":1138,"mtime":1609736466681,"results":"46","hashOfConfig":"47"},{"size":425,"mtime":1608424066436,"results":"48","hashOfConfig":"47"},{"size":648,"mtime":1609909291869,"results":"49","hashOfConfig":"47"},{"size":680,"mtime":1609841526463,"results":"50","hashOfConfig":"47"},{"size":205,"mtime":1608643267574,"results":"51","hashOfConfig":"47"},{"size":1129,"mtime":1609917491200,"results":"52","hashOfConfig":"47"},{"size":5291,"mtime":1609916006303,"results":"53","hashOfConfig":"47"},{"size":862,"mtime":1609916956420,"results":"54","hashOfConfig":"47"},{"size":3433,"mtime":1609917308273,"results":"55","hashOfConfig":"47"},{"size":3519,"mtime":1609923570193,"results":"56","hashOfConfig":"47"},{"size":849,"mtime":1609903065409,"results":"57","hashOfConfig":"47"},{"size":3732,"mtime":1609917308285,"results":"58","hashOfConfig":"47"},{"size":4944,"mtime":1609917755708,"results":"59","hashOfConfig":"47"},{"size":4751,"mtime":1609915201920,"results":"60","hashOfConfig":"47"},{"size":948,"mtime":1609915174483,"results":"61","hashOfConfig":"47"},{"size":894,"mtime":1608892886260,"results":"62","hashOfConfig":"47"},{"size":1155,"mtime":1609911715261,"results":"63","hashOfConfig":"47"},{"size":1204,"mtime":1609906127322,"results":"64","hashOfConfig":"47"},{"size":2666,"mtime":1609909368002,"results":"65","hashOfConfig":"47"},{"size":3434,"mtime":1609903065409,"results":"66","hashOfConfig":"47"},{"size":449,"mtime":1609915393542,"results":"67","hashOfConfig":"47"},{"size":586,"mtime":1609903065409,"results":"68","hashOfConfig":"47"},{"size":1190,"mtime":1609915174470,"results":"69","hashOfConfig":"47"},{"size":10986,"mtime":1609925108270,"results":"70","hashOfConfig":"47"},{"size":6264,"mtime":1609915382772,"results":"71","hashOfConfig":"47"},{"size":5148,"mtime":1609901754686,"results":"72","hashOfConfig":"47"},{"size":2568,"mtime":1609923494963,"results":"73","hashOfConfig":"47"},{"size":4863,"mtime":1609923570219,"results":"74","hashOfConfig":"47"},{"size":1516,"mtime":1609834470317,"results":"75","hashOfConfig":"47"},{"size":2349,"mtime":1609834477653,"results":"76","hashOfConfig":"47"},{"size":576,"mtime":1609834473966,"results":"77","hashOfConfig":"47"},{"size":2066,"mtime":1609834454911,"results":"78","hashOfConfig":"47"},{"size":567,"mtime":1609834464326,"results":"79","hashOfConfig":"47"},{"size":1048,"mtime":1609896832788,"results":"80","hashOfConfig":"47"},{"size":1199,"mtime":1609597407856,"results":"81","hashOfConfig":"47"},{"size":1499,"mtime":1609834560787,"results":"82","hashOfConfig":"47"},{"size":6710,"mtime":1609925506137,"results":"83","hashOfConfig":"47"},{"size":794,"mtime":1609906234168,"results":"84","hashOfConfig":"47"},{"size":1301,"mtime":1609908377917,"results":"85","hashOfConfig":"47"},{"size":830,"mtime":1609914410016,"results":"86","hashOfConfig":"47"},{"size":1394,"mtime":1609914442224,"results":"87","hashOfConfig":"47"},{"size":6184,"mtime":1609923185699,"results":"88","hashOfConfig":"47"},{"size":606,"mtime":1609514815835,"results":"89","hashOfConfig":"47"},{"size":8810,"mtime":1609923495004,"results":"90","hashOfConfig":"47"},{"size":3765,"mtime":1609925488446,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1w0125e",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"123"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\index.tsx",[],["188","189"],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\reportWebVitals.ts",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\global.ts",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\theme.ts",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\store\\index.ts",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\App.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\store\\store.ts",["190"],"// types\r\n\r\n//interface를 통해 타입을 정해준다.\r\nexport interface State {\r\n  list: number[][];\r\n  accumulateList: number[][];\r\n  graphSize: number;\r\n  drawCheck: boolean;\r\n  corrected: boolean[];\r\n  bonusCorrect: boolean[];\r\n  recentRound: number;\r\n  resultTrigger: boolean;\r\n  roundSelect1: number\r\n  roundSelect2: number\r\n  userResult: any\r\n}\r\n\r\n//액션 타입\r\nexport const LIST = \"LIST\";\r\nexport const ALIST = \"ALIST\";\r\nexport const RESIZE = \"RESIZE\";\r\nexport const GRAPHSIZE = \"GRAPHSIZE\";\r\nexport const DRAWCHECK = \"DRAWCHECK\";\r\nexport const CORRECTED = \"CORRECTED\";\r\nexport const BONUSCORRECT = \"BONUSCORRECT\";\r\nexport const RECENTROUND = \"RECENTROUND\";\r\nexport const TRIGGER = \"TRIGGER\";\r\nexport const ROUNDSELECT1 = \"ROUNDSELECT1\"\r\nexport const ROUNDSELECT2 = \"ROUNDSELECT2\"\r\nexport const USERRESULT = \"USERRESULT\"\r\n\r\n\r\n//액션 인터페이스 , 함수의 인자를 여기서 설정한다.\r\ninterface ListAction {\r\n  newList: number[][];\r\n  type: typeof LIST;\r\n}\r\n\r\ninterface AccumulateListAction {\r\n  newList: number[][];\r\n  type: typeof ALIST;\r\n}\r\n\r\ninterface GraphSize {\r\n  size: number;\r\n  type: typeof GRAPHSIZE;\r\n}\r\ninterface DrawCheck {\r\n  value: boolean;\r\n  type: typeof DRAWCHECK;\r\n}\r\ninterface Corrected {\r\n  value: boolean[];\r\n  type: typeof CORRECTED;\r\n}\r\ninterface bonusCorrect {\r\n  value: boolean[];\r\n  type: typeof BONUSCORRECT;\r\n}\r\ninterface RecentRound {\r\n  value: number;\r\n  type: typeof RECENTROUND;\r\n}\r\n\r\ninterface ResultTrigger {\r\n  value: boolean;\r\n  type: typeof TRIGGER;\r\n}\r\ninterface RoundSelect1 {\r\n  value: number;\r\n  type: typeof ROUNDSELECT1;\r\n}\r\ninterface RoundSelect2 {\r\n  value: number;\r\n  type: typeof ROUNDSELECT2;\r\n}\r\ninterface UserResult {\r\n  value: any;\r\n  type: typeof USERRESULT;\r\n}\r\n\r\ntype ActionTypes = ListAction |\r\n  AccumulateListAction |\r\n  GraphSize |\r\n  DrawCheck | Corrected |\r\n  RecentRound |\r\n  ResultTrigger |\r\n  bonusCorrect |\r\n  RoundSelect1 |\r\n  RoundSelect2 | \r\n  UserResult\r\n// interface ActionTypes {\r\n//   actionTypes : ListAction | List2Action\r\n// }\r\n// | ChangeInputAction;\r\n\r\n// actions\r\n\r\n\r\n//액션 인터페이스 설정한 내용을 토대로 함수 작성.\r\nfunction list(newList: number[][]) {\r\n  return {\r\n    type: LIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction accumulateList(newList: number[]) {\r\n  return {\r\n    type: ALIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction graphSizeUp(size: number) {\r\n  return {\r\n    type: GRAPHSIZE,\r\n    size: size\r\n  };\r\n}\r\nfunction graphSizeDown(size: number) {\r\n  return {\r\n    type: GRAPHSIZE,\r\n    size: size\r\n  };\r\n}\r\nfunction drawCheck(value: boolean) {\r\n  return {\r\n    type: DRAWCHECK,\r\n    value: value\r\n  };\r\n}\r\nfunction corrected(value: boolean[]) {\r\n  return {\r\n    type: CORRECTED,\r\n    value: value\r\n  };\r\n}\r\nfunction bonusCorrect(value: boolean[]) {\r\n  return {\r\n    type: BONUSCORRECT,\r\n    value: value\r\n  };\r\n}\r\nfunction recentRound(value: number) {\r\n  return {\r\n    type: RECENTROUND,\r\n    value: value\r\n  };\r\n}\r\nfunction resultTrigger(value: boolean) {\r\n  return {\r\n    type: TRIGGER,\r\n    value: value\r\n  };\r\n}\r\nfunction roundSelect1(value: number) {\r\n  return {\r\n    type: ROUNDSELECT1,\r\n    value: value\r\n  };\r\n}\r\nfunction roundSelect2(value: number) {\r\n  return {\r\n    type: ROUNDSELECT2,\r\n    value: value\r\n  };\r\n}\r\nfunction userResult(value: any) {\r\n  return {\r\n    type: USERRESULT,\r\n    value: value\r\n  };\r\n}\r\n\r\n//액션 함수 export\r\nexport const actionCreators = {\r\n  list, accumulateList, graphSizeUp, graphSizeDown, drawCheck, corrected, recentRound, resultTrigger, bonusCorrect, roundSelect1, roundSelect2, userResult\r\n};\r\n\r\n//초기값 선언 타입은 가장 위에서 선언한 인터페이스\r\nconst initialState: State = {\r\n  list: [[]],\r\n  accumulateList: [],\r\n  graphSize: 1160,\r\n  drawCheck: false,\r\n  corrected: [],\r\n  bonusCorrect: [],\r\n  recentRound: 0,\r\n  resultTrigger: false,\r\n  roundSelect1: 1,\r\n  roundSelect2: 1,\r\n  userResult: {\r\n    first : 0,\r\n    second : 0,\r\n    third : 0,\r\n    fourth : 0,\r\n    fifth : 0,\r\n    last : 0\r\n  }\r\n};\r\n\r\n// reducers\r\nexport function Reducer(\r\n  state = initialState,\r\n  action: ActionTypes\r\n): State {\r\n  switch (action.type) {\r\n    case LIST:\r\n      return {\r\n        ...state,\r\n        list: action.newList\r\n      };\r\n    case ALIST:\r\n      return {\r\n        ...state,\r\n        accumulateList: action.newList\r\n      };\r\n    case GRAPHSIZE:\r\n      return {\r\n        ...state,\r\n        graphSize: action.size\r\n      };\r\n    case DRAWCHECK:\r\n      return {\r\n        ...state,\r\n        drawCheck: action.value\r\n      };\r\n    case CORRECTED:\r\n      return {\r\n        ...state,\r\n        corrected: action.value\r\n      };\r\n    case BONUSCORRECT:\r\n      return {\r\n        ...state,\r\n        bonusCorrect: action.value\r\n      };\r\n    case RECENTROUND:\r\n      return {\r\n        ...state,\r\n        recentRound: action.value\r\n      };\r\n    case TRIGGER:\r\n      return {\r\n        ...state,\r\n        resultTrigger: action.value\r\n      };\r\n    case ROUNDSELECT1:\r\n      return {\r\n        ...state,\r\n        roundSelect1: action.value\r\n      };\r\n    case ROUNDSELECT2:\r\n      return {\r\n        ...state,\r\n        roundSelect2: action.value\r\n      };\r\n      case USERRESULT:\r\n      return {\r\n        ...state,\r\n        userResult: action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\Footer.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\SearchLotto.tsx",["191"],"import { useEffect , useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport LineDiv from '../components/LineDiv'\r\nimport Axios from 'axios'\r\nimport ResultNum from '../components/ResultNum';\r\nimport styled from 'styled-components'\r\n//가장 상단에 위치한 섹션\r\n//처음에 로드되기때문에 로또의 회차 수를 가져오고 가장 최신회차의 번호를 출력한다.\r\nconst Div = styled.div`\r\n    margin-bottom : 30px;\r\n`\r\n\r\nconst SearchLotto = () => {\r\n    const [select,setSelect] = useState<number>(0)\r\n    const [numList,setNumList] = useState<number[]>([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setRoundSize = (value:number) => {\r\n        dispatch(actionCreators.recentRound(value))\r\n    }\r\n    const setRoundSelect2 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect2(value))\r\n    }\r\n    const setRoundSelect1 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect1(value))\r\n    }\r\n\r\n    //회차\r\n    var roundSize = useSelector((state:StoreState)=> state.Reducer.recentRound)\r\n\r\n    //최신 회차가 몇인지 가져옴.\r\n    const getSize = async () => {\r\n        await Axios.post(`${process.env.REACT_APP_URL}/`, {query : `\r\n        query{\r\n            roundSize\r\n        }\r\n        `}).then(res => {\r\n            var data = res.data.data.roundSize\r\n            setSelect(data)\r\n            setRoundSelect2(data)\r\n            setRoundSelect1(data-30)\r\n            setRoundSize(data)\r\n            document.getElementById(\"root\")!.style.display = \"block\"\r\n            getNum(data)\r\n\r\n        })\r\n    }\r\n\r\n    //선택한 회차 정보를 가져옴\r\n    const getNum = async (num : number) => {\r\n        await Axios.post(`${process.env.REACT_APP_URL}/`, {query : `\r\n            query{\r\n                winningNum(_id: ${num}){\r\n                    num1 num2 num3 num4 num5 num6 bonus\r\n                }\r\n            }\r\n        `}).then(res=> {\r\n            var obj = res.data.data.winningNum\r\n            var list = []\r\n            for(var data in obj){\r\n                list.push(obj[data])\r\n            }\r\n            setNumList([...list])\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //회차정보는 하단에 차트에서도 쓰이기때문에 처음에 가져와서 state로 관리한다.\r\n        getSize()\r\n    }, [])\r\n\r\n    //select 옵션 최신회차까지 생성\r\n    var arr = new Array(roundSize).fill(0)\r\n    var map = arr.map((x, idx: number) => <option key={idx} value={idx + 1}>{idx + 1}</option>)\r\n\r\n\r\n    //select onChange\r\n    const handleChange = (e:any) => {\r\n        setSelect(e.target.value)\r\n        getNum(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            <LineDiv fontSize={15} content={<div>지난 로또 조회  <select value={select} onChange={handleChange}>{map}</select>회차</div>}></LineDiv>\r\n            <p>{numList.map((x, idx) => {\r\n                if (idx === 6)\r\n                    return (\r\n                        <span key={idx}>+  <ResultNum key={idx} bonus={true} num={x}></ResultNum></span>\r\n                    )\r\n                else\r\n                    return (\r\n                        <ResultNum key={idx} num={x}></ResultNum>\r\n                    )\r\n            })}</p>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default SearchLotto\r\n","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\ChartSelect.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Loading.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\HallOfFame.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\UserResult.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\SnsGroup.js",[],["192","193"],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\RollingNum.js",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\Debounce.ts",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\LineDiv.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\ResultNum.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\ButtonGroup.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\LoadingSvg.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\SubTitle.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\NobodyWin.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\SlideFooterBtn.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\NotSpeedMode.tsx",["194","195"],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\SpeedMode.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\AccumulateChart.tsx",["196"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport Axios from 'axios'\r\nimport Chart from './Chart'\r\nimport ButtonGroup from './ButtonGroup';\r\nimport styled from 'styled-components'\r\nimport LineDiv from './LineDiv';\r\nimport { Debounce } from '../Debounce'\r\nimport Arrow from './Arrow';\r\nimport Button from './Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\n//실제 로또 통계 차트 선택 섹션\r\n\r\ntype props = {\r\n    addAList: Function\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n    display : inline-flex;\r\n    line-height : 1;\r\n    margin-right : 10px;\r\n`\r\n\r\nconst Span = styled.span`\r\n    font-size : .8em;\r\n    color : gray;\r\n    margin-right : 10px;\r\n    margin-top : 7px;\r\n    font-weight : 600;\r\n    white-space: nowrap;\r\n`\r\nconst AccumulateChart = ({ addAList }: props) => {\r\n\r\n    //로또 회차정보\r\n    const roundSize = useSelector((state: StoreState) => state.Reducer.recentRound)\r\n    const select1 = useSelector((state:StoreState) => state.Reducer.roundSelect1)\r\n    const select2 = useSelector((state:StoreState) => state.Reducer.roundSelect2)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setSelect1 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect1(value))\r\n    }\r\n    const setSelect2 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect2(value))\r\n    }\r\n\r\n    const winGraph = (skip: number, limit: number, bonus: boolean, sort: boolean) => {\r\n        if (roundSize === 0) return\r\n        Axios.post(`${process.env.REACT_APP_URL}/winGraph`, { skip: skip, limit: limit !== 0 ? limit : 1, bonus: bonus, sort: sort })\r\n            .then(res => {\r\n                addAList(res.data)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //처음 그래프 정보 로드\r\n        var [big, small] = bigSmall(select1, select2)\r\n        winGraph(small - 1, big - small + 1, false, false)\r\n    }, [roundSize])\r\n\r\n    //버튼 토글 \r\n    const [btnSelect, setBtnSelect] = useState<boolean[]>([true, false])\r\n    //sort버튼 토글\r\n    const [sortBtn, setSortBtn] = useState<boolean>(false)\r\n\r\n    //버튼 클릭 이벤트\r\n    const selected = (idx: number) => {\r\n        setBtnSelect(btnSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }\r\n\r\n    //최신회차까지 옵션 생성 1회차부터기때문에 +1\r\n    var arr = new Array(roundSize).fill(0)\r\n    var map = arr.map((x, idx: number) => <option key={idx} value={idx + 1}>{idx + 1}</option>)\r\n\r\n\r\n    //회차 선택을 큰 수, 작은 수 순으로 할 경우를 위해 만든 대소 비교 함수.\r\n    const bigSmall = (val1: number, val2: number) => {\r\n        return val1 > val2 ? [val1, val2] : [val2, val1]\r\n    }\r\n\r\n    //옵션1 이벤트\r\n    const handleChange = (e: any) => {\r\n        var val: number = parseInt(e.target.value)\r\n\r\n        var [big, small] = bigSmall(val, select2)\r\n        setSelect1(val)\r\n        winGraph(small - 1, big - small + 1, btnSelect[1], sortBtn)\r\n    }\r\n\r\n    //옵션2 이벤트\r\n    const handleChange2 = (e: any) => {\r\n        var val: number = parseInt(e.target.value)\r\n        var [big, small] = bigSmall(val, select1)\r\n        setSelect2(val)\r\n        winGraph(small - 1, big - small + 1, btnSelect[1], sortBtn)\r\n    }\r\n\r\n    //보너스 미포함 그래프\r\n    const noBonus = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        selected(idx)\r\n        var [big, small] = bigSmall(select2, select1)\r\n        winGraph(small - 1, big - small + 1, false, sortBtn)\r\n    }, 200)\r\n\r\n    //보너스 포함 그래프\r\n    const bonus = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        selected(idx)\r\n        var [big, small] = bigSmall(select2, select1)\r\n        winGraph(small - 1, big - small + 1, true, sortBtn)\r\n    }, 200)\r\n\r\n\r\n    //정렬\r\n    const sort = Debounce(() => {\r\n        var [big, small] = bigSmall(select2, select1)\r\n        if (sortBtn) {\r\n            winGraph(small - 1, big - small + 1, btnSelect[1], false)\r\n            setSortBtn(false)\r\n        } else {\r\n            winGraph(small - 1, big - small + 1, btnSelect[1], true)\r\n            setSortBtn(true)\r\n        }\r\n    }, 200)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LineDiv content={<div>\r\n                <select value={select1} onChange={handleChange}>\r\n                    {map}\r\n                </select>  회차부터&nbsp;&nbsp;\r\n            <select value={select2} onChange={handleChange2}>\r\n                    {map}\r\n                </select>  회차까지\r\n            </div>}></LineDiv>\r\n\r\n            <FlexDiv><Span>가장 많이 뽑힌</Span><ButtonGroup selected={btnSelect} content={[\"번호(보너스X)\", \"보너스번호\"]} click={[noBonus, bonus]}></ButtonGroup><Button border={true} click={sort} hoverBg=\"rgb(224,230,251)\" bg=\"white\" content={<Arrow fill=\"rgb(86,115,235)\" upDown={sortBtn}></Arrow>}></Button></FlexDiv>\r\n            \r\n            <Chart></Chart>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccumulateChart\r\n","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\UserChart.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Chart.js",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\Kakao.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\NaverBlog.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\KakaoStory.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\CopyUrl.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\SnsIcon\\FaceBook.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\models\\RankResultNum.ts",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\models\\RankResult.ts",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Button.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\Draw.tsx",["197","198"],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\DeleteSvg.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\DoubleArrow.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\NumLineWrap.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\NumList.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Rank.tsx",["199"],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\Arrow.tsx",[],"C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\components\\LineChart.js",["200"],"import { useRef, useEffect } from 'react'\r\nimport \"chartjs-plugin-labels\"\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux';\r\nimport Chart from 'chart.js';\r\n\r\n//Line차트\r\nconst ScrollDiv = styled.div`\r\n    overflow-x : auto;\r\n`\r\nconst ChartWrapper = styled.div`\r\n    width : ${props => props.size}px\r\n`\r\n\r\n\r\nconst PieChart = ({ rankList }) => {\r\n\r\n    var size = useSelector((state) => state.Reducer.graphSize);\r\n    const chart = useRef()\r\n    const list2 = useRef()\r\n    const size2 = useRef()\r\n\r\n\r\n    \r\n    \r\n    var labels = [\"1등\", \"2등\", \"3등\", \"4등\", \"5등\", \"꽝\"]\r\n    var data = [rankList?.getFirst, rankList?.getFirst, rankList?.getThird, rankList?.getFourth, rankList?.getFifth, rankList?.getLast]\r\n    var sum = data.reduce((a, b) => a + b)\r\n    var data2 = data.map(x => {\r\n        var result = ((x / sum) * 100)\r\n        if(Math.round(result)===0) return result.toFixed(5)\r\n        else return result.toFixed(2)\r\n    })\r\n    useEffect(() => {\r\n        if(JSON.stringify(rankList)===JSON.stringify(list2.current)&&size===size2.current) return\r\n        list2.current = rankList\r\n        size2.current = size\r\n        if(chart.current) chart.current.destroy()\r\n        var ctx = document.getElementById('myChart').getContext('2d');\r\n        // Chart.plugins.register({ 모든 툴팁 고정\r\n        //     beforeRender: function (chart) {\r\n        //         if (chart.config.options.showAllTooltips) {\r\n        //             // create an array of tooltips\r\n        //             // we can't use the chart tooltip because there is only one tooltip per chart\r\n        //             chart.pluginTooltips = [];\r\n        //             chart.config.data.datasets.forEach(function (dataset, i) {\r\n        //                 chart.getDatasetMeta(i).data.forEach(function (sector, j) {\r\n        //                     chart.pluginTooltips.push(new Chart.Tooltip({\r\n        //                         _chart: chart.chart,\r\n        //                         _chartInstance: chart,\r\n        //                         _data: chart.data,\r\n        //                         _options: chart.options.tooltips,\r\n        //                         _active: [sector]\r\n        //                     }, chart));\r\n        //                 });\r\n        //             });\r\n\r\n        //             // turn off normal tooltips\r\n        //             chart.options.tooltips.enabled = false;\r\n        //         }\r\n        //     },\r\n        //     afterDraw: function (chart, easing) {\r\n        //         if (chart.config.options.showAllTooltips) {\r\n        //             // we don't want the permanent tooltips to animate, so don't do anything till the animation runs atleast once\r\n        //             if (!chart.allTooltipsOnce) {\r\n        //                 if (easing !== 1)\r\n        //                     return;\r\n        //                 chart.allTooltipsOnce = true;\r\n        //             }\r\n\r\n        //             // turn on tooltips\r\n        //             chart.options.tooltips.enabled = true;\r\n        //             Chart.helpers.each(chart.pluginTooltips, function (tooltip) {\r\n        //                 tooltip.initialize();\r\n        //                 tooltip.update();\r\n        //                 // we don't actually need this since we are not animating tooltips\r\n        //                 tooltip.pivot();\r\n        //                 tooltip.transition(easing).draw();\r\n        //             });\r\n        //             chart.options.tooltips.enabled = false;\r\n        //         }\r\n        //     }\r\n        // });\r\n        //차트 gradient 설정\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#80b6f4');\r\n        gradientStroke.addColorStop(1, '#f49080');\r\n\r\n        var gradientFill = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0.6)\");\r\n        gradientFill.addColorStop(1, \"rgba(244, 144, 128, 0.6)\");\r\n        var chartjs = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: labels,\r\n                datasets: [{\r\n                    label: 'Chart Graph',\r\n                    borderColor: gradientStroke,\r\n                    pointBorderColor: gradientStroke,\r\n                    pointBackgroundColor: gradientStroke,\r\n                    pointHoverBackgroundColor: gradientStroke,\r\n                    pointHoverBorderColor: gradientStroke,\r\n                    pointHoverRadius: 10,\r\n                    pointHoverBorderWidth: 1,\r\n                    pointRadius: 3,\r\n                    fill: true,\r\n                    backgroundColor: gradientFill,\r\n                    data: data2,\r\n                    pointBorderWidth: 10,\r\n                    hoverBorderWidth: 13,\r\n                    data2: data\r\n\r\n\r\n                }]\r\n            },\r\n            animation: {\r\n                animateScale: true,\r\n                animateRotate: true,\r\n                easing: \"easeInOutBack\"\r\n            },\r\n            options: {\r\n                maintainAspectRatio: false, //차트 상위 div에 구속\r\n                legend: {\r\n                    display: false, //범례 안보이게.\r\n                },\r\n                scales: {\r\n                    yAxes: [{ //y축 설정\r\n                        ticks: {\r\n                            fontColor: \"rgba(0,0,0,0.5)\",\r\n                            fontStyle: \"bold\",\r\n                            beginAtZero: true, //데이터 0부터 시작\r\n                            stepSize : 20\r\n                        },\r\n                        \r\n\r\n                    }],\r\n                    xAxes: [{ //x축 설정\r\n                        gridLines: {\r\n                            zeroLineColor: \"transparent\"\r\n                        },\r\n                        ticks: {\r\n                            padding: 20,\r\n                            fontColor: \"rgba(0,0,0,0.5)\",\r\n                            fontStyle: \"bold\"\r\n                        }\r\n                    }]\r\n                },\r\n                scaleShowLabelBackdrop: true,\r\n                showAllTooltips: true,\r\n                tooltips: {\r\n                    displayColors: false,\r\n                    callbacks: {\r\n                        title: function () { //값을 리턴안해주기때문에 툴팁에 title이 안나온다. 안나오는 것이 깔끔해서 뺐음.\r\n                            return;\r\n                        },\r\n                        label: function (tooltipItem, data) { //라벨 커스텀. 확률과 횟수.\r\n                            return data['labels'][tooltipItem['index']] + \" - \" + data['datasets'][0]['data2'][tooltipItem['index']] + \"번 , 확률 - \" + data['datasets'][0]['data'][tooltipItem['index']] + \"%\";\r\n                        },\r\n                    }\r\n                },\r\n            }\r\n        });\r\n        chart.current = chartjs\r\n    }, [rankList, size])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ScrollDiv>\r\n                <ChartWrapper size={size - 1170}>\r\n                    {/* <Line\r\n                    options={{\r\n                        responsive: true,\r\n                        legend: {\r\n                            display: false,\r\n                            position: \"bottom\",\r\n                            labels : {\r\n                                padding : 10,\r\n                                boxWidth : 25,\r\n                                fontStyle : \"bold\",\r\n                                fontSize : 13\r\n\r\n                            }\r\n                        },\r\n\r\n                        plugins: {\r\n                            labels: [\r\n                                {\r\n                                    render: 'label',\r\n                                    arc: true,\r\n                                    position: 'outside',\r\n                                    fontSize : 14,\r\n                                    fontStyle: 'bold',\r\n                                    fontColor: \"black\"\r\n                                },\r\n                                {\r\n                                    render: 'percentage',\r\n                                    fontSize : 14,\r\n                                    fontStyle: 'bold',\r\n                                    fontColor: \"black\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    }}\r\n                    redraw={resize}\r\n                    data={expData}\r\n                    height={95}\r\n                    width={100}\r\n                /> */}\r\n                    <canvas height=\"300px\" id=\"myChart\"></canvas>\r\n                </ChartWrapper>\r\n            </ScrollDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PieChart\r\n","C:\\Users\\JAEHOON\\OneDrive\\바탕 화면\\프로젝트\\ts-app\\src\\sections\\FakeLotto.tsx",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":137,"column":10,"nodeType":"207","messageId":"208","endLine":137,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":75,"column":8,"nodeType":"211","endLine":75,"endColumn":10,"suggestions":"212"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"213","severity":1,"message":"214","line":2,"column":39,"nodeType":"207","messageId":"215","endLine":2,"endColumn":45},{"ruleId":"209","severity":1,"message":"216","line":58,"column":8,"nodeType":"211","endLine":58,"endColumn":10,"suggestions":"217"},{"ruleId":"209","severity":1,"message":"218","line":63,"column":8,"nodeType":"211","endLine":63,"endColumn":19,"suggestions":"219"},{"ruleId":"213","severity":1,"message":"220","line":1,"column":27,"nodeType":"207","messageId":"215","endLine":1,"endColumn":38},{"ruleId":"209","severity":1,"message":"221","line":51,"column":8,"nodeType":"211","endLine":51,"endColumn":10,"suggestions":"222"},{"ruleId":"209","severity":1,"message":"223","line":140,"column":8,"nodeType":"211","endLine":140,"endColumn":10,"suggestions":"224"},{"ruleId":"209","severity":1,"message":"225","line":165,"column":8,"nodeType":"211","endLine":165,"endColumn":24,"suggestions":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"@typescript-eslint/no-redeclare","'bonusCorrect' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSize'. Either include it or remove the dependency array.","ArrayExpression",["229"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","unusedVar","React Hook useEffect has a missing dependency: 'setUserResult'. Either include it or remove the dependency array. If 'setUserResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["230"],"React Hook useEffect has missing dependencies: 'select1', 'select2', and 'winGraph'. Either include them or remove the dependency array.",["231"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'mode' and 'stop'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has missing dependencies: 'hide', 'idx', 'listSize', 'rankResult', 'rankResultNum', 'result', and 'setUserResult'. Either include them or remove the dependency array. If 'setUserResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["233"],"React Hook useEffect has missing dependencies: 'data', 'data2', and 'labels'. Either include them or remove the dependency array.",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [getSize]",{"range":"247","text":"248"},"Update the dependencies array to be: [setUserResult]",{"range":"249","text":"250"},"Update the dependencies array to be: [roundSize, select1, select2, winGraph]",{"range":"251","text":"252"},"Update the dependencies array to be: [mode, stop]",{"range":"253","text":"254"},"Update the dependencies array to be: [hide, idx, listSize, rankResult, rankResultNum, result, setUserResult]",{"range":"255","text":"256"},"Update the dependencies array to be: [data, data2, labels, rankList, size]",{"range":"257","text":"258"},[2256,2258],"[getSize]",[1809,1811],"[setUserResult]",[1944,1955],"[roundSize, select1, select2, winGraph]",[1530,1532],"[mode, stop]",[5301,5303],"[hide, idx, listSize, rankResult, rankResultNum, result, setUserResult]",[6813,6829],"[data, data2, labels, rankList, size]"]