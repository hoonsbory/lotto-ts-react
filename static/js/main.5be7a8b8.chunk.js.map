{"version":3,"sources":["store/store.ts","components/LineDiv.tsx","Debounce.ts","components/SubTitle.tsx","components/Button.tsx","components/ResultNum.tsx","components/NumLineWrap.tsx","sections/Draw.tsx","components/NumList.tsx","components/Rank.tsx","components/DeleteSvg.tsx","models/RankResultNum.ts","models/RankResult.ts","components/NotSpeedMode.tsx","components/SpeedMode.tsx","components/ButtonGroup.tsx","sections/FakeLotto.tsx","components/Chart.js","components/Arrow.tsx","store/ChartStore.ts","components/AccumulateChart.tsx","components/LineChart.js","components/UserChart.tsx","sections/ChartSelect.tsx","sections/SearchLotto.tsx","components/NobodyWin.tsx","components/LoadingSvg.tsx","sections/HallOfFame.tsx","Throttle.ts","components/DoubleArrow.tsx","components/SlideFooterBtn.tsx","components/RollingNum.js","sections/UserResult.tsx","SnsIcon/CopyUrl.tsx","SnsIcon/FaceBook.tsx","SnsIcon/Kakao.tsx","SnsIcon/NaverBlog.tsx","SnsIcon/KakaoStory.tsx","components/SnsGroup.js","sections/Footer.tsx","components/Loading.tsx","components/UpdateInterval.ts","App.tsx","reportWebVitals.ts","store/index.ts","theme.ts","global.ts","index.tsx"],"names":["LIST","ALIST","GRAPHSIZE","DRAWCHECK","CORRECTED","BONUSCORRECT","RECENTROUND","TRIGGER","ROUNDSELECT1","ROUNDSELECT2","USERRESULT","actionCreators","list","newList","type","accumulateList","graphSizeUp","size","graphSizeDown","drawCheck","value","corrected","recentRound","resultTrigger","bonusCorrect","roundSelect1","roundSelect2","userResult","initialState","graphSize","first","second","third","fourth","fifth","last","Div","styled","div","props","color","fontSize","LineDiv","content","Debounce","func","timeout","timer","args","clearTimeout","setTimeout","Head","h3","SubTitle","Btn","button","float","border","bg","sessionStorage","getItem","hoverBg","theme","noneOutline","Button","click","id","onClick","NumSpan","span","fadeUp","bonus","ResultNum","num","correct","NumLineWrapper","p","hide","idx","NumLineWrap","SmallSpan","Draw","setTrigger","setCorrect","setbonusCorrect","mode","useState","result","setResult","interval","useRef","useEffect","random","stop","arr","document","getElementById","setAttribute","current","setInterval","clearInterval","number","Math","floor","includes","innerText","toString","text","parseInt","i","length","style","display","removeAttribute","map","x","selected","NumList","RankSpan","Rank","rankResultNum","rankResult","listSize","setUserResult","trigger","rankColor","setRankColor","sendResult","sumResult","resultNums","a","Axios","post","process","then","res","console","log","data","catch","err","correctList","filter","bonusNum","indexOf","setLast","setFifth","setFourth","list2","forEach","setSecond","setSecondNums","setFirst","setFirstNums","setThird","setThirdNums","rank","getFirst","getSecond","getThird","getFourth","name","window","prompt","trim","setWinnerName","pastResult","localStorage","newResult","JSON","parse","getFifth","getLast","setItem","stringify","firstChild","transform","DeleteSvg","width","xmlns","data-name","viewBox","y","d","RankResultNum","firstNums","secondNums","thirdNums","winnerName","this","push","RankResult","obj","ScrollList","innerHeight","ListIdxSpan","NotSpeedMode","draw","setList","setDraw","selectBtn","setSelectBtn","select","limit","splice","reset","confirm","childElementCount","alert","tenReps","count","random11","deleteSelectLine","deleteLine","node","scrollTo","clientHeight","height","overscanRowsCount","rowCount","rowHeight","rowRenderer","sort","b","idx2","containerStyle","maxWidth","maxHeight","SpeedMode","randomTest","j","Group","btnCss","css","selectBg","selectColor","FirstBtn","LastBtn","ButtonGroup","hover","Section","section","sectionCss","FakeLotto","useSelector","state","Reducer","dispatch","useDispatch","modeBtn","setModeBtn","modeChange","check","ChartWrapper","ScrollDiv","Chart","ChartReducer","chartMainData","chart","destroy","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","gradientFill","chartjs","Chart2","labels","datasets","label","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","backgroundColor","pointBorderWidth","hoverBorderWidth","animation","animateScale","animateRotate","easing","options","maintainAspectRatio","legend","plugins","render","scales","yAxes","ticks","fontColor","fontStyle","beginAtZero","suggestedMax","xAxes","gridLines","zeroLineColor","padding","scaleShowLabelBackdrop","showAllTooltips","tooltips","displayColors","callbacks","title","tooltipItem","Arrow","upDown","CHARTMAINDATA","CHARTLIST","CHARTBONUSLIST","USERCHARTSUM","USERCHARTLIST","SORTBTN","chartList","chartBonusList","userChartSum","newData","userChartList","sortBtn","FlexDiv","Span","AccumulateChart","roundSize","select1","select2","MainList","setMainList","setSortBtn","winGraph","skip","btnSelect","setBtnSelect","Array","bigSmall","val1","val2","noBonus","onChange","e","val","target","big","small","PieChart","rankList","sum","reduce","data2","round","toFixed","stepSize","UserChart","rankChart","winNumChart","ChartSelect","graphSelect","setGraphSelect","btnStateChange","selected2","SearchLotto","setSelect","numList","setNumList","getNum","query","winningNum","GoLotto","NobodyWin","LoadingSvg","margin","background","shapeRendering","preserveAspectRatio","rx","ry","attributeName","values","keyTimes","dur","begin","repeatCount","GroupWrapper","NumWrapper","NameSpan","HallOfFame","getWinData","rankData","pageData","page","winDataByRank","remove","scrollEvent","throttling","scrollDiv","scrollHeight","htmlHeight","scrollPosition","scrollTop","onScroll","numCheck","time","substr","Object","keys","DoubleArrow","version","strokeWidth","BtnDiv","upDownBtn","SlideFooterBtn","setUpDownBtn","numberCounter","target_frame","target_number","addString","diff","target_count","counter","prototype","self","ceil","innerHTML","replace","FixedDiv","Title","LeftDiv","RightDiv","MainDivWrap","MainCss","MainSpan","MainSpan2","MainSmallSpan","MainSmallSpanWrapper","UserResult","CopyURL","stroke","FaceBook","Kakao","NaverBlog","KakaoStory","BtnCss","LeftButton","RightButton","HiddenTextArea","textarea","ToastMsg","SnsGroup","isInitialized","init","Link","createDefaultButton","container","objectType","description","imageUrl","imageWidth","imageHeight","link","mobileWebUrl","webUrl","buttons","screen","popupWidth","popupHeight","url","facebook","open","kakaoStory","naver","urlCopy","toast","opacity","copyText","execCommand","blur","readOnly","P","A","Footer","href","Bg","CenterDiv","Loading","UpdateInterval","setRoundSize","setRoundSelect1","getSize","setChartBonusList","getRankData","resultSum","get","disableReactDevTools","pcCheck","navigator","userAgent","App","className","REACT_APP_API_KEY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","keyframes","flexDiv","GlobalStyle","createGlobalStyle","dotenv","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","ReactDOM"],"mappings":"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","file":"static/js/main.5be7a8b8.chunk.js","sourcesContent":["// types\r\n\r\n//interface를 통해 타입을 정해준다.\r\nexport interface State {\r\n  list: number[][];\r\n  accumulateList: number[][];\r\n  graphSize: number;\r\n  drawCheck: boolean;\r\n  corrected: boolean[];\r\n  bonusCorrect: boolean[];\r\n  recentRound: number;\r\n  resultTrigger: boolean;\r\n  roundSelect1: number\r\n  roundSelect2: number\r\n  userResult: any\r\n}\r\n\r\n//액션 타입\r\nexport const LIST = \"LIST\";\r\nexport const ALIST = \"ALIST\";\r\nexport const RESIZE = \"RESIZE\";\r\nexport const GRAPHSIZE = \"GRAPHSIZE\";\r\nexport const DRAWCHECK = \"DRAWCHECK\";\r\nexport const CORRECTED = \"CORRECTED\";\r\nexport const BONUSCORRECT = \"BONUSCORRECT\";\r\nexport const RECENTROUND = \"RECENTROUND\";\r\nexport const TRIGGER = \"TRIGGER\";\r\nexport const ROUNDSELECT1 = \"ROUNDSELECT1\"\r\nexport const ROUNDSELECT2 = \"ROUNDSELECT2\"\r\nexport const USERRESULT = \"USERRESULT\"\r\n\r\n\r\n//액션 인터페이스 , 함수의 인자를 여기서 설정한다.\r\ninterface ListAction {\r\n  newList: number[][];\r\n  type: typeof LIST;\r\n}\r\n\r\ninterface AccumulateListAction {\r\n  newList: number[][];\r\n  type: typeof ALIST;\r\n}\r\n\r\ninterface GraphSize {\r\n  size: number;\r\n  type: typeof GRAPHSIZE;\r\n}\r\ninterface DrawCheck {\r\n  value: boolean;\r\n  type: typeof DRAWCHECK;\r\n}\r\ninterface Corrected {\r\n  value: boolean[];\r\n  type: typeof CORRECTED;\r\n}\r\ninterface bonusCorrect {\r\n  value: boolean[];\r\n  type: typeof BONUSCORRECT;\r\n}\r\ninterface RecentRound {\r\n  value: number;\r\n  type: typeof RECENTROUND;\r\n}\r\n\r\ninterface ResultTrigger {\r\n  value: boolean;\r\n  type: typeof TRIGGER;\r\n}\r\ninterface RoundSelect1 {\r\n  value: number;\r\n  type: typeof ROUNDSELECT1;\r\n}\r\ninterface RoundSelect2 {\r\n  value: number;\r\n  type: typeof ROUNDSELECT2;\r\n}\r\ninterface UserResult {\r\n  value: any;\r\n  type: typeof USERRESULT;\r\n}\r\n\r\ntype ActionTypes = ListAction |\r\n  AccumulateListAction |\r\n  GraphSize |\r\n  DrawCheck | Corrected |\r\n  RecentRound |\r\n  ResultTrigger |\r\n  bonusCorrect |\r\n  RoundSelect1 |\r\n  RoundSelect2 | \r\n  UserResult\r\n// interface ActionTypes {\r\n//   actionTypes : ListAction | List2Action\r\n// }\r\n// | ChangeInputAction;\r\n\r\n// actions\r\n\r\n\r\n//액션 인터페이스 설정한 내용을 토대로 함수 작성.\r\nfunction list(newList: number[][]) {\r\n  return {\r\n    type: LIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction accumulateList(newList: number[]) {\r\n  return {\r\n    type: ALIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction graphSizeUp(size: number) {\r\n  return {\r\n    type: GRAPHSIZE,\r\n    size: size\r\n  };\r\n}\r\nfunction graphSizeDown(size: number) {\r\n  return {\r\n    type: GRAPHSIZE,\r\n    size: size\r\n  };\r\n}\r\nfunction drawCheck(value: boolean) {\r\n  return {\r\n    type: DRAWCHECK,\r\n    value: value\r\n  };\r\n}\r\nfunction corrected(value: boolean[]) {\r\n  return {\r\n    type: CORRECTED,\r\n    value: value\r\n  };\r\n}\r\nfunction bonusCorrect(value: boolean[]) {\r\n  return {\r\n    type: BONUSCORRECT,\r\n    value: value\r\n  };\r\n}\r\nfunction recentRound(value: number) {\r\n  return {\r\n    type: RECENTROUND,\r\n    value: value\r\n  };\r\n}\r\nfunction resultTrigger(value: boolean) {\r\n  return {\r\n    type: TRIGGER,\r\n    value: value\r\n  };\r\n}\r\nfunction roundSelect1(value: number) {\r\n  return {\r\n    type: ROUNDSELECT1,\r\n    value: value\r\n  };\r\n}\r\nfunction roundSelect2(value: number) {\r\n  return {\r\n    type: ROUNDSELECT2,\r\n    value: value\r\n  };\r\n}\r\nfunction userResult(value: any) {\r\n  return {\r\n    type: USERRESULT,\r\n    value: value\r\n  };\r\n}\r\n\r\n//액션 함수 export\r\nexport const actionCreators = {\r\n  list, accumulateList, graphSizeUp, graphSizeDown, drawCheck, corrected, recentRound, resultTrigger, bonusCorrect, roundSelect1, roundSelect2, userResult\r\n};\r\n\r\n//초기값 선언 타입은 가장 위에서 선언한 인터페이스\r\nconst initialState: State = {\r\n  list: [[]],\r\n  accumulateList: [],\r\n  graphSize: 1160,\r\n  drawCheck: false,\r\n  corrected: [],\r\n  bonusCorrect: [],\r\n  recentRound: 0,\r\n  resultTrigger: false,\r\n  roundSelect1: 1,\r\n  roundSelect2: 1,\r\n  userResult: {\r\n    first : 0,\r\n    second : 0,\r\n    third : 0,\r\n    fourth : 0,\r\n    fifth : 0,\r\n    last : 0\r\n  }\r\n};\r\n\r\n// reducers\r\nexport function Reducer(\r\n  state = initialState,\r\n  action: ActionTypes\r\n): State {\r\n  switch (action.type) {\r\n    case LIST:\r\n      return {\r\n        ...state,\r\n        list: action.newList\r\n      };\r\n    case ALIST:\r\n      return {\r\n        ...state,\r\n        accumulateList: action.newList\r\n      };\r\n    case GRAPHSIZE:\r\n      return {\r\n        ...state,\r\n        graphSize: action.size\r\n      };\r\n    case DRAWCHECK:\r\n      return {\r\n        ...state,\r\n        drawCheck: action.value\r\n      };\r\n    case CORRECTED:\r\n      return {\r\n        ...state,\r\n        corrected: action.value\r\n      };\r\n    case BONUSCORRECT:\r\n      return {\r\n        ...state,\r\n        bonusCorrect: action.value\r\n      };\r\n    case RECENTROUND:\r\n      return {\r\n        ...state,\r\n        recentRound: action.value\r\n      };\r\n    case TRIGGER:\r\n      return {\r\n        ...state,\r\n        resultTrigger: action.value\r\n      };\r\n    case ROUNDSELECT1:\r\n      return {\r\n        ...state,\r\n        roundSelect1: action.value\r\n      };\r\n    case ROUNDSELECT2:\r\n      return {\r\n        ...state,\r\n        roundSelect2: action.value\r\n      };\r\n      case USERRESULT:\r\n      return {\r\n        ...state,\r\n        userResult: action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n//양옆에 라인이 있는 div 커스터마이징 할 수 있게 props 설정해줌\r\ninterface styleProps {\r\n    color? : string;\r\n    fontSize? : number;\r\n}\r\ninterface props {\r\n    color? : string;\r\n    fontSize? : number;\r\n    content : any;\r\n}\r\n\r\n\r\nconst Div = styled.div<styleProps>`\r\n    margin-top : 10px;\r\n    margin-bottom : 5px;\r\n    color : ${props => props.color || 'unset'};\r\n    font-size : ${props => props.fontSize+\"px\" || 'unset'};\r\n    font-weight : 600;\r\n    display: flex;\r\n    align-items: center;\r\n    white-space: nowrap;\r\n    &:before{\r\n        content: \"\";\r\n        margin-right : 8px;\r\n        flex: 0%;\r\n        height: 1px;\r\n        background: rgba(134, 134, 134, 0.19);\r\n        z-index: -100;\r\n    }\r\n    &:after{\r\n        content: \"\";\r\n        margin-left : 8px;\r\n        flex: 0%;\r\n        height: 1px;\r\n        background: rgba(134, 134, 134, 0.19);\r\n        z-index: -100;\r\n    }\r\n`\r\n\r\nconst LineDiv = ({color,content,fontSize}:props) => {\r\n    return (\r\n        <Div color={color} fontSize={fontSize}>\r\n            {content}\r\n        </Div>\r\n    )\r\n}\r\nexport default LineDiv\r\n\r\n","// export function Debounce<Params extends any[]>(callback: (...args: Params) => any, milliseconds: number) {\r\n//     let debounceChek: NodeJS.Timeout\r\n//     return function (...args: Params) {\r\n//         // clearTimeout을 settimeout전에 걸어줘서 아무리 많이 버튼을 눌러도 \r\n//         //그 전 setTimeout들은 전부 삭제되고 마지막 setTimeout만 실행된다.\r\n//         clearTimeout(debounceChek);\r\n//         debounceChek = setTimeout(() => {\r\n//         console.log(debounceChek)\r\n//             callback(...args);\r\n//         }, milliseconds);\r\n//     }\r\n// }\r\nexport function Debounce<Params extends any[]>(\r\n    func: (...args: Params) => any,\r\n    timeout: number\r\n  ) {\r\n    let timer: NodeJS.Timeout;\r\n    return (...args: Params) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        func(...args);\r\n      }, timeout);\r\n    }\r\n  }","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n//서브타이틀\r\nconst Head = styled.h3`\r\n    background : rgb(86,115,235);\r\n    color : white;\r\n    border-radius : 15px;\r\n    padding : 5px 10px;\r\n    transition:all ease-out .3s;\r\n    white-space: nowrap;\r\n`\r\n\r\ntype props = {\r\n    content : any\r\n}\r\n\r\nconst SubTitle = ({content}:props) => {\r\n    return (\r\n        <Head>{content}</Head>\r\n    )\r\n}\r\n\r\nexport default SubTitle\r\n","import styled from 'styled-components'\r\n//기본 버튼.\r\ninterface btnProps {\r\n    color?: string\r\n    bg? : string\r\n    hoverBg? : string\r\n    float? : string\r\n    border? : boolean\r\n    fontSize? : string\r\n}\r\ninterface btnStyle {\r\n    color?: string;\r\n    bg?: string;\r\n    content: any;\r\n    click?: any;\r\n    id?: string;\r\n    hoverBg? : string\r\n    float? : string\r\n    fontSize? : string\r\n    border? : boolean\r\n}\r\nconst Btn = styled.button<btnProps>`\r\n        float : ${props => props.float};\r\n        border : ${props => props.border ? \"1px solid rgba(193,193,193,0.565)\" : 0};\r\n        margin-bottom : 5px;\r\n        margin-right : 5px;\r\n        background : ${props => props.bg || \"#EAEAEA\"};\r\n        color : ${props => props.color || \"unset\"};\r\n        border-radius : 5px;\r\n        font-weight : 600;\r\n        white-space: nowrap;\r\n        font-size : ${props => props.fontSize || \".9em\"} !important;\r\n        ${props => sessionStorage.getItem(\"mobile\")===\"true\" ? `&:active{background : ${props.hoverBg || \"rgb(70, 77, 82)\"}; color : white;}`: `&:hover{background : ${props.hoverBg || \"rgb(86,115,235)\"}; color : white;}`}\r\n        ${props => props.theme.noneOutline}\r\n    `\r\nconst Button = ({float,color,bg,content,click,id,hoverBg,border, fontSize}:btnStyle) => {\r\n    return (\r\n        <Btn fontSize={fontSize} border={border} float={float} hoverBg={hoverBg} color={color} bg={bg} onClick={click} id={id}> \r\n            {content}\r\n        </Btn>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import styled from 'styled-components'\r\n\r\n//내가 뽑은 혹은 추첨한 로또 번호 리스트로 뿌려줄 span\r\ninterface spanProps{\r\n    //맞춘 번호는 색다르게.\r\n    bonus? : boolean\r\n    corrected?: boolean\r\n    bonusCorrect?: boolean\r\n\r\n}\r\n\r\ninterface resultProps {\r\n    num : number\r\n    bonus? : boolean\r\n    correct? : boolean\r\n    bonusCorrect? : boolean\r\n\r\n}\r\n\r\nconst NumSpan = styled.span<spanProps>`\r\n    animation: ${props=> props.theme.fadeUp} .5s linear alternate;\r\n    display : inline-block;\r\n    width : 2em;\r\n    border : 1px solid rgba(86, 115, 235, 0.19);\r\n    padding : .3em 0px;\r\n    margin-right : 5px;\r\n    background : ${props => props.bonusCorrect || props.bonus ? \"rgb(224,230,251)\" : (props.corrected ? \"rgba(235, 83, 116,.12)\" :  \"white\")};\r\n    color : ${props => props.corrected ? \"rgb(235, 83, 116)\" : \"rgb(70, 77, 82)\"};\r\n    border-radius : 1500px;\r\n    font-size : .9em !important;\r\n    font-weight : 600;\r\n`\r\n\r\nconst ResultNum = ({num,correct,bonusCorrect,bonus}:resultProps) => {\r\n    return (\r\n        <NumSpan bonusCorrect={bonusCorrect} corrected={correct} bonus={bonus}>\r\n            {num}\r\n        </NumSpan>\r\n    )\r\n}\r\n\r\nexport default ResultNum\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n//번호 6개 감싸는 p태그 짝수번째에 bg\r\n\r\nconst NumLineWrapper = styled.p<props>`\r\n    border-bottom : 1px solid rgba(134,134,134,0.19);\r\n    padding-bottom : 15px;\r\n    margin-bottom : 0;\r\n    margin-top : 0;\r\n    padding-top: 15px;\r\n    padding-left : 5px;\r\n    background : ${props => props.hide ? \"unset\" : (props.idx%2 ? \"unset\" : \"rgba(134,134,134,0.19)\")};\r\n    animation: ${props => props.theme.fadeUp} .5s linear alternate;\r\n    border-radius : 10px;\r\n`\r\ntype props = {\r\n    content? : any\r\n    idx: number\r\n    hide?: boolean\r\n}\r\n\r\nconst NumLineWrap = ({content,idx,hide}:props) => {\r\n    return (\r\n        <NumLineWrapper idx={idx+1} hide={hide}>\r\n            {content}\r\n        </NumLineWrapper>\r\n    )\r\n}\r\n\r\nexport default NumLineWrap\r\n","import React, { useState, useCallback, useEffect, useRef } from 'react'\r\nimport { Debounce } from '../Debounce'\r\nimport Button from '../components/Button'\r\nimport ResultNum from '../components/ResultNum';\r\nimport LineDiv from '../components/LineDiv';\r\nimport styled from 'styled-components'\r\nimport NumLineWrap from '../components/NumLineWrap';\r\n//번호 추첨기\r\nconst Div = styled.div`\r\n    border-top : 1px solid rgba(134,134,134,0.19);\r\n    background: rgba(134,134,134,0.07);\r\n    animation: ${props => props.theme.fadeUp} .5s linear alternate;\r\n    margin-bottom : 15px;\r\n    margin-top : 15px;\r\n`\r\nconst SmallSpan = styled.span`\r\n    color : gray;\r\n    font-size : 12px;\r\n`\r\ntype props = {\r\n    list: number[][]\r\n    setDraw: Function\r\n    setCorrect: Function\r\n    correct: boolean[]\r\n    setbonusCorrect: Function\r\n    bonusCorrect: boolean[]\r\n    setTrigger: Function\r\n    trigger: boolean\r\n    mode: boolean\r\n}\r\n\r\nconst Draw = ({ setTrigger, list, setCorrect, correct, setbonusCorrect, bonusCorrect, mode }: props) => {\r\n\r\n    //useSelector로 state에 접근\r\n    // var list = useSelector((state: StoreState) => state.Reducer.list);\r\n    const [result, setResult] = useState<number[]>([]);\r\n    //정답 유무를 구별할 boolean 배열. 동적으로 style component를 변경하려면 props를 state로 관리해야한다. \r\n    // const [correct,setCorrect] = useState<boolean[]>([])\r\n    \r\n    //인터벌 변수\r\n    const interval = useRef<any>();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //스피드모드 일때 자동으로 추첨 진행\r\n        if (mode) {\r\n            random([])\r\n            stop()\r\n        }\r\n    }, [])\r\n\r\n    //랜덤으로 숫자 돌리기. 50ms마다 text의 숫자를 교체해준다. 이미 뽑힌 숫자는 제외한다.\r\n    const random = (arr: Array<number>) => {\r\n        document.getElementById('startBtn')?.setAttribute(\"disabled\", \"true\");\r\n        var num = document.getElementById(\"num\")\r\n        interval.current = setInterval(() => {\r\n            if (!num) clearInterval(interval.current)\r\n            while (num) {\r\n                let number = Math.floor((Math.random() * 45) + 1)\r\n                if (!arr.includes(number)) {\r\n                    num.innerText = number.toString()\r\n                    break;\r\n                }\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n\r\n    //state가 변경되어 렌더링이 되면 이전에 시작된 interval값을 찾지 못하기 때문에 usecallback으로 함수 재생성을 막아줘야함.\r\n    const stop = Debounce(() => {\r\n        //인터벌 중지\r\n        clearInterval(interval.current)\r\n        //랜덤에서 뽑힌 번호.\r\n        let text:any = document.getElementById('num')?.innerText\r\n        let num = parseInt(text)\r\n        if (num === 0) return\r\n\r\n        //유저가 뽑은 리스트를 순회하면서 맞춘 번호가 있으면 맞춘 번호 correct에 저장\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].includes(num)) {\r\n                if (result.length !== 6) {\r\n                    correct[num] = true;\r\n                    setCorrect([...correct])\r\n                    break\r\n                }\r\n                else {\r\n                    bonusCorrect[num] = true;\r\n                    setbonusCorrect([...bonusCorrect])\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        // list.forEach(i => {\r\n        //     if (i.includes(num)) {\r\n        //         if (result.length !== 6) {\r\n        //             correct[num] = true;\r\n        //             setCorrect([...correct])\r\n        //             console.log(2)\r\n        //             return\r\n        //         }\r\n        //         else {\r\n        //             bonusCorrect[num] = true;\r\n        //             setbonusCorrect([...bonusCorrect])\r\n        //             console.log(3)\r\n        //             return\r\n        //         }\r\n        //     }\r\n        //     console.log(1)\r\n        // })\r\n\r\n        //뽑힌 번호리스트에 저장\r\n        setResult([...result, num])\r\n\r\n\r\n        //추첨이 다 안끝났으면 600ms후에 다시 랜덤으로 숫자 뽑기 시작. \r\n        //스피드 모드일 때는 유저가 클릭해서 하나씩 뽑지 않고 자동으로 진행하기 때문에 버튼 클릭\r\n        if (result.length < 6)\r\n            setTimeout(() => {\r\n                random([...result, num])\r\n                if (mode)\r\n                    document.getElementById('stopBtn')?.click()\r\n            }, 600);\r\n\r\n        //번호가 다 뽑혔으면 트리거에 true를 줘서 Rank 컴포넌트에서 결과를 계산하게 함.\r\n        else {\r\n            document.getElementById(\"loadingBg\")!.style.display = \"none\";\r\n            document.getElementById('stopBtn')!.setAttribute(\"disabled\", \"true\");\r\n            setTrigger(true)\r\n        }\r\n    }, 700)\r\n\r\n\r\n    //초기화. 인터벌도 중지 시키고 뽑힌 리스트도 초기화.\r\n    const reset = () => {\r\n        clearInterval(interval.current)\r\n        document.getElementById('num')!.innerText = \"0\"\r\n        setCorrect([])\r\n        setbonusCorrect([])\r\n        setResult([])\r\n        setTimeout(() => {\r\n            setTrigger(false)\r\n        }, 200);\r\n\r\n        document.getElementById('stopBtn')!.removeAttribute(\"disabled\")\r\n        document.getElementById('startBtn')!.removeAttribute(\"disabled\")\r\n    }\r\n\r\n    return (\r\n        <Div id=\"drawSec\">\r\n            <h1 id=\"num\" style={{ fontSize: \"30px\" }}>0</h1>\r\n            <div style={{display : mode ? \"none\" : \"block\"}}>\r\n                <Button fontSize=\"1.1em\" id=\"startBtn\" content=\"추첨시작\" click={() => random([])}></Button>\r\n                <Button fontSize=\"1.1em\" id=\"stopBtn\" click={stop} content=\"뽑기\"></Button>\r\n                <Button fontSize=\"1.1em\" id=\"resetBtn\" color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" click={reset} content=\"초기화\"></Button>\r\n            </div>\r\n            <LineDiv fontSize={15} content=\"추첨 결과\"></LineDiv>\r\n            <NumLineWrap idx={0} content={result.length === 0 ? <SmallSpan id=\"beforeDrawNotice\">추첨시작을 누른 후 당첨숫자를 뽑아보세요</SmallSpan> : result.map((x, idx) => {\r\n                if (idx === 6)\r\n                    return (\r\n                        <span key={idx} id=\"bonusSpan\">+  <ResultNum key={idx} bonusCorrect={bonusCorrect[x]} correct={correct[x]} bonus={true} num={x}></ResultNum></span>\r\n                    )\r\n                else\r\n                    return (\r\n                        <ResultNum key={idx} bonusCorrect={bonusCorrect[x]} correct={correct[x]} num={x}></ResultNum>\r\n                    )\r\n            })}></NumLineWrap>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default Draw\r\n","import styled from 'styled-components'\r\n\r\n//1~45까지 번호 SPAN\r\n\r\ninterface numSpanProps {\r\n    selected?: boolean\r\n}\r\n\r\ninterface props{\r\n    content : number\r\n    click : Function\r\n    selected?: boolean\r\n    id : string\r\n}\r\n//이런 식으로 자주 쓰일 것 같은 css를 만들어놓고 편리하게 사용 가능.\r\n// const hoverForPC = css`\r\n//     &:hover{\r\n//         background : rgb(70, 77, 82);\r\n//         color : white;\r\n//     }\r\n// `\r\nconst NumSpan = styled.button<numSpanProps>`\r\n        @media(max-width : 414px){\r\n            padding : 6px 0px;\r\n            width : 30px;\r\n            font-size : 12px;\r\n        }\r\n        width : 35px;\r\n        outline : 0;\r\n        cursor : pointer;\r\n        border : 0;\r\n        transition:all ease-out .3s;\r\n        padding : 8px 0px;\r\n        margin-bottom : 5px;\r\n        margin-right : 5px;\r\n        background : ${props => props.selected ? \"rgb(70, 77, 82)\" : \"#EAEAEA\"};\r\n        color : ${props => props.selected ? \"white\" : \"unset\"};\r\n        border-radius : 10px;\r\n        font-weight : 600;\r\n        ${sessionStorage.getItem(\"mobile\")===\"true\" ? '': '&:hover{background : rgba(70, 77, 82,.7)}'}\r\n    `\r\n\r\n\r\n\r\n\r\n\r\nconst NumList = ({content,click,selected,id}:props) => {\r\n    \r\n    return (\r\n        <NumSpan id={id} selected={selected} onClick={()=>click(content)}>{content}</NumSpan>\r\n    )\r\n}\r\n\r\nexport default NumList\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { RankResult } from '../models/RankResult.js'\r\nimport { RankResultNum } from '../models/RankResultNum'\r\nimport Axios from 'axios'\r\n//결과를 출력하는 컴포넌트. 도출부터 전송까지 여기서 다 함.\r\ntype props = {\r\n    trigger?: boolean\r\n    list: number[]\r\n    bonusCorrect: boolean[]\r\n    correct: boolean[]\r\n    listSize: number\r\n    idx: number\r\n    rankResult: RankResult\r\n    rankResultNum: RankResultNum\r\n    setUserResult: Function\r\n    hide?: boolean\r\n}\r\n\r\ntype RankProps = {\r\n    bg: string\r\n    hide?: boolean\r\n}\r\n\r\nconst RankSpan = styled.span<RankProps>`\r\n    background: ${props => props.bg || 'none'};\r\n    border-radius: 5px;\r\n    padding: .3em;\r\n    color: white;\r\n    float : left;\r\n`\r\n\r\n\r\nconst Rank: any = ({ rankResultNum, rankResult, hide, list, listSize, idx, correct, bonusCorrect, setUserResult, trigger }: props) => {\r\n    const [rankColor, setRankColor] = useState<string[]>([\"\", \"\"])\r\n    //당첨 결과에 따른 bg를 담을 state\r\n\r\n\r\n    const result = () => {\r\n        //맞은 개수 계산\r\n        var correctList: any = list.map((x, idx) => { if (correct[x]) return idx; else return undefined}).filter((x: any) => x >= 0)\r\n        //이번 회차의 보너스 번호\r\n        var bonusNum: number = bonusCorrect.indexOf(true)\r\n        //보너스 번호를 맞췄는지 검증\r\n        var bonus: boolean = list.includes(bonusNum)\r\n\r\n        \r\n        if (correctList.length < 3) {\r\n            //각 결과마다 +1을 해주는 set 실행\r\n            rankResult.setLast()\r\n            //text와 색깔 리턴\r\n            return [\"꽝\", \"black\"]\r\n        }\r\n        else if (correctList.length === 3) {\r\n            rankResult.setFifth()\r\n            return [\"5등\", \"darkslateblue\"]\r\n        }\r\n        else if (correctList.length === 4) {\r\n            rankResult.setFourth()\r\n            return [\"4등\", \"darkgoldenrod\"]\r\n        }\r\n        else if (correctList.length === 5 && !bonus) {\r\n            let list2: any = [...list]\r\n            correctList.forEach((i: any) => {\r\n                list2[i] = [list2[i], 1]\r\n            })\r\n            rankResult.setThird()\r\n            rankResultNum.setThirdNums(list2)\r\n            return [\"3등\", \"darkcyan\"]\r\n        }\r\n        else if (correctList.length === 5) {\r\n            //3등부터는 결과를 저장할거라서 맞춘 일반번호는 1, 보너스 번호는 2로 배열에 추가한다.\r\n            let list2: any = [...list]\r\n            correctList.forEach((i: any) => {\r\n                list2[i] = [list2[i], 1]\r\n            })\r\n            list2[list.indexOf(bonusNum)] = [list2[list.indexOf(bonusNum)], 2]\r\n            rankResult.setSecond()\r\n            rankResultNum.setSecondNums(list2)\r\n            return [\"2등\", \"cornflowerblue\"]\r\n        }\r\n        else {\r\n            let list2: any = [...list]\r\n            correctList.forEach((i: any) => {\r\n                list2[i] = [list2[i], 1]\r\n            })\r\n            rankResult.setFirst()\r\n            rankResultNum.setFirstNums(list2)\r\n            return [\"1등\", \"coral\"]\r\n        }\r\n    }\r\n\r\n    //db에 저장\r\n    const sendResult = async (sumResult: RankResult, resultNums: RankResultNum) => {\r\n        await Axios.post(`${process.env.REACT_APP_URL}/winData`, { sumResult: sumResult, resultNums: resultNums })\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setRankColor(result())\r\n        //추첨이 끝나고 마지막에 실행\r\n        if (listSize - 1 === idx) {\r\n            //3등 이상은 이름을 입력받아서 저장\r\n            var rank = rankResult.getFirst > 0 ? 1 : (rankResult.getSecond > 0 ? 2 : (rankResult.getThird > 0 ? 3 : (rankResult.getFourth > 0 ? 4 : 0)))\r\n            if (rank > 0 && rank < 4) {\r\n                var name = window.prompt(`축하합니다 ${rank}등에 당첨되셨습니다!\\n명예의 전당에 올릴 성함(닉네임)을 알려주세요! \\n취소를 누르시면 익명으로 등록됩니다.  ※최대 10글자`)?.trim() || \"익명\"\r\n                while (true) {\r\n                    if (name.length > 10)\r\n                        name = window.prompt(\"10글자 이하로 부탁드립니다 취소를 누르시면 익명으로 등록됩니다.\") || \"익명\"\r\n                    else break;\r\n                }\r\n                rankResultNum.setWinnerName(name)\r\n            }\r\n            sendResult(rankResult, rankResultNum)\r\n\r\n            //로컬스토리지에 있는 데이터를 가져와서 새 데이터와 합쳐서 다시 저장\r\n            var pastResult = localStorage.getItem(\"userResult\")\r\n            if (pastResult) {\r\n                var newResult = JSON.parse(pastResult);\r\n                newResult.first += rankResult.getFirst\r\n                newResult.second += rankResult.getSecond\r\n                newResult.third += rankResult.getThird\r\n                newResult.fourth += rankResult.getFourth\r\n                newResult.fifth += rankResult.getFifth\r\n                newResult.last += rankResult.getLast\r\n                setUserResult(newResult)\r\n                localStorage.setItem(\"userResult\", JSON.stringify(newResult))\r\n            } else {\r\n                localStorage.setItem(\"userResult\", JSON.stringify(rankResult))\r\n                setUserResult(rankResult)\r\n            }\r\n            //결과 나온 후 로또내역 보여주기 위해 footer up\r\n            var footerBtn: any = document.getElementById(\"footerBtn\")?.firstChild\r\n            if (footerBtn.style.transform.indexOf(\"180\") < 0)\r\n                document.getElementById(\"footerBtn\")?.click()\r\n            if (rank === 0&&hide) document.getElementById(\"noticeNoWin\")!.innerText = \"4등 이상 당첨된 로또가 없습니다\"\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        // <RankSpan id={\"rankSpan\" + idx} hide={hide} bg={rankColor[1]}>\r\n        //     {rankColor[0]}\r\n        // </RankSpan>\r\n        hide ? '' : <RankSpan id={\"rankSpan\" + idx} bg={rankColor[1]}>\r\n            {rankColor[0]}\r\n        </RankSpan>\r\n    )\r\n}\r\n\r\nexport default Rank\r\n","import React from 'react'\r\n//휴지통 아이콘\r\nconst DeleteSvg = () => {\r\n    return (\r\n        <svg width=\"1.8em\"  xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 100 95\" x=\"0px\" y=\"0px\"><path d=\"M84.81,17.49H66.68L62.23,8.55a3,3,0,0,0-2.69-1.66H40.45a3,3,0,0,0-2.69,1.66l-4.45,8.94H15.19a3,3,0,0,0,0,6h4.27V81.11a12,12,0,0,0,12,12H68.54a12,12,0,0,0,12-12V23.49h4.27a3,3,0,0,0,0-6Zm-42.5-4.6H57.69L60,17.49H40ZM74.54,81.11a6,6,0,0,1-6,6H31.46a6,6,0,0,1-6-6V23.49H74.54Z\"/><path d=\"M50,81.51a3,3,0,0,0,3-3V32.21a3,3,0,0,0-6,0v46.3A3,3,0,0,0,50,81.51Z\"/><path d=\"M62.77,81.51a3,3,0,0,0,3-3V32.21a3,3,0,0,0-6,0v46.3A3,3,0,0,0,62.77,81.51Z\"/><path d=\"M37.23,81.51a3,3,0,0,0,3-3V32.21a3,3,0,1,0-6,0v46.3A3,3,0,0,0,37.23,81.51Z\"/></svg>\r\n    )\r\n}\r\n\r\nexport default DeleteSvg\r\n","export class RankResultNum {\r\n    //맞은 숫자는 1, 맞은 보너스 숫자는 2로 표현\r\n    private firstNums! : number[][]\r\n    private secondNums! : number[][]\r\n    private thirdNums! : number[][]\r\n    private winnerName! : string\r\n    \r\n    constructor() {\r\n        this.firstNums = []\r\n        this.secondNums = []\r\n        this.thirdNums = []\r\n        this.winnerName = ''\r\n    }\r\n    \r\n    public  setFirstNums(value:number[]) {\r\n        this.firstNums.push(value)\r\n    } \r\n    public  setSecondNums(value:number[]) {\r\n        this.secondNums.push(value)\r\n    }\r\n    public  setThirdNums(value:number[]) {\r\n        this.thirdNums.push(value)\r\n    }\r\n    public  setWinnerName(value:string) {\r\n        this.winnerName = value\r\n    }\r\n\r\n    public get getFirstNums() {\r\n        return this.firstNums \r\n    }\r\n    public get getSecondNums() {\r\n        return this.secondNums \r\n    }\r\n    public get getThirdNums() {\r\n        return this.thirdNums \r\n    }\r\n    public get getWinnerName() {\r\n        return this.winnerName \r\n    }\r\n    \r\n}","export class RankResult {\r\n    private first: number\r\n    private second: number\r\n    private third: number\r\n    private fourth: number\r\n    private fifth: number\r\n    private last: number\r\n\r\n    constructor(obj?: RankResult) {\r\n        this.first = obj?.first || 0\r\n        this.second = obj?.second || 0\r\n        this.third = obj?.third || 0\r\n        this.fourth = obj?.fourth || 0\r\n        this.fifth = obj?.fifth || 0\r\n        this.last = obj?.last || 0\r\n    }\r\n\r\n\r\n    public setFirst() {\r\n        this.first += 1\r\n    }\r\n    public setSecond() {\r\n        this.second += 1\r\n    }\r\n    public setThird() {\r\n        this.third += 1\r\n    }\r\n    public setFourth() {\r\n        this.fourth += 1\r\n    }\r\n    public setFifth() {\r\n        this.fifth += 1\r\n    }\r\n    public setLast() {\r\n        this.last += 1\r\n    }\r\n\r\n    public get getFirst() {\r\n        return this.first\r\n    }\r\n    public get getSecond() {\r\n        return this.second\r\n    }\r\n    public get getThird() {\r\n        return this.third\r\n    }\r\n    public get getFourth() {\r\n        return this.fourth\r\n    }\r\n    public get getFifth() {\r\n        return this.fifth\r\n    }\r\n    public get getLast() {\r\n        return this.last\r\n    }\r\n\r\n}","\r\nimport React, { useState, useEffect , useRef} from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from '../components/Button';\r\nimport { List } from 'react-virtualized';\r\nimport ResultNum from '../components/ResultNum';\r\nimport LineDiv from '../components/LineDiv';\r\n\r\nimport Draw from '../sections/Draw';\r\nimport NumList from '../components/NumList';\r\nimport NumLineWrap from '../components/NumLineWrap';\r\nimport Rank from '../components/Rank';\r\nimport DeleteSvg from '../components/DeleteSvg';\r\nimport { RankResultNum } from '../models/RankResultNum';\r\nimport { RankResult } from '../models/RankResult';\r\n\r\n//번호 리스트 스크롤 \r\nconst ScrollList = styled.div`\r\n    overflow-y : auto;\r\n    max-height : ${window.innerHeight / 2}px;\r\n`\r\nconst ListIdxSpan = styled.span`\r\n    float : left;\r\n    margin-left : 10px;\r\n    font-weight : 600;\r\n    font-size : .9em;\r\n    margin-top : 4px;\r\n`\r\n\r\nconst SmallSpan = styled.span`\r\n    color : gray;\r\n    font-size : 12px;\r\n    display : flex;\r\n    flex-direction : column-reverse;\r\n`\r\ntype props = {\r\n    list: number[][]\r\n    draw: boolean\r\n    correct: boolean[]\r\n    bonusCorrect: boolean[]\r\n    trigger: boolean\r\n    setList: Function\r\n    setDraw: Function\r\n    setCorrect: Function\r\n    setbonusCorrect: Function\r\n    setTrigger: Function\r\n    setUserResult: Function\r\n}\r\n\r\nconst NotSpeedMode = ({ list, draw, correct, bonusCorrect, trigger, setList, setUserResult, setDraw, setTrigger, setCorrect, setbonusCorrect }: props) => {\r\n    //번호 선택 배열. 당첨번호 선택번호 등 state로 관리하는 이유는 스타일 컴포넌트의 props 변경을 위해서다.\r\n    const [selectBtn, setSelectBtn] = useState<boolean[]>([])\r\n\r\n    useEffect(() => {\r\n        //로컬스토리지에 있는 유저의 로또 내역 state에 저장\r\n        var result = localStorage.getItem(\"userResult\")\r\n        if (result) setUserResult(JSON.parse(result))\r\n    }, [])\r\n    //번호 선택 이벤트\r\n    const select = (num: number) => {\r\n        if (limit()) return\r\n        if (list[list.length - 1].includes(num)) {\r\n            //번호 선택 해제. 배열에서 제거하고 스타일 변경을 위해 false로 변경.\r\n            list[list.length - 1].splice(list[list.length - 1].indexOf(num), 1)\r\n            selectBtn[num - 1] = false\r\n            setSelectBtn([...selectBtn])\r\n            setList([...list])\r\n        }\r\n        else if (list[list.length - 1].length === 6) return\r\n        else {\r\n            selectBtn[num - 1] = true\r\n            setSelectBtn([...selectBtn])\r\n            list[list.length - 1].push(num)\r\n            setList([...list])\r\n        }\r\n    }\r\n\r\n\r\n    //로또 번호 버튼배열 생성\r\n    let allNum: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\r\n    let map = allNum.map((x, idx) => <NumList key={idx} content={x} selected={selectBtn[idx]} id={`btn${x}`} click={select}></NumList>)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //전체 상태 초기화\r\n    const reset = () => {\r\n        setCorrect([])\r\n        setbonusCorrect([])\r\n        setTrigger(false)\r\n        setDraw(false)\r\n        setSelectBtn([])\r\n        setList([[]])\r\n    }\r\n\r\n    //번호 확정 시 추첨기 ON\r\n    const submit = () => {\r\n        if (list[list.length - 1].length < 6) {\r\n            alert(\"총 6개의 번호를 선택해주세요\")\r\n            return\r\n        }\r\n        if (window.confirm(`선택한 로또번호로 추첨하시겠습니까?`)) {\r\n            setDraw(true)\r\n        }\r\n    }\r\n\r\n    //추첨 후에 버튼 조작 못하게\r\n    const afterDraw = () => {\r\n        if (document.getElementById('resetBtn')&&!document.getElementById(\"beforeDrawNotice\")) {\r\n            if (window.confirm(\"추첨이 시작된 로또이므로 번호를 추가할 수 없습니다. 초기화하시겠습니까?\")) {\r\n                reset()\r\n                return true\r\n            }\r\n            else return true\r\n        }\r\n        else return false\r\n    }\r\n\r\n    //최대 100장까지 구매제한\r\n    const limit = () => {\r\n        if (afterDraw()) return true\r\n        var count: any = document.getElementById(\"lottoList\")?.childElementCount\r\n        if (count > 100) {\r\n            alert(\"1회 10만원까지만 제공됩니다.\")\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    //랜덤뽑기. 번호 선택 6개까지 남은 n개의 수를 랜덤으로 클릭. true를 파라미터로 10회 뽑기 여부 판단\r\n    const random = (tenReps: boolean) => {\r\n        if (limit()) return\r\n        var length: number = list[list.length - 1].length\r\n        for (var i = 0; i < 6 - length; i++) {\r\n            while (true) {\r\n                var num: number = Math.floor((Math.random() * 45) + 1)\r\n                if (!list[list.length - 1].includes(num)) {\r\n                    document.getElementById(`btn${num}`)?.click()\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //랜덤 10회 뽑기 최대 100회까지 제한.\r\n        if (tenReps) {\r\n            var count: any = document.getElementById(\"lottoList\")?.childElementCount\r\n            if (count > 99) {\r\n                alert(\"1회 10만원까지만 제공됩니다.\")\r\n                return\r\n            }\r\n            document.getElementById(\"loadingBg\")!.style.display = \"block\";\r\n            if (count + 10 > 100)\r\n                random11(100)\r\n            else\r\n                random11(count < 10 ? count + 9 : count + 10)\r\n        }\r\n    }\r\n\r\n    const random11 = (count: number) => {\r\n        if (document.getElementById(\"lottoList\")?.childElementCount === count) {\r\n            document.getElementById(\"loadingBg\")!.style.display = \"none\";\r\n            return\r\n        }\r\n        document.getElementById(\"lineAdd\")?.click()\r\n        setTimeout(() => {\r\n            document.getElementById(`randomBtn`)?.click()\r\n            random11(count)\r\n        }, 1);\r\n\r\n    }\r\n\r\n\r\n\r\n    //로또 한줄 추가\r\n    const addLine = () => {\r\n        if (list[list.length - 1].length < 6) return\r\n        if (limit()) return\r\n        list.push([])\r\n        setList([...list])\r\n        setSelectBtn([])\r\n        var node: any = document.getElementById(\"lottoList\")\r\n        setTimeout(() => {\r\n            node.scrollTo(0, node.clientHeight + 10000)\r\n        }, 10);\r\n    }\r\n\r\n    //한줄 초기화. 줄 자체를 제거하지는 않고 선택번호만 초기화\r\n    const resetOneLine = () => {\r\n        list[list.length - 1] = []\r\n        setSelectBtn([])\r\n        setList([...list])\r\n    }\r\n\r\n    //줄 삭제\r\n    const deleteSelectLine = (idx: number) => {\r\n        if (list.length === idx + 1) setSelectBtn([])\r\n        deleteLine(idx)\r\n    }\r\n\r\n    const deleteLine = (idx: number) => {\r\n        list.splice(idx, 1)\r\n        setList([...list])\r\n    }\r\n\r\n\r\n    //react virtualized \r\n    const rowRenderer = (\r\n        () => {\r\n            return (\r\n                <ScrollList id=\"lottoList\">\r\n                    {list.map((i, idx) => <NumLineWrap key={idx} idx={idx} content={list[idx].length === 0 ?\r\n                        (list.length > 1 ? //2개이상부터는 삭제가능하게 Btn추가\r\n                            <SmallSpan>새 번호를 선택해주세요\r\n                             <Button\r\n                                    hoverBg=\"#EAEAEA\"\r\n                                    bg=\"none\"\r\n                                    content={<DeleteSvg />}\r\n                                    click={() => deleteSelectLine(idx)} />\r\n                            </SmallSpan>\r\n                            : <SmallSpan >새 번호를 선택해주세요</SmallSpan>)\r\n\r\n                        : <span>{trigger ? //추첨 끝나면 Rank계산\r\n                            <Rank\r\n                                setUserResult={setUserResult}\r\n                                rankResultNum={rankResultNum}\r\n                                rankResult={rankResult}\r\n                                listSize={list.length}\r\n                                idx={idx}\r\n                                list={list[idx]}\r\n                                correct={correct}\r\n                                bonusCorrect={bonusCorrect}\r\n                                trigger={trigger} /> : ''}\r\n\r\n                            <ListIdxSpan>{idx + 1}번</ListIdxSpan>\r\n                            {list[idx].sort((a, b) => a - b).map((x, idx2) =>\r\n                                //번호 6개\r\n                                <ResultNum key={idx2} bonusCorrect={bonusCorrect[x]} correct={correct[x]} num={x} />)}\r\n\r\n                            {idx > 0 ?\r\n                                <Button float=\"right\" hoverBg=\"#EAEAEA\" bg=\"none\" content={<DeleteSvg />} click={() => deleteSelectLine(idx)} />\r\n                                : ''}</span>} />)}\r\n                </ScrollList>\r\n            );\r\n        })\r\n\r\n    //계산에 쓰일 클래스 private\r\n    var rankResult = new RankResult()\r\n    var rankResultNum = new RankResultNum()\r\n    return (\r\n        <div>\r\n            {map}\r\n            <Button id=\"randomBtn\" fontSize={\"1.0em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"나머지 랜덤\" click={() => random(false)} />\r\n            <Button id=\"lineAdd\" fontSize={\"1.0em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"한 줄 추가\" click={addLine} />\r\n            <Button fontSize={\"1.0em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"현재 줄 초기화\" click={resetOneLine} />\r\n            <Button fontSize={\"1.0em\"} color=\"rgb(235, 83, 116)\" bg=\"rgba(235, 83, 116, 0.12)\" hoverBg=\"rgb(235, 83, 116)\" content=\"전체초기화\" click={reset} />\r\n            <Button fontSize={\"1.0em\"} color=\"rgb(255,94,0)\" bg=\"rgba(255,94,0,.12)\" hoverBg=\"rgb(255,94,0)\" content=\"추첨하기\" click={submit} />\r\n            <Button fontSize={\"1.0em\"} color=\"rgb(255,94,0)\" bg=\"rgba(255,94,0,.12)\" hoverBg=\"rgb(255,94,0)\" content=\"만원 어치\" click={() => random(true)} />\r\n            {draw ? <Draw mode={false} bonusCorrect={bonusCorrect} setbonusCorrect={setbonusCorrect} trigger={trigger} setTrigger={setTrigger} list={list} setDraw={setDraw} setCorrect={setCorrect} correct={correct} /> : ''}\r\n            <LineDiv fontSize={15} content=\"내가 뽑은 로또 번호\" />\r\n            <List\r\n                width={1}\r\n                height={1}\r\n                overscanRowsCount={1}\r\n                rowCount={1}\r\n                rowHeight={40}\r\n                rowRenderer={rowRenderer}\r\n                containerStyle={{\r\n                    width: \"100%\",\r\n                    maxWidth: \"100%\",\r\n                    height: \"100%\",\r\n                    maxHeight: \"100%\"\r\n                }}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotSpeedMode","import styled from 'styled-components'\r\nimport Button from '../components/Button';\r\nimport { List } from 'react-virtualized';\r\nimport ResultNum from '../components/ResultNum';\r\nimport LineDiv from '../components/LineDiv';\r\nimport { Debounce } from '../Debounce'\r\nimport Draw from '../sections/Draw';\r\nimport NumLineWrap from '../components/NumLineWrap';\r\nimport Rank from '../components/Rank';\r\nimport { RankResultNum } from '../models/RankResultNum';\r\nimport { RankResult } from '../models/RankResult';\r\n\r\n//스피드모드\r\n\r\n\r\nconst ScrollList = styled.div`\r\n    overflow-y : auto;\r\n    max-height : ${window.innerHeight / 2}px;\r\n`\r\nconst SmallSpan = styled.span`\r\n    color : gray;\r\n    font-size : 12px;\r\n`\r\ntype props = {\r\n    list:number[][]\r\n    draw: boolean\r\n    correct: boolean[]\r\n    bonusCorrect:boolean[]\r\n    trigger:boolean\r\n    setList:Function\r\n    setDraw:Function\r\n    setCorrect:Function\r\n    setbonusCorrect:Function\r\n    setTrigger:Function\r\n    setUserResult:Function\r\n}\r\n\r\nconst SpeedMode = ({list,draw,correct,bonusCorrect,trigger,setList,setUserResult,setDraw,setTrigger,setCorrect,setbonusCorrect}:props) => {\r\n\r\n   \r\n    //랜덤으로 뽑기 \r\n    //일반모드에 있는 랜덤은 실제로 버튼을 클릭하는 것을 10회 반복한 것 뿐이다.\r\n    //스피드모드는 속도를 위해 반복문으로 배열을 만들어서 list에 추가함. 보여주기식이 아니라 그냥 결과만을 도출하기 위한 모드\r\n    const randomTest = Debounce((count: number) => {\r\n        document.getElementById(\"loadingBg\")!.style.display = \"block\";\r\n        setTrigger(false)\r\n        setCorrect([])\r\n        setbonusCorrect([])\r\n        setDraw(false)\r\n        var list: number[][] = []\r\n        for (var i = 0; i < count; i++) {\r\n            list[i] = []\r\n            for (var j = 0; j < 6; j++) {\r\n                while (true) {\r\n                    var num = Math.floor((Math.random() * 45) + 1)\r\n                    if (!list[i].includes(num)) {\r\n                        list[i][j] = num\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setList(list)\r\n        setTimeout(() => {\r\n            setDraw(true)\r\n        }, 100);\r\n    }, 400)\r\n\r\n\r\n    //리스트 내용은 일반모드랑 거의 같음.\r\n    const rowRenderer = (\r\n        () => {\r\n            return (\r\n                <ScrollList id=\"lottoList\">\r\n                    {trigger ? list.map((i, idx) => {\r\n                        var length = i.map(x => { if (correct[x]) return x; return undefined }).filter(x => x)\r\n\r\n                        if (length.length > 3)\r\n                            return (\r\n                                <NumLineWrap hide={true} idx={idx} key={idx} content={<div><Rank\r\n                                    setUserResult={setUserResult}\r\n                                    rankResultNum={rankResultNum}\r\n                                    rankResult={rankResult}\r\n                                    listSize={list.length}\r\n                                    idx={idx}\r\n                                    hide={false}\r\n                                    list={list[idx]}\r\n                                    correct={correct}\r\n                                    bonusCorrect={bonusCorrect}\r\n                                    trigger={trigger}></Rank>\r\n                                    {list[idx].sort((a, b) => a - b).map((x, idx) =>\r\n                                        <ResultNum key={idx} bonusCorrect={bonusCorrect[x]} correct={correct[x]} num={x}></ResultNum>)}</div>\r\n                                }></NumLineWrap>)\r\n                        else {\r\n                            return (\r\n                                <Rank idx={idx} key={idx}\r\n                                    setUserResult={setUserResult}\r\n                                    rankResultNum={rankResultNum}\r\n                                    rankResult={rankResult}\r\n                                    listSize={list.length}\r\n                                    list={list[idx]}\r\n                                    hide={true}\r\n                                    correct={correct}\r\n                                    bonusCorrect={bonusCorrect}\r\n                                    trigger={trigger}></Rank>\r\n                            )\r\n                        }\r\n                    }) : ''}\r\n                </ScrollList>\r\n            );\r\n        })\r\n\r\n    var rankResult = new RankResult()\r\n    var rankResultNum = new RankResultNum()\r\n    return (\r\n        <div>\r\n            <Button id=\"randomBtn\" fontSize={\"1.0em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"50만원\" click={() => randomTest(200)}></Button>\r\n            <Button id=\"lineAdd\" fontSize={\"1.0em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"100만원\" click={() => randomTest(1000)}></Button>\r\n            <Button fontSize={\"1.0em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"500만원\" click={() => randomTest(5000)}></Button>\r\n            <Button fontSize={\"1.0em\"} color=\"rgb(255,94,0)\" bg=\"rgba(255,94,0,.12)\" hoverBg=\"rgb(255,94,0)\" content=\"1000만원\" click={() => randomTest(10000)}></Button>\r\n            {draw ? <Draw mode={true} bonusCorrect={bonusCorrect} setbonusCorrect={setbonusCorrect} trigger={trigger} setTrigger={setTrigger} list={list} setDraw={setDraw} setCorrect={setCorrect} correct={correct}></Draw> : ''}\r\n            <LineDiv fontSize={15} content=\"4등 이상 당첨 번호\"></LineDiv>\r\n            <SmallSpan id=\"noticeNoWin\">버튼을 눌러 로또를 구매하세요!</SmallSpan>\r\n            <List\r\n                width={1}\r\n                height={1}\r\n                overscanRowsCount={1}\r\n                rowCount={1}\r\n                rowHeight={40}\r\n                rowRenderer={rowRenderer}\r\n                containerStyle={{\r\n                    width: \"100%\",\r\n                    maxWidth: \"100%\",\r\n                    height: \"100%\",\r\n                    maxHeight: \"100%\"\r\n                }}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}\r\n            >\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpeedMode\r\n\r\n","import styled, { css } from 'styled-components'\r\n//양옆에 radius를 준 버튼 그룹 커스텀가능!\r\ntype props = {\r\n    click: any\r\n    content: string[]\r\n    hover?: string\r\n    bg?: string\r\n    color?: string\r\n    selected: boolean[]\r\n    selectColor?: string\r\n    selectBg?: string\r\n}\r\ntype btnProps = {\r\n    hover?: string\r\n    bg?: string\r\n    color?: string\r\n    selected: boolean\r\n    selectColor?: string\r\n    selectBg?: string\r\n}\r\n\r\nconst Group = styled.div`\r\nmargin-right : 10px;\r\n    \r\n`\r\nconst btnCss = css<btnProps>`\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    font-weight : 600;\r\n    white-space: nowrap;\r\n    ${props => props.theme.noneOutline}\r\n    border : 1px solid rgba(193,193,193,0.565);\r\n    background : ${props => props.selected ? (props.selectBg || \"rgb(224, 230, 251)\") : (props.bg || \"white\")};\r\n    color : ${props => props.selected ? (props.selectColor || \"rgb(86, 115, 235)\") : (props.color || \"gray\")};\r\n    ${props => sessionStorage.getItem(\"mobile\") === \"true\" ?\r\n        `&:active{\r\n        background : ${props.selectBg || \"rgb(224, 230, 251)\"};\r\n         color : ${props.selectColor || \"rgb(86, 115, 235);\"}\r\n        }`\r\n        :\r\n        `&:hover{\r\n            background : ${props.selectBg || \"rgb(224, 230, 251)\"};\r\n            color : ${props.selectColor || \"rgb(86, 115, 235);\"}\r\n        }`\r\n    }\r\n`\r\nconst FirstBtn = styled.button`\r\n    ${btnCss}\r\n    border-top-left-radius : 4px;\r\n    border-bottom-left-radius : 4px;\r\n`\r\nconst LastBtn = styled.button`\r\n${btnCss}\r\n    border-top-right-radius : 4px;\r\n    border-bottom-right-radius : 4px;\r\n    border-left : none;\r\n`\r\nconst Btn = styled.button`\r\n    ${btnCss}\r\n    border-left : none;\r\n`\r\n\r\n\r\nconst ButtonGroup = ({ click, color, bg, hover, content, selected, selectColor, selectBg }: props) => {\r\n\r\n    var map = content.map((x, idx) => {\r\n        switch (idx) {\r\n            case 0:\r\n                return <FirstBtn key={idx} selected={selected[idx]} color={color} bg={bg} hover={hover} selectBg={selectBg} selectColor={selectColor} onClick={() => click[idx](idx)}>{x}</FirstBtn>\r\n            case content.length - 1:\r\n                return <LastBtn key={idx} selected={selected[idx]} color={color} bg={bg} hover={hover} selectBg={selectBg} selectColor={selectColor} onClick={() => click[idx](idx)}>{x}</LastBtn>\r\n\r\n            default:\r\n                return <Btn key={idx} selected={selected[idx]} color={color} bg={bg} hover={hover} selectBg={selectBg} selectColor={selectColor} onClick={() => click[idx](idx)}>{x}</Btn>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Group>\r\n            {map}\r\n        </Group>\r\n    )\r\n}\r\n\r\nexport default ButtonGroup\r\n","import { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\nimport React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport LineDiv from '../components/LineDiv';\r\nimport { Debounce } from '../Debounce'\r\nimport SubTitle from '../components/SubTitle';\r\nimport NotSpeedMode from '../components/NotSpeedMode';\r\nimport SpeedMode from '../components/SpeedMode';\r\nimport ButtonGroup from '../components/ButtonGroup';\r\n//가상로또 섹션\r\n//스피드모드와 일반 모드\r\n\r\nconst Section = styled.section`\r\n    ${props => props.theme.sectionCss}\r\n`\r\n\r\n\r\nconst FakeLotto = () => {\r\n    //번호 리스트 \r\n    var list = useSelector((state: StoreState) => state.Reducer.list);\r\n    //추첨기 온오프\r\n    var draw = useSelector((state: StoreState) => state.Reducer.drawCheck);\r\n    //1~45까지 당첨된 번호  Boolean배열\r\n    var correct = useSelector((state: StoreState) => state.Reducer.corrected);\r\n    //1~45까지 당첨된 보너스 번호 Boolean배열\r\n    var bonusCorrect = useSelector((state: StoreState) => state.Reducer.bonusCorrect);\r\n    //추첨이 완료되고 계산에 들어가게 하는 트리거\r\n    var trigger = useSelector((state: StoreState) => state.Reducer.resultTrigger);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setList = (list: number[][]) => {\r\n        dispatch(actionCreators.list(list))\r\n    }\r\n    const setDraw = (value: boolean) => {\r\n        dispatch(actionCreators.drawCheck(value))\r\n    }\r\n    const setCorrect = (value: boolean[]) => {\r\n        dispatch(actionCreators.corrected(value))\r\n    }\r\n    const setbonusCorrect = (value: boolean[]) => {\r\n        dispatch(actionCreators.bonusCorrect(value))\r\n    }\r\n    const setTrigger = (value: boolean) => {\r\n        dispatch(actionCreators.resultTrigger(value))\r\n    }\r\n    const setUserResult = (value: any) => {\r\n        dispatch(actionCreators.userResult(value))\r\n    }\r\n    //토글 버튼\r\n    const [modeBtn, setModeBtn] = useState<boolean[]>([true,false])\r\n\r\n\r\n\r\n  \r\n\r\n \r\n\r\n\r\n    const modeChange = Debounce((check:boolean) => {\r\n        setTrigger(false) //모드 체인지시에 남아있던 List가 새 모드에서 생성되면서 계산을 또 하기 때문에 false를 줘서 Rank생성 막음\r\n        setDraw(false) //추첨기를 미리 false를 줘서 없애줘야 새 모드에서 인터벌이 겹치지 않는다.\r\n        setCorrect([])\r\n        setbonusCorrect([])\r\n        if(check){ //스피드모드로 변경 후 추첨을 안하고 다시 일반모드로 올 때 리스트 남겨둠. \r\n            if(list.length>100) setList([[]])\r\n            setModeBtn([true,false])\r\n            \r\n        }\r\n        else{\r\n            setModeBtn([false,true])\r\n        }\r\n        \r\n    },200)\r\n\r\n    return (\r\n        <Section>\r\n            <SubTitle content=\"가상 로또 추첨\"></SubTitle>\r\n            <LineDiv content={<ButtonGroup content={[\"일반모드\",\"스피드모드\"]} selected={modeBtn} click={[()=> modeChange(true), ()=> modeChange(false)]}></ButtonGroup>}></LineDiv>\r\n            {modeBtn[0] ? <NotSpeedMode list={list} draw={draw} correct={correct} bonusCorrect={bonusCorrect} trigger={trigger} setList={setList} setDraw={setDraw} setCorrect={setCorrect} setbonusCorrect={setbonusCorrect} setTrigger={setTrigger} setUserResult={setUserResult}></NotSpeedMode> : <SpeedMode list={list} draw={draw} correct={correct} bonusCorrect={bonusCorrect} trigger={trigger} setList={setList} setDraw={setDraw} setCorrect={setCorrect} setbonusCorrect={setbonusCorrect} setTrigger={setTrigger} setUserResult={setUserResult}></SpeedMode>}\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default FakeLotto\r\n\r\n","import { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux';\r\nimport Chart2 from 'chart.js'\r\n//막대 차트.\r\n\r\n\r\nconst ChartWrapper = styled.div`\r\n    width : ${props => props.size}px\r\n`\r\nconst ScrollDiv = styled.div`\r\n    overflow-x : auto;\r\n`\r\n\r\nconst Chart = () => {\r\n    var list = useSelector((state) => state.ChartReducer.chartMainData);\r\n    var size = useSelector((state) => state.Reducer.graphSize);\r\n    const chart = useRef()\r\n\r\n    \r\n    useEffect(() => {\r\n        //여러 차트를 한 컴포넌트에서 관리했어야되는데 여기저기에 컴포넌트로 쓰여서 차트를 바꿀때마다 차트를 생성하기때문에, 두 번 렌더링된다.\r\n        //이를 막기 위해 복사본을 ref로 관리해서 비교 후에 return을 해주었다.  chartjs를 처음써봐서 설계를 잘못했다 ㅜ\r\n        //resize하기 위해 이전 차트 지움\r\n        if(chart.current) chart.current.destroy()\r\n        \r\n\r\n        var ctx = document.getElementById('myChart').getContext('2d');\r\n        \r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#80b6f4');\r\n        gradientStroke.addColorStop(1, '#f49080');\r\n\r\n        var gradientFill = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0.6)\");\r\n        gradientFill.addColorStop(1, \"rgba(244, 144, 128, 0.6)\");\r\n        var chartjs = new Chart2(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: list.map(x => `${x[0]}번`),\r\n                datasets: [{\r\n                    label: 'Chart Graph',\r\n                    borderColor: gradientStroke,\r\n                    pointBorderColor: gradientStroke,\r\n                    pointBackgroundColor: gradientStroke,\r\n                    pointHoverBackgroundColor: gradientStroke,\r\n                    pointHoverBorderColor: gradientStroke,\r\n                    pointHoverRadius: 10,\r\n                    pointHoverBorderWidth: 1,\r\n                    pointRadius: 3,\r\n                    fill: true,\r\n                    backgroundColor: gradientFill,\r\n                    data: list.map(x => x[1]),\r\n                    pointBorderWidth: 10,\r\n                    hoverBorderWidth: 13,\r\n\r\n\r\n                }]\r\n            },\r\n            animation: {\r\n                animateScale: true,\r\n                animateRotate: true,\r\n                easing: \"easeInOutBack\"\r\n            },\r\n            options: {\r\n                maintainAspectRatio: false,\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                plugins:{\r\n                    labels : {\r\n                        render : 'value'\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            fontColor: \"rgba(0,0,0,0.5)\",\r\n                            fontStyle: \"bold\",\r\n                            beginAtZero: true,\r\n                            suggestedMax: list.length >0 ? list[0][1] + list[0][1]*0.1 : 0,\r\n                        },\r\n                        \r\n\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            zeroLineColor: \"transparent\"\r\n                        },\r\n                        ticks: {\r\n                            padding: 20,\r\n                            fontColor: \"rgba(0,0,0,0.5)\",\r\n                            fontStyle: \"bold\"\r\n                        }\r\n                    }]\r\n                },\r\n                scaleShowLabelBackdrop: true,\r\n                showAllTooltips: true,\r\n                tooltips: {\r\n                    displayColors: false,\r\n                    callbacks: {\r\n                        title: function (tooltipItem, data) {\r\n                            return;\r\n                        },\r\n                        label: function (tooltipItem, data) {\r\n                            return data['labels'][tooltipItem['index']] + \" - \" + data['datasets'][0]['data'][tooltipItem['index']] + \"회 당첨\";\r\n                        },\r\n                    }\r\n                },\r\n            } \r\n        });\r\n\r\n        chart.current = chartjs\r\n    }, [list,size])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ScrollDiv>\r\n                <ChartWrapper size={size}>\r\n                    <canvas  height=\"300px\" id=\"myChart\"></canvas>\r\n                </ChartWrapper>\r\n            </ScrollDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n\r\n","import React from 'react'\r\n\r\ntype props ={\r\n    upDown:boolean\r\n    fill:string\r\n}\r\n\r\nconst Arrow = ({upDown,fill}:props) => {\r\n    return (\r\n        <svg width=\"1.1em\" style={{transform : `rotate(${upDown ? 90 : -90}deg)`, fill : fill}} xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 64 64\" x=\"0px\" y=\"0px\"><path d=\"M50.50851,27.936H23.39865l8.95849-8.72266a3.99994,3.99994,0,0,0-5.58008-5.73242L10.70089,29.13421a3.99979,3.99979,0,0,0,0,5.73242L26.77706,50.519a3.99994,3.99994,0,1,0,5.58008-5.73242L23.26657,35.936H50.50851a4,4,0,1,0,0-8Z\"/></svg>\r\n    )\r\n}\r\n\r\nexport default Arrow\r\n","// types\r\n\r\nimport { RankResult } from \"../models/RankResult\";\r\n\r\n//interface를 통해 타입을 정해준다.\r\nexport interface ChartState {\r\n  chartMainData: any;\r\n  chartList: number[][];\r\n  chartBonusList: number[][];\r\n  userChartSum: any;\r\n  userChartList: number[][];\r\n  graphSize: number;\r\n  recentRound: number;\r\n  roundSelect1: number\r\n  roundSelect2: number\r\n  sortBtn: boolean;\r\n}\r\n\r\n//액션 타입\r\nexport const CHARTMAINDATA = \"CHARTMAINDATA\";\r\nexport const CHARTLIST = \"CHARTLIST\";\r\nexport const CHARTBONUSLIST = \"CHARTBONUSLIST\";\r\nexport const USERCHARTSUM = \"USERCHARTSUM\";\r\nexport const USERCHARTLIST = \"USERCHARTLIST\";\r\nexport const GRAPHSIZE = \"GRAPHSIZE\";\r\nexport const RECENTROUND = \"RECENTROUND\";\r\nexport const ROUNDSELECT1 = \"ROUNDSELECT1\"\r\nexport const ROUNDSELECT2 = \"ROUNDSELECT2\"\r\nexport const SORTBTN = \"SORTBTN\"\r\n\r\n\r\n//액션 인터페이스 , 함수의 인자를 여기서 설정한다.\r\n\r\ninterface chartMainDataAction {\r\n  newList: number[][];\r\n  type: typeof CHARTMAINDATA;\r\n}\r\ninterface chartListAction {\r\n  newList: number[][];\r\n  type: typeof CHARTLIST;\r\n}\r\ninterface chartListWithBonusAction {\r\n  newList: number[][];\r\n  type: typeof CHARTBONUSLIST;\r\n}\r\ninterface userChartSumAction {\r\n  newData: any;\r\n  type: typeof USERCHARTSUM;\r\n}\r\ninterface userChartListAction {\r\n  newList: number[][];\r\n  type: typeof USERCHARTLIST;\r\n}\r\ninterface GraphSize {\r\n  size: number;\r\n  type: typeof GRAPHSIZE;\r\n}\r\n\r\ninterface RecentRound {\r\n  value: number;\r\n  type: typeof RECENTROUND;\r\n}\r\ninterface SortBtn {\r\n  value: boolean;\r\n  type: typeof SORTBTN;\r\n}\r\n\r\n\r\ninterface RoundSelect1 {\r\n  value: number;\r\n  type: typeof ROUNDSELECT1;\r\n}\r\ninterface RoundSelect2 {\r\n  value: number;\r\n  type: typeof ROUNDSELECT2;\r\n}\r\n\r\n\r\ntype ActionTypes =\r\n  chartMainDataAction |\r\n  chartListAction |\r\n  chartListWithBonusAction |\r\n  userChartSumAction |\r\n  userChartListAction |\r\n  GraphSize |\r\n  RecentRound |\r\n  RoundSelect1 |\r\n  RoundSelect2 | \r\n  SortBtn\r\n// interface ActionTypes {\r\n//   actionTypes : ListAction | List2Action\r\n// }\r\n// | ChangeInputAction;\r\n\r\n// actions\r\n\r\n\r\n//액션 인터페이스 설정한 내용을 토대로 함수 작성.\r\nfunction chartMainData(newList: number[]) {\r\n  return {\r\n    type: CHARTMAINDATA,\r\n    newList: newList\r\n  };\r\n}\r\nfunction chartList(newList: number[]) {\r\n  return {\r\n    type: CHARTLIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction chartBonusList(newList: number[]) {\r\n  return {\r\n    type: CHARTBONUSLIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction userChartList(newList: number[]) {\r\n  return {\r\n    type: USERCHARTLIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction graphSizeUp(size: number) {\r\n  return {\r\n    type: GRAPHSIZE,\r\n    size: size\r\n  };\r\n}\r\nfunction userChartSum(newData: any) {\r\n  return {\r\n    type: USERCHARTSUM,\r\n    newData: newData\r\n  };\r\n}\r\nfunction graphSizeDown(size: number) {\r\n  return {\r\n    type: GRAPHSIZE,\r\n    size: size\r\n  };\r\n}\r\n\r\nfunction recentRound(value: number) {\r\n  return {\r\n    type: RECENTROUND,\r\n    value: value\r\n  };\r\n}\r\n\r\nfunction roundSelect1(value: number) {\r\n  return {\r\n    type: ROUNDSELECT1,\r\n    value: value\r\n  };\r\n}\r\nfunction roundSelect2(value: number) {\r\n  return {\r\n    type: ROUNDSELECT2,\r\n    value: value\r\n  };\r\n}\r\nfunction sortBtn() {\r\n  return {\r\n    type: SORTBTN\r\n  };\r\n}\r\n\r\n//액션 함수 export\r\nexport const actionCreators = {\r\n  chartMainData, chartList, chartBonusList, userChartSum, userChartList, graphSizeUp, graphSizeDown, recentRound, roundSelect1, roundSelect2, sortBtn\r\n};\r\n\r\n//초기값 선언 타입은 가장 위에서 선언한 인터페이스\r\nconst initialState: ChartState = {\r\n  chartMainData: [[]],\r\n  chartList: [],\r\n  chartBonusList: [],\r\n  userChartSum: [],\r\n  userChartList: [],\r\n  graphSize: 1160,\r\n  recentRound: 0,\r\n  roundSelect1: 1,\r\n  roundSelect2: 1,\r\n  sortBtn: false\r\n};\r\n\r\n// reducers\r\nexport function ChartReducer(\r\n  state = initialState,\r\n  action: ActionTypes\r\n): ChartState {\r\n  switch (action.type) {\r\n    case CHARTMAINDATA:\r\n      return {\r\n        ...state,\r\n        chartMainData: action.newList\r\n      };\r\n    case CHARTLIST:\r\n      return {\r\n        ...state,\r\n        chartList: action.newList\r\n      };\r\n    case CHARTBONUSLIST:\r\n      return {\r\n        ...state,\r\n        chartBonusList: action.newList\r\n      };\r\n    case USERCHARTSUM:\r\n      return {\r\n        ...state,\r\n        userChartSum: action.newData\r\n      };\r\n    case USERCHARTLIST:\r\n      return {\r\n        ...state,\r\n        userChartList: action.newList\r\n      };\r\n    case GRAPHSIZE:\r\n      return {\r\n        ...state,\r\n        graphSize: action.size\r\n      };\r\n\r\n    case RECENTROUND:\r\n      return {\r\n        ...state,\r\n        recentRound: action.value\r\n      };\r\n\r\n    case ROUNDSELECT1:\r\n      return {\r\n        ...state,\r\n        roundSelect1: action.value\r\n      };\r\n    case ROUNDSELECT2:\r\n      return {\r\n        ...state,\r\n        roundSelect2: action.value\r\n      };\r\n      case SORTBTN:\r\n        return {\r\n          ...state,\r\n          sortBtn: state.sortBtn ? false : true\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport Chart from './Chart'\r\nimport ButtonGroup from './ButtonGroup';\r\nimport styled from 'styled-components'\r\nimport LineDiv from './LineDiv';\r\nimport { Debounce } from '../Debounce'\r\nimport Arrow from './Arrow';\r\nimport Button from './Button';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/ChartStore';\r\n//실제 로또 통계 차트 선택 섹션\r\n\r\n\r\nconst FlexDiv = styled.div`\r\n    display : inline-flex;\r\n    line-height : 1;\r\n    margin-right : 10px;\r\n`\r\n\r\nconst Span = styled.span`\r\n    font-size : .8em;\r\n    color : gray;\r\n    margin-right : 10px;\r\n    margin-top : 7px;\r\n    font-weight : 600;\r\n    white-space: nowrap;\r\n`\r\nconst AccumulateChart = () => {\r\n\r\n    //로또 회차정보\r\n    const roundSize = useSelector((state: StoreState) => state.Reducer.recentRound)\r\n    const select1 = useSelector((state: StoreState) => state.Reducer.roundSelect1)\r\n    const select2 = useSelector((state: StoreState) => state.Reducer.roundSelect2)\r\n    const MainList = useSelector((state: StoreState) => state.ChartReducer.chartMainData)\r\n    const chartList = useSelector((state: StoreState) => state.ChartReducer.chartList)\r\n    const chartBonusList = useSelector((state: StoreState) => state.ChartReducer.chartBonusList)\r\n    const sortBtn = useSelector((state: StoreState) => state.ChartReducer.sortBtn)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setSelect1 = (value: number) => {\r\n        dispatch(actionCreators.roundSelect1(value))\r\n    }\r\n    const setSelect2 = (value: number) => {\r\n        dispatch(actionCreators.roundSelect2(value))\r\n    }\r\n    const setMainList = (value: any) => {\r\n        dispatch(actionCreators.chartMainData(value))\r\n    }\r\n    const setSortBtn = () => {\r\n        dispatch(actionCreators.sortBtn())\r\n    }\r\n\r\n    const winGraph = (skip: number, limit: number, bonus: boolean, sort: boolean) => {\r\n        if (roundSize === 0) return\r\n        Axios.post(`${process.env.REACT_APP_URL}/winGraph`, { skip: skip, limit: limit !== 0 ? limit : 1, bonus: bonus, sort: sort })\r\n            .then(res => {\r\n                setMainList(res.data)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (btnSelect[0]) {\r\n            if (sortBtn){\r\n            if(JSON.stringify(chartList.sort((a: any, b: any) => a[1] - b[1]))!==JSON.stringify(MainList))  setMainList([...chartList.sort((a: any, b: any) => a[1] - b[1])])\r\n            }\r\n            else{\r\n                if(JSON.stringify(chartList)!==JSON.stringify(MainList))  setMainList([...chartList])\r\n            }\r\n        }\r\n        else {\r\n            if (sortBtn){\r\n            if(JSON.stringify(chartBonusList.sort((a: any, b: any) => a[1] - b[1]))!==JSON.stringify(MainList))  setMainList([...chartBonusList.sort((a: any, b: any) => a[1] - b[1])])\r\n            }\r\n            else\r\n            if(JSON.stringify(chartBonusList)!==JSON.stringify(MainList))  setMainList([...chartBonusList])\r\n        }\r\n    }, [chartList])\r\n\r\n    \r\n    //버튼 토글 \r\n    const [btnSelect, setBtnSelect] = useState<boolean[]>([true, false])\r\n    //sort버튼 토글\r\n\r\n    //버튼 클릭 이벤트\r\n    const selected = (idx: number) => {\r\n        setBtnSelect(btnSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }\r\n\r\n    //최신회차까지 옵션 생성 1회차부터기때문에 +1\r\n    var arr = new Array(roundSize).fill(0)\r\n    var map = arr.map((x, idx: number) => <option key={idx} value={idx + 1}>{idx + 1}</option>)\r\n\r\n\r\n    //회차 선택을 큰 수, 작은 수 순으로 할 경우를 위해 만든 대소 비교 함수.\r\n    const bigSmall = (val1: number, val2: number) => {\r\n        return val1 > val2 ? [val1, val2] : [val2, val1]\r\n    }\r\n\r\n    //옵션1 이벤트\r\n    const handleChange = (e: any) => {\r\n        var val: number = parseInt(e.target.value)\r\n\r\n        var [big, small] = bigSmall(val, select2)\r\n        setSelect1(val)\r\n        winGraph(small - 1, big - small + 1, btnSelect[1], sortBtn)\r\n    }\r\n\r\n    //옵션2 이벤트\r\n    const handleChange2 = (e: any) => {\r\n        var val: number = parseInt(e.target.value)\r\n        var [big, small] = bigSmall(val, select1)\r\n        setSelect2(val)\r\n        winGraph(small - 1, big - small + 1, btnSelect[1], sortBtn)\r\n    }\r\n\r\n    //보너스 미포함 그래프\r\n    const noBonus = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        selected(idx)\r\n        if (sortBtn)\r\n            setMainList([...chartList.sort((a: any, b: any) => a[1] - b[1])])\r\n        else\r\n            setMainList([...chartList.sort((a: any, b: any) => b[1] - a[1])])\r\n    }, 200)\r\n\r\n    //보너스 포함 그래프\r\n    const bonus = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        selected(idx)\r\n        if (sortBtn)\r\n            setMainList([...chartBonusList.sort((a: any, b: any) => a[1] - b[1])])\r\n        else\r\n            setMainList([...chartBonusList.sort((a: any, b: any) => b[1] - a[1])])\r\n    }, 200)\r\n\r\n\r\n    //정렬\r\n    const sort = Debounce(() => {\r\n        if (sortBtn) {\r\n            setMainList([...MainList.sort((a: any, b: any) => b[1] - a[1])])\r\n            setSortBtn()\r\n        } else {\r\n            setMainList([...MainList.sort((a: any, b: any) => a[1] - b[1])])\r\n            setSortBtn()\r\n        }\r\n    }, 200)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LineDiv content={<div>\r\n                <select value={select1} onChange={handleChange}>\r\n                    {map}\r\n                </select>  회차부터&nbsp;&nbsp;\r\n            <select value={select2} onChange={handleChange2}>\r\n                    {map}\r\n                </select>  회차까지\r\n            </div>}></LineDiv>\r\n\r\n            <FlexDiv><Span>가장 많이 뽑힌</Span><ButtonGroup selected={btnSelect} content={[\"번호(보너스X)\", \"보너스번호\"]} click={[noBonus, bonus]}></ButtonGroup><Button border={true} click={sort} hoverBg=\"rgb(224,230,251)\" bg=\"white\" content={<Arrow fill=\"rgb(86,115,235)\" upDown={sortBtn}></Arrow>}></Button></FlexDiv>\r\n\r\n            <Chart></Chart>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccumulateChart\r\n\r\n","import { useRef, useEffect } from 'react'\r\nimport \"chartjs-plugin-labels\"\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux';\r\nimport Chart from 'chart.js';\r\n\r\n//Line차트\r\nconst ScrollDiv = styled.div`\r\n    overflow-x : auto;\r\n`\r\nconst ChartWrapper = styled.div`\r\n    width : ${props => props.size}px\r\n`\r\n\r\n\r\nconst PieChart = () => {\r\n\r\n    var size = useSelector((state) => state.ChartReducer.graphSize);\r\n    var rankList = useSelector((state) => state.ChartReducer.chartMainData);\r\n    const chart = useRef()\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // if (JSON.stringify(rankList) === JSON.stringify(list2.current) && size === size2.current) return\r\n        if(rankList.length===0)return\r\n\r\n        var labels = rankList.map(i => i[0])\r\n        var data = rankList.map(i => i[1])\r\n        var sum = data.reduce((a, b) => a + b)\r\n        var data2 = data.map(x => {\r\n            var result = ((x / sum) * 100)\r\n            if (Math.round(result) === 0) return result.toFixed(5)\r\n            else return result.toFixed(2)\r\n        })\r\n\r\n        if (chart.current) chart.current.destroy()\r\n\r\n        var ctx = document.getElementById('myChart').getContext('2d');\r\n        // Chart.plugins.register({ 모든 툴팁 고정\r\n        //     beforeRender: function (chart) {\r\n        //         if (chart.config.options.showAllTooltips) {\r\n        //             // create an array of tooltips\r\n        //             // we can't use the chart tooltip because there is only one tooltip per chart\r\n        //             chart.pluginTooltips = [];\r\n        //             chart.config.data.datasets.forEach(function (dataset, i) {\r\n        //                 chart.getDatasetMeta(i).data.forEach(function (sector, j) {\r\n        //                     chart.pluginTooltips.push(new Chart.Tooltip({\r\n        //                         _chart: chart.chart,\r\n        //                         _chartInstance: chart,\r\n        //                         _data: chart.data,\r\n        //                         _options: chart.options.tooltips,\r\n        //                         _active: [sector]\r\n        //                     }, chart));\r\n        //                 });\r\n        //             });\r\n\r\n        //             // turn off normal tooltips\r\n        //             chart.options.tooltips.enabled = false;\r\n        //         }\r\n        //     },\r\n        //     afterDraw: function (chart, easing) {\r\n        //         if (chart.config.options.showAllTooltips) {\r\n        //             // we don't want the permanent tooltips to animate, so don't do anything till the animation runs atleast once\r\n        //             if (!chart.allTooltipsOnce) {\r\n        //                 if (easing !== 1)\r\n        //                     return;\r\n        //                 chart.allTooltipsOnce = true;\r\n        //             }\r\n\r\n        //             // turn on tooltips\r\n        //             chart.options.tooltips.enabled = true;\r\n        //             Chart.helpers.each(chart.pluginTooltips, function (tooltip) {\r\n        //                 tooltip.initialize();\r\n        //                 tooltip.update();\r\n        //                 // we don't actually need this since we are not animating tooltips\r\n        //                 tooltip.pivot();\r\n        //                 tooltip.transition(easing).draw();\r\n        //             });\r\n        //             chart.options.tooltips.enabled = false;\r\n        //         }\r\n        //     }\r\n        // });\r\n        //차트 gradient 설정\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#80b6f4');\r\n        gradientStroke.addColorStop(1, '#f49080');\r\n\r\n        var gradientFill = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0.6)\");\r\n        gradientFill.addColorStop(1, \"rgba(244, 144, 128, 0.6)\");\r\n        var chartjs = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: labels,\r\n                datasets: [{\r\n                    label: 'Chart Graph',\r\n                    borderColor: gradientStroke,\r\n                    pointBorderColor: gradientStroke,\r\n                    pointBackgroundColor: gradientStroke,\r\n                    pointHoverBackgroundColor: gradientStroke,\r\n                    pointHoverBorderColor: gradientStroke,\r\n                    pointHoverRadius: 10,\r\n                    pointHoverBorderWidth: 1,\r\n                    pointRadius: 3,\r\n                    fill: true,\r\n                    backgroundColor: gradientFill,\r\n                    data: data2,\r\n                    pointBorderWidth: 5,\r\n                    hoverBorderWidth: 13,\r\n                    data2: data\r\n\r\n\r\n                }]\r\n            },\r\n            animation: {\r\n                animateScale: true,\r\n                animateRotate: true,\r\n                easing: \"easeInOutBack\"\r\n            },\r\n            options: {\r\n                maintainAspectRatio: false, //차트 상위 div에 구속\r\n                legend: {\r\n                    display: false, //범례 안보이게.\r\n                },\r\n                scales: {\r\n                    yAxes: [{ //y축 설정\r\n                        ticks: {\r\n                            fontColor: \"rgba(0,0,0,0.5)\",\r\n                            fontStyle: \"bold\",\r\n                            beginAtZero: true, //데이터 0부터 시작\r\n                            stepSize: 20\r\n                        },\r\n\r\n\r\n                    }],\r\n                    xAxes: [{ //x축 설정\r\n                        gridLines: {\r\n                            zeroLineColor: \"transparent\"\r\n                        },\r\n                        ticks: {\r\n                            padding: 20,\r\n                            fontColor: \"rgba(0,0,0,0.5)\",\r\n                            fontStyle: \"bold\"\r\n                        }\r\n                    }]\r\n                },\r\n                scaleShowLabelBackdrop: true,\r\n                showAllTooltips: true,\r\n                tooltips: {\r\n                    displayColors: false,\r\n                    callbacks: {\r\n                        title: function () { //값을 리턴안해주기때문에 툴팁에 title이 안나온다. 안나오는 것이 깔끔해서 뺐음.\r\n                            return;\r\n                        },\r\n                        label: function (tooltipItem, data) { //라벨 커스텀. 확률과 횟수.\r\n                            return data['labels'][tooltipItem['index']] + \" - \" + data['datasets'][0]['data2'][tooltipItem['index']] + \"번 , 확률 - \" + data['datasets'][0]['data'][tooltipItem['index']] + \"%\";\r\n                        },\r\n                    }\r\n                },\r\n            }\r\n        });\r\n        chart.current = chartjs\r\n    }, [rankList, size])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ScrollDiv>\r\n                <ChartWrapper size={size - 1170}>\r\n                    {/* <Line\r\n                    options={{\r\n                        responsive: true,\r\n                        legend: {\r\n                            display: false,\r\n                            position: \"bottom\",\r\n                            labels : {\r\n                                padding : 10,\r\n                                boxWidth : 25,\r\n                                fontStyle : \"bold\",\r\n                                fontSize : 13\r\n\r\n                            }\r\n                        },\r\n\r\n                        plugins: {\r\n                            labels: [\r\n                                {\r\n                                    render: 'label',\r\n                                    arc: true,\r\n                                    position: 'outside',\r\n                                    fontSize : 14,\r\n                                    fontStyle: 'bold',\r\n                                    fontColor: \"black\"\r\n                                },\r\n                                {\r\n                                    render: 'percentage',\r\n                                    fontSize : 14,\r\n                                    fontStyle: 'bold',\r\n                                    fontColor: \"black\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    }}\r\n                    redraw={resize}\r\n                    data={expData}\r\n                    height={95}\r\n                    width={100}\r\n                /> */}\r\n                    <canvas height=\"300px\" id=\"myChart\"></canvas>\r\n                </ChartWrapper>\r\n            </ScrollDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PieChart\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport Chart from './Chart'\r\nimport ButtonGroup from './ButtonGroup';\r\nimport styled from 'styled-components'\r\nimport LineDiv from './LineDiv';\r\nimport { Debounce } from '../Debounce'\r\nimport PieChart from './LineChart';\r\nimport { RankResult } from '../models/RankResult';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/ChartStore';\r\nimport Button from './Button';\r\nimport Arrow from './Arrow';\r\n//유저들의 로또 결과를 보여주는 그래프\r\n\r\nconst FlexDiv = styled.div`\r\n    display : inline-flex;\r\n    line-height : 1;\r\n    margin-right : 10px;\r\n`\r\n\r\nconst Span = styled.span`\r\n    font-size : .8em;\r\n    color : gray;\r\n    margin-right : 10px;\r\n    margin-top : 7px;\r\n    word-break : keep-all;\r\n`\r\n\r\nconst UserChart = () => {\r\n\r\n\r\n    // const getRankData = async () => {\r\n    //     Axios.post(`${process.env.REACT_APP_URL}/`, {query : `\r\n    //     query{\r\n    //         resultSum(_id:\"id\"){\r\n    //             first second third fourth fifth last\r\n    //         }\r\n    //     }\r\n    //     `}).then(res => {\r\n    //         setRankList(new RankResult(res.data.data.resultSum))\r\n    //     })\r\n    // }\r\n\r\n    // const getWinData = async () => {\r\n    //     Axios.get(`${process.env.REACT_APP_URL}/userWinNum`).then(res => {\r\n    //         addAList(res.data)\r\n    //     })\r\n    // }\r\n    const MainList = useSelector((state: StoreState) => state.ChartReducer.chartMainData)\r\n    const userChartList = useSelector((state: StoreState) => state.ChartReducer.userChartList)\r\n    const userChartSum = useSelector((state: StoreState) => state.ChartReducer.userChartSum)\r\n    const sortBtn = useSelector((state: StoreState) => state.ChartReducer.sortBtn)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setMainList = (value: any) => {\r\n        dispatch(actionCreators.chartMainData(value))\r\n    }\r\n    const setSortBtn = () => {\r\n        dispatch(actionCreators.sortBtn())\r\n    }\r\n    useEffect(() => {\r\n        if (btnSelect[0]) {\r\n            if (sortBtn){\r\n            if(JSON.stringify(userChartSum.sort((a: any, b: any) => a[1] - b[1]))!==JSON.stringify(MainList))  setMainList([...userChartSum.sort((a: any, b: any) => a[1] - b[1])])\r\n            }\r\n            else{\r\n                if(JSON.stringify(userChartSum)!==JSON.stringify(MainList))  setMainList([...userChartSum])\r\n            }\r\n        }\r\n        else {\r\n            if (sortBtn){\r\n            if(JSON.stringify(userChartList.sort((a: any, b: any) => a[1] - b[1]))!==JSON.stringify(MainList))  setMainList([...userChartList.sort((a: any, b: any) => a[1] - b[1])])\r\n            }\r\n            else\r\n            if(JSON.stringify(userChartList)!==JSON.stringify(MainList))  setMainList([...userChartList])\r\n        }\r\n    }, [userChartSum])\r\n\r\n    //버튼 토글 \r\n    const [btnSelect, setBtnSelect] = useState<boolean[]>([true, false])\r\n\r\n    //버튼 클릭 이벤트\r\n    const selected = (idx: number) => {\r\n        btnSelect[idx] = true\r\n        setBtnSelect(btnSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const rankChart = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        selected(idx)\r\n        if (sortBtn)\r\n            setMainList([...userChartSum.sort((a: any, b: any) => a[1] - b[1])])\r\n        else\r\n            setMainList([...userChartSum.sort((a: any, b: any) => b[1] - a[1])])\r\n        setMainList(userChartSum)\r\n        \r\n    }, 200)\r\n\r\n    const winNumChart = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        if (sortBtn)\r\n            setMainList([...userChartList.sort((a: any, b: any) => a[1] - b[1])])\r\n        else\r\n            setMainList([...userChartList.sort((a: any, b: any) => b[1] - a[1])])\r\n        selected(idx)\r\n    }, 200)\r\n\r\n    //정렬\r\n    const sort = Debounce(() => {\r\n        if (sortBtn) {\r\n            setMainList([...MainList.sort((a: any, b: any) => b[1] - a[1])])\r\n            setSortBtn()\r\n        } else {\r\n            setMainList([...MainList.sort((a: any, b: any) => a[1] - b[1])])\r\n            setSortBtn()\r\n        }\r\n    }, 200)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LineDiv content={<FlexDiv><Span>가상 로또</Span><ButtonGroup content={[\"당첨 비율\", \"당첨 번호(3등 ↑)\"]} selected={btnSelect} click={[rankChart, winNumChart]}></ButtonGroup><Button border={true} click={sort} hoverBg=\"rgb(224,230,251)\" bg=\"white\" content={<Arrow fill=\"rgb(86,115,235)\" upDown={sortBtn}></Arrow>}></Button></FlexDiv>}></LineDiv>\r\n\r\n            {btnSelect[0] ? <PieChart></PieChart> : <Chart></Chart>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserChart\r\n","import { useState } from 'react'\r\nimport AccumulateChart from '../components/AccumulateChart'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/ChartStore';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport SubTitle from '../components/SubTitle';\r\nimport ButtonGroup from '../components/ButtonGroup';\r\nimport UserChart from '../components/UserChart';\r\nimport styled from 'styled-components'\r\nimport { Debounce } from '../Debounce'\r\n//실제 로또 통계와 가상로또 통계를 담고 있는 섹션\r\nconst FlexDiv = styled.div`\r\n    display : inline-flex;\r\n    line-height : 1;\r\n    margin-right : 10px;\r\n`\r\nconst Section = styled.section`\r\n    ${props => props.theme.sectionCss}\r\n`\r\nconst ChartSelect = () => {\r\n\r\n    const dispatch = useDispatch(); // 디스패치 함수를 가져옵니다\r\n\r\n    //공통으로 쓰일 리스트 액션\r\n    const addAList = (newList: number[]) => {\r\n        dispatch(actionCreators.chartList(newList))\r\n    }\r\n    //차트 사이즈업 액션\r\n    const graphSizeUp = (size: number) => {\r\n        dispatch(actionCreators.graphSizeUp(size))\r\n    }\r\n    //차트 사이즈다운 액션\r\n    const graphSizeDown = (size: number) => {\r\n        dispatch(actionCreators.graphSizeDown(size))\r\n    }\r\n    \r\n    const setMainList = (value:any) => {\r\n        dispatch(actionCreators.chartMainData(value))\r\n    }\r\n    //차트 사이즈\r\n    var size = useSelector((state: StoreState) => state.Reducer.graphSize);\r\n\r\n    //차트 사이즈업\r\n    const sizeUp = (idx: number) => {\r\n        btnStateChange(idx)\r\n        graphSizeUp(size + 400)\r\n        document.getElementById(\"myChart\")!.style.width = `${size + 400}px`\r\n    }\r\n\r\n    //차트 사이즈다운\r\n    const sizeDown = (idx: number) => {\r\n        if (size < 361) return\r\n        btnStateChange(idx)\r\n        graphSizeDown(size - 400)\r\n        document.getElementById(\"myChart\")!.style.width = `${size - 400}px`\r\n    }\r\n\r\n    //토글 버튼\r\n    const [btnSelect, setBtnSelect] = useState<any[]>([])\r\n    const [graphSelect, setGraphSelect] = useState<any[]>([true, false])\r\n\r\n    //버튼 그룹이 3개이상일 때를 대비해서 반복을 통해 선택된 버튼만 true로 만듦. 근데 버튼을 두개씩만 써서 사실 필요없음 ...\r\n    const btnStateChange = Debounce((idx: number) => {\r\n        btnSelect[idx] = true\r\n        setBtnSelect(btnSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }, 200)\r\n\r\n    //차트 전환\r\n    const selected2 = Debounce((idx: number) => {\r\n        setMainList([]) //값을 초기화하지 않고 그래프를 바꾸면 이전 값의 잔상이 남는다.\r\n        graphSelect[idx] = true\r\n        setGraphSelect(graphSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }, 200)\r\n    return (\r\n        <Section>\r\n            <SubTitle content=\"로또 분석 그래프\"></SubTitle>\r\n            <FlexDiv>\r\n                <ButtonGroup selectBg=\"rgba(235, 83, 116,.12)\" selectColor=\"rgb(235, 83, 116)\" selected={graphSelect} content={[\"실제 로또 통계\", \"가상 로또 통계\"]} click={[selected2, selected2]}></ButtonGroup>\r\n                <ButtonGroup selected={btnSelect} content={[\"확대\", \"축소\"]} click={[sizeUp, sizeDown]}></ButtonGroup>\r\n            </FlexDiv>\r\n\r\n            {graphSelect[0] ? <AccumulateChart/>: <UserChart/>}\r\n\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default ChartSelect\r\n","import { useEffect , useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport LineDiv from '../components/LineDiv'\r\nimport Axios from 'axios'\r\nimport ResultNum from '../components/ResultNum';\r\nimport styled from 'styled-components'\r\n//가장 상단에 위치한 섹션\r\n//처음에 로드되기때문에 로또의 회차 수를 가져오고 가장 최신회차의 번호를 출력한다.\r\nconst Div = styled.div`\r\n    margin-bottom : 30px;\r\n`\r\n\r\nconst SearchLotto = () => {\r\n    const [select,setSelect] = useState<number>(0)\r\n    const [numList,setNumList] = useState<number[]>([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setRoundSize = (value:number) => {\r\n        dispatch(actionCreators.recentRound(value))\r\n    }\r\n    const setRoundSelect2 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect2(value))\r\n    }\r\n    const setRoundSelect1 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect1(value))\r\n    }\r\n\r\n    //회차\r\n    var roundSize = useSelector((state:StoreState)=> state.Reducer.recentRound)\r\n\r\n    //최신 회차가 몇인지 가져옴.\r\n    // const getSize = async () => {\r\n    //     await Axios.post(`${process.env.REACT_APP_URL}/`, {query : `\r\n    //     query{\r\n    //         roundSize\r\n    //     }\r\n    //     `}).then(res => {\r\n    //         var data = res.data.data.roundSize\r\n    //         setSelect(data)\r\n    //         setRoundSelect2(data)\r\n    //         setRoundSelect1(data-30)\r\n    //         setRoundSize(data)\r\n    //         document.getElementById(\"root\")!.style.display = \"block\"\r\n    //         getNum(data)\r\n\r\n    //     })\r\n    // }\r\n\r\n    //선택한 회차 정보를 가져옴\r\n    const getNum = async (num : number) => {\r\n        await Axios.post(`${process.env.REACT_APP_URL}/`, {query : `\r\n            query{\r\n                winningNum(_id: ${num}){\r\n                    num1 num2 num3 num4 num5 num6 bonus\r\n                }\r\n            }\r\n        `}).then(res=> {\r\n            var obj = res.data.data.winningNum\r\n            var list = []\r\n            for(var data in obj){\r\n                list.push(obj[data])\r\n            }\r\n            setNumList([...list])\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //회차정보는 하단에 차트에서도 쓰이기때문에 처음에 가져와서 state로 관리한다.\r\n        if(roundSize>0){\r\n            setSelect(roundSize)\r\n            getNum(roundSize)\r\n        }\r\n    }, [roundSize])\r\n\r\n    //select 옵션 최신회차까지 생성\r\n    var arr = new Array(roundSize).fill(0)\r\n    var map = arr.map((x, idx: number) => <option key={idx} value={idx + 1}>{idx + 1}</option>)\r\n\r\n\r\n    //select onChange\r\n    const handleChange = (e:any) => {\r\n        setSelect(e.target.value)\r\n        getNum(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            <LineDiv fontSize={15} content={<div>지난 로또 조회  <select value={select} onChange={handleChange}>{map}</select>회차</div>}></LineDiv>\r\n            <p>{numList.map((x, idx) => {\r\n                if (idx === 6)\r\n                    return (\r\n                        <span key={idx}>+  <ResultNum key={idx} bonus={true} num={x}></ResultNum></span>\r\n                    )\r\n                else\r\n                    return (\r\n                        <ResultNum key={idx} num={x}></ResultNum>\r\n                    )\r\n            })}</p>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default SearchLotto\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n//당첨자 없을 때 보이는 컴포넌트\r\n\r\n\r\nconst GoLotto = styled.span`\r\n    cursor : pointer;\r\n    text-decoration : underline;\r\n    color : rgba(235,83,116,0.72);\r\n    &:hover{\r\n        color : rgb(235,83,116);\r\n    }\r\n`\r\ntype props = {\r\n    content : string\r\n}\r\n\r\nconst NobodyWin = ({content}:props) => {\r\n    return (\r\n        <div>\r\n            <h4>{content}</h4>\r\n            <GoLotto onClick={()=> window.scrollTo(0,0)}>추첨하러가기</GoLotto>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NobodyWin\r\n","import React from 'react'\r\n//로딩 움짤\r\ntype props = {\r\n  id?:string\r\n} \r\nconst LoadingSvg = ({id}:props) => {\r\n    return (\r\n        <svg id={id} style={{margin: \"auto\", background: \"white\", display: \"block\", shapeRendering: \"auto\"}} width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n<g transform=\"rotate(0 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.9166666666666666s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(30 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.8333333333333334s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(60 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.75s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(90 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.6666666666666666s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(120 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5833333333333334s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(150 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(180 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.4166666666666667s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(210 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.3333333333333333s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(240 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.25s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(270 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.16666666666666666s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(300 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.08333333333333333s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g><g transform=\"rotate(330 50 50)\">\r\n  <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#1d3f72\">\r\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\r\n  </rect>\r\n</g>\r\n</svg>\r\n    )\r\n}\r\n\r\nexport default LoadingSvg\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport SubTitle from '../components/SubTitle'\r\nimport Axios from 'axios'\r\nimport ButtonGroup from '../components/ButtonGroup'\r\nimport ResultNum from '../components/ResultNum'\r\nimport LineDiv from '../components/LineDiv'\r\nimport { Debounce } from '../Debounce'\r\nimport { throttling } from '../Throttle'\r\nimport NobodyWin from '../components/NobodyWin'\r\nimport styled from 'styled-components'\r\nimport LoadingSvg from '../components/LoadingSvg'\r\n//명예의 전당\r\ntype props = {\r\n    check: boolean\r\n}\r\n\r\nconst GroupWrapper = styled.div`\r\n    margin-bottom : 15px;\r\n`\r\nconst ScrollList = styled.div`\r\n    overflow-y : auto;\r\n    max-height : ${window.innerHeight / 2}px;\r\n`\r\n\r\nconst Section = styled.div`\r\n    ${props => props.theme.sectionCss}\r\n`\r\n\r\nconst NumWrapper = styled.div<props>`\r\n    background : ${props => props.check ? \"rgba(224,230,251,.35)\" : \"none\"};\r\n    padding : 10px 0;\r\n    border-radius : 10px;\r\n`\r\n\r\nconst NameSpan = styled.span`\r\n    font-size : 12px;\r\n    font-weight : 600;\r\n    margin-bottom : 10px;\r\n    text-decoration : underline;\r\n    display : block;\r\n`\r\n\r\n\r\nconst HallOfFame = () => {\r\n\r\n    const getWinData = (rankData: string, pageData: number) => {\r\n\r\n        Axios.post(`${process.env.REACT_APP_URL}/`, {\r\n            query: `\r\n        query{    \r\n            winDataByRank(rank:\"${rankData}\",page:${pageData}){\r\n                num1 num2 num3 num4 num5 num6 name time\r\n            }\r\n        }\r\n        `}).then(res => {\r\n                rank.current = rankData\r\n                page.current = pageData\r\n                var data = res.data.data.winDataByRank\r\n\r\n                if(data.length===0) return\r\n                if(data.length<10){\r\n                    document.getElementById(\"loadingIcon\")?.remove()\r\n                } \r\n                if (pageData === 0)\r\n                    setNumList(data)\r\n                else\r\n                    setNumList([...numList, ...data])\r\n            })\r\n    }\r\n    //토글 버튼\r\n    const [selectBtn, setSelectBtn] = useState<boolean[]>([true, false, false])\r\n    //받아온 win데이터\r\n    const [numList, setNumList] = useState<any[]>([])\r\n    const page = useRef(0)\r\n    const rank = useRef(\"first\")\r\n\r\n    useEffect(() => {\r\n        //초기값은 1등한 사람\r\n        getWinData(\"first\", 0)\r\n    }, [])\r\n\r\n    //토글 버튼 state변경 및 데이터 가져오기\r\n    const selected = Debounce((idx: number) => {\r\n        if (selectBtn[idx]) return\r\n        setSelectBtn(selectBtn.map((i, idx2) => {\r\n            if (idx === idx2) return true\r\n            else return false\r\n        }))\r\n        switch (idx) {\r\n            case 0:\r\n                getWinData(\"first\", 0)\r\n                break;\r\n            case 1:\r\n                getWinData(\"second\", 0)\r\n                break;\r\n            case 2:\r\n                getWinData(\"third\", 0)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }, 200)\r\n\r\n    const scrollEvent = throttling(() => {\r\n        var scrollDiv: any = document.getElementById(\"scrollDiv\")\r\n        var scrollHeight = scrollDiv?.scrollHeight\r\n        var htmlHeight = scrollDiv?.clientHeight\r\n        var scrollPosition = scrollDiv?.scrollTop\r\n        if (scrollHeight < Math.round(scrollPosition) + htmlHeight + 150) {\r\n             getWinData(rank.current, page.current + 10)\r\n        }\r\n\r\n    }, 800)\r\n\r\n\r\n    return (\r\n        <Section>\r\n            <SubTitle content={\"명예의 전당\"}></SubTitle>\r\n            <GroupWrapper>\r\n                <LineDiv content={<ButtonGroup content={[\"1등\", \"2등\", \"3등\"]} selected={selectBtn} click={[selected, selected, selected]}></ButtonGroup>}></LineDiv>\r\n            </GroupWrapper>\r\n            <ScrollList id=\"scrollDiv\" onScroll={scrollEvent}>\r\n                {numList.length === 0 ? <NobodyWin content=\"당첨된 사람이 없습니다. 당첨에 도전해보세요!\"></NobodyWin> : ''}\r\n                {numList.map((obj, idx) => {\r\n                    var numCheck = idx % 2 === 0 ? true : false\r\n                    return (\r\n\r\n                        <NumWrapper key={idx} check={numCheck}>\r\n                            <NameSpan>{obj.name}-{obj.time.substr(0,4)}년 {obj.time.substr(4,2)}월 {obj.time.substr(6,2)}일</NameSpan>\r\n                            {Object.keys(obj).map((x, idx) => {\r\n                                if (x !== \"name\"&& x!==\"time\") //이름은 위에서 출력하기 때문에 건너뛰어준다. 1과 2는 맞춘 번호와 맞춘 보너스 번호를 검증하기 위함이다. \r\n                                    return <ResultNum key={idx} num={obj[x][0]} bonusCorrect={obj[x][1] === 2 ? true : false} correct={obj[x][1] === 1 ? true : false}></ResultNum>\r\n                                return undefined\r\n                            })}\r\n                        </NumWrapper>\r\n                    )\r\n                })}\r\n                {numList.length>9 ? <div><LoadingSvg id=\"loadingIcon\"></LoadingSvg></div> : \"\"}\r\n            </ScrollList>\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default HallOfFame\r\n","export function throttling<Params extends any[]>(\r\n    func: (...args: Params) => any,\r\n    timeout: number\r\n  ) {\r\n    let timer: any;\r\n    return (...args: Params) => {\r\n        if(!timer)\r\n      timer = setTimeout(() => {\r\n        func(...args);\r\n        timer = false\r\n      }, timeout);\r\n    }\r\n  }","import React from 'react'\r\n//slide footer 화살표 버튼\r\ntype props ={\r\n    upDown:boolean\r\n    fill:string\r\n}\r\n\r\nconst DoubleArrow = ({upDown,fill}:props) => {\r\n    return (\r\n        <svg width=\"15px\" style={{transform : `rotate(${upDown ? 180 : 0}deg)`, fill : fill}} viewBox=\"0 -50 180.21003 320.50464999999997\" version=\"1.1\" x=\"0px\" y=\"0px\"><g transform=\"translate(194.21574,104.37169)\"><path d=\"m -149.23767,-59.392579 -44.97807,44.979111 12.4348,12.4347954 12.43479,12.4347976 32.36812,-32.366688 c 17.80247,-17.801677 32.52623,-32.366685 32.71947,-32.366685 0.19325,0 14.976582,14.624585 32.851856,32.499079 L -38.9062,10.72091 -26.455957,-1.6984506 -14.005714,-14.117809 -59.131619,-59.244751 c -24.819252,-24.819813 -45.126371,-45.126939 -45.126941,-45.126939 -7.1e-4,0 -20.24117,20.240596 -44.97911,44.979111 z m 0,115.711105 -44.97807,44.979114 12.4348,12.43479 12.43479,12.4348 32.36812,-32.366694 c 17.80247,-17.80167 32.52623,-32.36668 32.71947,-32.36668 0.19325,0 14.976582,14.62458 32.851856,32.49908 L -38.9062,126.43202 -26.455957,114.01266 -14.005714,101.5933 -59.131619,56.466356 c -24.819252,-24.81982 -45.126371,-45.126942 -45.126941,-45.126942 -7.1e-4,0 -20.24117,20.240602 -44.97911,44.979112 z\" strokeWidth=\"0.35277775\"/></g></svg>\r\n    )\r\n}\r\n\r\nexport default DoubleArrow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport DoubleArrow from './DoubleArrow'\r\n\r\n//slide footer 버튼\r\ntype props={\r\n    upDownBtn:boolean\r\n    setUpDownBtn:Function\r\n}\r\ntype props2={\r\n    upDownBtn:boolean\r\n}\r\n\r\nconst BtnDiv = styled.div<props2>`\r\n    background : rgb(86,115,235);\r\n    position : fixed;\r\n    left: 50%;\r\n    z-index : 998;\r\n    transform: translateX(-50%);\r\n    bottom: ${props => props.upDownBtn ? 148 : 0}px;\r\n    width : 50px;\r\n    height : 30px;\r\n    box-shadow : rgba(0, 0, 0, 0.28) -1px 1px 20px;\r\n    border-top-right-radius: 10px;\r\n    border-top-left-radius: 10px;\r\n    transition:all ease-out .3s;\r\n    cursor : pointer;\r\n    @media(max-height : 568px){\r\n        bottom: ${props => props.upDownBtn ? 110 : 0}px;\r\n    }\r\n    \r\n`\r\n\r\nconst SlideFooterBtn = ({upDownBtn,setUpDownBtn}:props) => {\r\n    const clickBtn = () => {\r\n        if(upDownBtn) setUpDownBtn(false)\r\n        else setUpDownBtn(true)\r\n    }\r\n\r\n    return (\r\n        <BtnDiv upDownBtn={upDownBtn} id=\"footerBtn\" onClick={clickBtn}>\r\n            <DoubleArrow fill=\"white\" upDown={upDownBtn}></DoubleArrow>\r\n        </BtnDiv>\r\n    )\r\n}\r\n\r\nexport default SlideFooterBtn\r\n","\r\n    //숫자 롤링 효과\r\n    \r\n    export function numberCounter(target_frame, target_number, addString) {\r\n        this.count = 0; this.diff = 0;\r\n        this.target_count = parseInt(target_number);\r\n        this.target_frame = document.getElementById(target_frame);\r\n        this.timer = null;\r\n        this.addString = addString\r\n        this.counter();\r\n    };\r\n    numberCounter.prototype.counter = function() {\r\n        var self = this;\r\n        this.diff = this.target_count - this.count;\r\n         \r\n        if(this.diff > 0) {\r\n            self.count += Math.ceil(this.diff / 5);\r\n        }\r\n         \r\n        this.target_frame.innerHTML = this.count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + this.addString;\r\n         \r\n        if(this.count < this.target_count) {\r\n            this.timer = setTimeout(function() { self.counter(); }, 10);\r\n        } else {\r\n            clearTimeout(this.timer);\r\n        }\r\n    };\r\n    \r\n","import { useState, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport SlideFooterBtn from '../components/SlideFooterBtn'\r\nimport { useSelector } from 'react-redux'\r\nimport { StoreState } from '../store/index'\r\nimport { numberCounter } from '../components/RollingNum'\r\n//하단 슬라이드 footer\r\n//로컬스토리지에 저장된 유저의 로또 내역을 보여줌.\r\ntype Props = {\r\n    upDownBtn?: boolean\r\n    bg?: string\r\n    color?: string\r\n}\r\n\r\nconst FixedDiv = styled.div<Props>`\r\n    position: fixed;\r\n    bottom: ${props => props.upDownBtn ? 0 : -143}px;\r\n    z-index: 998;\r\n    width: 400px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    height: 148px;\r\n    background: white;\r\n    border-top-right-radius: 50px;\r\n    border-top-left-radius: 50px;\r\n    box-shadow : rgba(0, 0, 0, 0.28) -1px 1px 20px;\r\n    transition:all ease-out .3s;\r\n    overflow-y : auto;\r\n    @media(max-height : 568px){\r\n        height : 110px;\r\n        bottom: ${props => props.upDownBtn ? 0 : -110}px;\r\n    }\r\n    @media(max-width : 400px){\r\n        width : 95%;\r\n    }\r\n`\r\n\r\nconst Title = styled.p`\r\n    font-size : 1.3em;\r\n    font-weight : 600;\r\n    margin-bottom : 0px;\r\n    margin-top : 5px;\r\n    @media(max-height : 568px){\r\n        font-size : 15px;\r\n    }\r\n`\r\nconst LeftDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n    width : 60%;\r\n    padding-left : 40px;\r\n`\r\nconst RightDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n    width: 40%;\r\n`\r\n\r\nconst MainDivWrap = styled.div`\r\n    display : inline-flex;\r\n    margin-bottom : 2vh;\r\n    width : 100%;\r\n`\r\n\r\nconst SmallSpan = styled.span`\r\n    color : gray;\r\n    font-size : 1.1em;\r\n    @media(max-height : 568px){\r\n        font-size : .9em\r\n    }\r\n`\r\nconst MainCss = css`\r\n    padding : 0px 4px;\r\n    border-radius : 5px;\r\n    font-weight : 600;\r\n`\r\nconst MainSpan = styled.span`\r\n    background : rgb(224,230,251);\r\n    color : rgb(86,115,235);\r\n    font-size : 21px;\r\n    @media(max-height : 568px){\r\n        font-size : 16px;\r\n    }\r\n    ${MainCss}\r\n    \r\n`\r\nconst MainSpan2 = styled.span`\r\n    background: rgba(235,83,116,0.12);\r\n    color : rgb(235,83,116);\r\n    font-size : 21px;\r\n    @media(max-height : 568px){\r\n        font-size : 16px;\r\n    }\r\n    ${MainCss}\r\n`\r\nconst MainSmallSpan = styled.span<Props>`\r\n    font-size : 13px;\r\n    background : ${props => props.bg};\r\n    color : ${props => props.color};\r\n    margin-right : 3px;\r\n    @media(max-height : 568px){\r\n        font-size : 10px;\r\n    }\r\n    ${MainCss}\r\n`\r\nconst MainSmallSpanWrapper = styled.div`\r\n    word-break : keep-word;\r\n    padding : 0px 4px;\r\n    overflow-y : auto;\r\n`\r\n\r\nconst UserResult = () => {\r\n\r\n    //슬라이드 버튼\r\n    const [upDownBtn, setUpDownBtn] = useState<boolean>(false)\r\n    //유저 로또 정보\r\n    const UserResult = useSelector((state: StoreState) => state.Reducer.userResult)\r\n\r\n    useEffect(() => {\r\n        //footer slide up시 숫자 롤링\r\n        if (upDownBtn) {\r\n            var sum = parseInt(UserResult.first) + parseInt(UserResult.second) + parseInt(UserResult.third) + parseInt(UserResult.fourth) + parseInt(UserResult.fifth) + parseInt(UserResult.last)\r\n            new numberCounter(\"roll1\", sum * 1000, \"원\")\r\n            new numberCounter(\"roll2\", sum, \"개\")\r\n        }\r\n    }, [upDownBtn, UserResult])\r\n\r\n    return (\r\n        <div>\r\n            <SlideFooterBtn upDownBtn={upDownBtn} setUpDownBtn={setUpDownBtn}/>\r\n            <FixedDiv upDownBtn={upDownBtn}>\r\n                <MainSmallSpanWrapper>\r\n                    <div>\r\n                        <Title>내 로또 내역</Title>\r\n                    </div>\r\n                    <MainDivWrap>\r\n                        <LeftDiv>\r\n                            <SmallSpan>소비 금액</SmallSpan>\r\n                            <div><MainSpan id=\"roll1\"></MainSpan></div>\r\n                        </LeftDiv>\r\n                        <RightDiv>\r\n                            <SmallSpan>구매 수</SmallSpan>\r\n                            <div><MainSpan2 id=\"roll2\"></MainSpan2></div>\r\n                        </RightDiv>\r\n                    </MainDivWrap>\r\n                    <MainSmallSpan bg=\"rgba(255,94,0,.12)\" color=\"rgb(255,94,0)\">1등 {UserResult.first}회</MainSmallSpan>\r\n                    <MainSmallSpan bg=\"rgba(235,83,116,0.12)\" color=\"rgb(235,83,116)\">2등 {UserResult.second}회</MainSmallSpan>\r\n                    <MainSmallSpan bg=\"rgb(224,230,251)\" color=\"rgb(86,115,235)\">3등 {UserResult.third}회</MainSmallSpan>\r\n                    <MainSmallSpan>4등 {UserResult.fourth}회</MainSmallSpan>\r\n                    <MainSmallSpan>5등 {UserResult.fifth}회</MainSmallSpan>\r\n                    <MainSmallSpan>꽝 {UserResult.last}회</MainSmallSpan>\r\n                </MainSmallSpanWrapper>\r\n            </FixedDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserResult\r\n","import React from 'react'\r\n\r\nconst CopyURL = () => {\r\n    return (\r\n        <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"25\" height=\"25\" viewBox=\"0 0 920.000000 920.000000\"\r\n            preserveAspectRatio=\"xMidYMid meet\">\r\n\r\n            <g transform=\"translate(0.000000,920.000000) scale(0.100000,-0.100000)\"\r\n                fill=\"gray\" stroke=\"none\">\r\n                <path d=\"M6800 9144 c-534 -46 -1005 -251 -1403 -609 -50 -46 -456 -448 -902\r\n-895 -677 -679 -802 -808 -759 -787 86 43 160 58 320 64 317 12 644 -52 900\r\n-178 55 -27 111 -60 124 -74 l24 -25 555 553 c492 490 568 562 657 621 209\r\n137 399 197 628 197 174 0 328 -39 460 -118 216 -129 360 -312 433 -550 25\r\n-81 27 -102 27 -263 1 -152 -2 -186 -22 -258 -34 -124 -90 -246 -166 -363 -60\r\n-91 -119 -155 -489 -529 -1157 -1167 -1521 -1527 -1601 -1580 -313 -209 -652\r\n-263 -969 -156 -124 42 -232 108 -343 208 -144 130 -268 176 -447 165 -114 -7\r\n-193 -33 -283 -95 -154 -106 -244 -278 -244 -467 0 -163 57 -293 185 -420 307\r\n-307 728 -507 1185 -566 137 -17 402 -15 545 6 407 58 788 222 1125 484 94 73\r\n1984 1941 2095 2071 211 246 395 583 479 876 63 217 87 392 87 620 1 344 -60\r\n614 -206 919 -257 533 -730 925 -1305 1080 -188 51 -519 84 -690 69z\"/>\r\n                <path d=\"M3995 6329 c-425 -27 -857 -186 -1215 -447 -151 -111 -273 -229\r\n-1206 -1164 -808 -810 -964 -971 -1041 -1075 -254 -339 -403 -697 -458 -1099\r\n-23 -163 -16 -501 14 -659 175 -942 923 -1613 1881 -1687 301 -23 624 25 930\r\n139 215 80 460 219 655 373 44 34 472 454 950 932 758 757 863 866 815 843\r\n-255 -127 -887 -62 -1243 128 -42 22 -87 51 -99 64 l-22 23 -555 -553 c-495\r\n-493 -567 -561 -659 -622 -395 -260 -847 -266 -1181 -14 -162 122 -276 286\r\n-338 486 -25 82 -27 101 -27 263 0 148 4 187 22 252 46 169 124 324 228 454\r\n92 115 1890 1920 1983 1990 234 177 534 265 800 236 219 -25 388 -101 556\r\n-253 93 -84 145 -115 238 -144 60 -19 100 -25 170 -25 166 0 289 50 402 164\r\n112 113 165 242 165 401 0 166 -57 293 -192 426 -399 396 -980 605 -1573 568z\"/>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default CopyURL\r\n","import React from 'react'\r\n\r\nconst FaceBook = () => {\r\n    return (\r\n        <svg id=\"facebook_1_\" data-name=\"facebook (1)\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 10.5 10.5\"><path d=\"M9.188,0H1.313A1.314,1.314,0,0,0,0,1.313V9.188A1.314,1.314,0,0,0,1.313,10.5H5.25V6.891H3.938V5.25H5.25V3.938A1.969,1.969,0,0,1,7.219,1.969H8.531V3.609H7.875c-.362,0-.656-.034-.656.328V5.25H8.859L8.2,6.891H7.219V10.5H9.188A1.314,1.314,0,0,0,10.5,9.188V1.313A1.314,1.314,0,0,0,9.188,0Z\" fill=\"#3672e4\"></path></svg>\r\n    )\r\n}\r\n\r\nexport default FaceBook\r\n","import React from 'react'\r\n\r\nconst Kakao = () => {\r\n    return (\r\n        <svg id=\"kakaotalk\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 13.605 12.554\"><path id=\"Path_22\" data-name=\"Path 22\" d=\"M76.01,73.583h.784L76.4,72.47Z\" transform=\"translate(-71.038 -67.73)\"></path><path id=\"Path_23\" data-name=\"Path 23\" d=\"M6.8,0C3.045,0,0,2.4,0,5.363A5.228,5.228,0,0,0,3.189,9.908c-.1.359-.67,2.311-.692,2.465,0,0-.014.115.061.159a.205.205,0,0,0,.162.01c.215-.03,2.485-1.623,2.878-1.9a8.6,8.6,0,0,0,1.2.082c3.757,0,6.8-2.4,6.8-5.363S10.559,0,6.8,0ZM3.436,4.531c-.009.759.007,1.557-.006,2.3,0,.239-.141.31-.327.378a.123.123,0,0,1-.065,0c-.213-.042-.382-.118-.387-.382-.015-.746,0-1.546-.006-2.3-.18-.007-.436.007-.6,0a.368.368,0,0,1-.383-.381.36.36,0,0,1,.387-.381c.614-.009,1.374-.009,1.987,0a.358.358,0,0,1,.386.381.368.368,0,0,1-.381.381C3.872,4.538,3.616,4.524,3.436,4.531Zm3.3,2.646a.6.6,0,0,1-.25.054.322.322,0,0,1-.327-.173l-.2-.509H4.765l-.2.509a.323.323,0,0,1-.327.173.6.6,0,0,1-.249-.054c-.109-.05-.213-.187-.094-.557L4.84,4.148a.589.589,0,0,1,.523-.387.593.593,0,0,1,.523.388l.938,2.47C6.944,6.989,6.84,7.129,6.732,7.176Zm1.983,0H7.456a.369.369,0,0,1-.376-.36V4.153a.4.4,0,0,1,.8,0V6.459h.834a.36.36,0,1,1,0,.719Zm3.074-.3a.392.392,0,0,1-.7.183l-.92-1.219-.136.136v.856a.392.392,0,1,1-.785,0V4.156a.392.392,0,1,1,.785,0V5L11.124,3.9a.3.3,0,0,1,.218-.088.4.4,0,0,1,.386.365.307.307,0,0,1-.086.239l-.9.894.966,1.28a.392.392,0,0,1,.075.29Z\"></path></svg>\r\n    )\r\n}\r\n\r\nexport default Kakao\r\n","import React from 'react'\r\n\r\nconst NaverBlog = () => {\r\n    return (\r\n        <svg id=\"download_1_\" data-name=\"download (1)\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"0 0 15.081 12.471\"><path id=\"Path_18\" data-name=\"Path 18\" d=\"M51.335-161.635a2.947,2.947,0,0,0-2.095,2.259,22.221,22.221,0,0,0-.094,3.183c.035,2.376.047,2.575.3,3.09a3.973,3.973,0,0,0,.69.925c.761.667,1.065.737,3.312.784l2.06.047.515,1.006a4.453,4.453,0,0,0,.667,1.053c.082.023.374-.421.667-1.006l.527-1.053,2.025-.047c1.931-.035,2.048-.047,2.692-.363a2.951,2.951,0,0,0,1.451-1.556,27.939,27.939,0,0,0-.094-6.788,3.494,3.494,0,0,0-1.5-1.381c-.5-.234-.726-.246-5.559-.269A41.529,41.529,0,0,0,51.335-161.635Zm3.616,3.16c.374.3.492.878.492,2.305v1.4h-.936v-1.346c0-1.194-.023-1.369-.234-1.58a.915.915,0,0,1-.234-.655c0-.421.012-.421.375-.351A1.357,1.357,0,0,1,54.951-158.475Zm-3.253.538v.69l.351-.176c.445-.222.819-.129,1.322.3.339.3.374.41.374.995a1.092,1.092,0,0,1-.339.995,1.155,1.155,0,0,1-1.416.316c-.164-.105-.293-.14-.293-.07s-.211.117-.468.117h-.468v-3.862H51.7Zm6.858.655a1.537,1.537,0,0,1,.573,1.439,1.6,1.6,0,0,1-2.832.5,1.424,1.424,0,0,1,1.451-2.188A1.99,1.99,0,0,1,58.556-157.282Zm2.926-.047c.047.094.105.094.2,0a.913.913,0,0,1,.515-.129h.386v1.521c0,1.638-.105,2.036-.609,2.387a1.382,1.382,0,0,1-.7.187c-.433,0-.445-.012-.445-.41,0-.351.035-.41.269-.41a.514.514,0,0,0,.55-.562c0-.257-.012-.257-.257-.094a.884.884,0,0,1-1.112-.047,1.262,1.262,0,0,1-.655-1.241,1.314,1.314,0,0,1,.644-1.182C60.592-157.481,61.364-157.5,61.481-157.329Z\" transform=\"translate(-49.139 161.759)\" fill=\"#57c04f\"></path><path id=\"Path_19\" data-name=\"Path 19\" d=\"M71.109-117.9a.483.483,0,0,0,.468.773.5.5,0,0,0,.286-.687A.54.54,0,0,0,71.109-117.9Z\" transform=\"translate(-68.398 123.222)\" fill=\"#57c04f\"></path><path id=\"Path_20\" data-name=\"Path 20\" d=\"M116.714-117.79c-.115.325.019.6.315.63.315.038.535-.124.535-.4s-.172-.439-.5-.439C116.866-118,116.771-117.943,116.714-117.79Z\" transform=\"translate(-108.656 123.207)\" fill=\"#57c04f\"></path><path id=\"Path_21\" data-name=\"Path 21\" d=\"M147.375-118.843c-.21.048-.334.477-.2.687a.608.608,0,0,0,.4.181c.248.029.315-.01.391-.21a.454.454,0,0,0-.2-.63.637.637,0,0,0-.2-.086C147.547-118.89,147.461-118.871,147.375-118.843Z\" transform=\"translate(-135.487 124.009)\" fill=\"#57c04f\"></path></svg>\r\n    )\r\n}\r\n\r\nexport default NaverBlog\r\n","import React from 'react'\r\n\r\nconst KakaoStory = () => {\r\n    return (\r\n        <svg version=\"1.1\"  width=\"25\" height=\"25\" viewBox=\"0 0 30 32\" >\r\n\t<path d=\"M22.869 5.033v11.045c0 0 0.117 3.786-2.225 7.649-1.796 2.964-4.017 4.733-4.954 5.397-0.285 0.202-0.646 0.028-0.646 0.028l-3.807-4.114c0 0-0.31-0.393 0.057-0.691 0.75-0.607 2.354-1.98 3.145-3.312 1.267-2.136 1.132-3.493 1.132-3.493s-4.020 0-5.23 0-1.21-1.21-1.21-1.21 0-9.776 0-11.142 1.21-1.366 1.21-1.366 10.109 0 11.319 0 1.209 1.21 1.209 1.21z\" fill=\"#000000\"></path>\r\n</svg>\r\n\r\n    )\r\n}\r\n\r\nexport default KakaoStory\r\n","import React, { useEffect } from 'react'\r\nimport CopyURL from '../SnsIcon/CopyUrl'\r\nimport FaceBook from '../SnsIcon/FaceBook'\r\nimport Kakao from '../SnsIcon/Kakao'\r\nimport NaverBlog from '../SnsIcon/NaverBlog'\r\nimport LineDiv from './LineDiv'\r\nimport styled, { css } from 'styled-components'\r\nimport KakaoStory from '../SnsIcon/KakaoStory'\r\nimport { Debounce } from '../Debounce'\r\n//SNS공유하기 \r\nconst BtnCss = css`\r\n    border : 0;\r\n    outline : 0;\r\n    width : 50px;\r\n    height : 50px;\r\n    padding-top : 5px;\r\n    cursor : pointer;\r\n`\r\nconst Button = styled.button`\r\n    background : ${props => props.color};\r\n    ${BtnCss}\r\n\r\n`\r\n\r\nconst LeftButton = styled.button`\r\n    border-top-left-radius : 5px;\r\n    border-bottom-left-radius : 5px;\r\n    background : ${props => props.color};\r\n    ${BtnCss}\r\n`\r\n\r\nconst RightButton = styled.button`\r\n    border-top-right-radius : 5px;\r\n    border-bottom-right-radius : 5px;\r\n    background : ${props => props.color};\r\n    ${BtnCss}\r\n`\r\nconst HiddenTextArea = styled.textarea`\r\n    position : relative;\r\n    top : -60px;\r\n    z-index: -999;\r\n    opacity : 0;\r\n` \r\nconst ToastMsg = styled.p`\r\n    color : gray;\r\n    transition:all ease-out .3s;\r\n    opacity : 0;\r\n    position : relative;\r\n    font-size : .9em;\r\n`\r\n\r\nconst SnsGroup = () => {\r\n    useEffect(() => {\r\n        if(!window.Kakao.isInitialized())\r\n        window.Kakao.init(\"a80efbd3b98c1eb5db9344a5b1289b50\")\r\n        //공유할 때 썸네일에 결과만 공유하고 접속은 테스트하는 페이지로 넘기기 위해서(동적으로 썸네일이 안바뀌기 때문에), url에 리다이렉트 함수를 넣어둔 페이지의 url을 넣어준다.\r\n\r\n        // 카카오톡 공유\r\n\r\n        window.Kakao.Link.createDefaultButton({\r\n            container: '#kakao-link-btn',\r\n            objectType: 'feed',\r\n            content: {\r\n                title: '테스트 타이틀',\r\n                description: \"테스트\",\r\n                imageUrl: \"https://mycolor.kr/images/personalColor/springLip.png\",\r\n                imageWidth: 800,\r\n                imageHeight: 400,\r\n                link: {\r\n                    mobileWebUrl: \"https://hoonsbory.github.io/lotto-ts-react/\",\r\n                    webUrl: \"https://hoonsbory.github.io/lotto-ts-react/\"\r\n                }\r\n            },\r\n            buttons: [\r\n                {\r\n                    title: '테스트 하러가기',\r\n                    link: {\r\n                        mobileWebUrl: \"https://hoonsbory.github.io/lotto-ts-react/\",\r\n                        webUrl: \"https://hoonsbory.github.io/lotto-ts-react/\"\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }, [])\r\n\r\n    var popupWidth = 500;\r\n    var popupHeight = 500;\r\n    var popupX = (window.screen.width / 2) - (popupWidth / 2);\r\n\r\n    var popupY = (window.screen.height / 2) - (popupHeight / 2);\r\n    var size = 'status=no, height=' + popupHeight + ', width=' + popupWidth + ', left=' + popupX + ', top=' + popupY;\r\n    var url = \"https://hoonsbory.github.io/lotto-ts-react/\"\r\n    const  facebook = Debounce(() => {\r\n        window.open('http://www.facebook.com/sharer/sharer.php?u=' + url, \"name\", size)\r\n    }, 200)\r\n    const  kakaoStory = Debounce(() => {\r\n        window.open('https://story.kakao.com/share?url=' + url, \"name\", size)\r\n    }, 200)\r\n    const  naver = Debounce(() => {\r\n        window.open('http://share.naver.com/web/shareView.nhn?url=' + url + \"&title=퍼스널컬러\", \"name\", size)\r\n    }, 200)\r\n    const urlCopy = Debounce(() => {\r\n        var toast = document.getElementById(\"toast\")\r\n        toast.style.opacity = 1\r\n        var copyText = document.getElementById(\"copy\");\r\n        copyText.select();\r\n        document.execCommand(\"Copy\");\r\n        copyText.blur()\r\n\r\n        setTimeout(() => {\r\n            toast.style.opacity = 0\r\n        }, 1500);\r\n    },500)\r\n \r\n    return (\r\n        <div>\r\n            <LineDiv content=\"공유하기\"></LineDiv>\r\n            <LeftButton onClick={facebook} color=\"rgb(224,230,251)\"><FaceBook></FaceBook></LeftButton>\r\n            <Button onClick={kakaoStory} color=\"rgba(239, 219, 72, 0.48)\"><KakaoStory></KakaoStory></Button>\r\n            <Button onClick={naver} color=\"rgba(87, 192, 79, 0.19)\"><NaverBlog></NaverBlog></Button>\r\n            <Button id=\"kakao-link-btn\" color=\"rgba(239, 219, 72, 0.48)\"><Kakao></Kakao></Button>\r\n            <RightButton onClick={urlCopy} color=\"rgba(153, 153, 153, 0.19)\"><CopyURL></CopyURL></RightButton>\r\n            <ToastMsg id=\"toast\">클립보드에 주소가 복사되었습니다.</ToastMsg>\r\n            <HiddenTextArea readOnly id=\"copy\" value=\"https://hoonsbory.github.io/lotto-ts-react/\"></HiddenTextArea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SnsGroup\r\n","import SnsGroup from \"../components/SnsGroup\"\r\nimport styled from 'styled-components'\r\n//Footer\r\nconst P = styled.p`\r\n    color : #262626;\r\n    margin-top : 50px;\r\n\r\n`\r\nconst Div = styled.div`\r\n    color : rgb(142, 142, 142);\r\n    font-size : .8em;\r\n`\r\n\r\nconst Span = styled.span`\r\n    color : black;\r\n    font-size : .9em;\r\n`\r\nconst A = styled.a`\r\n    color : rgb(142, 142, 142);\r\n`\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <SnsGroup></SnsGroup>\r\n            <Div>\r\n            본 사이트의 모든 데이터는 로또 공식 홈페이지 <br></br>동행복권의 자료를 활용하였습니다.\r\n                <P>버그 제보 및 문의</P>\r\n                <Span>개발자 신재훈 - </Span><A href=\"mailto:hoonsbory@gmail.com\">hoonsbory@gmail.com</A>\r\n            </Div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport LoadingSvg from './LoadingSvg'\r\n//로딩 컴포넌트\r\nconst Bg = styled.div`\r\n    width : 100%;\r\n    height : 130%;\r\n    left : 0;\r\n    bottom : 0;\r\n    position : fixed;\r\n    background : rgba(0,0,0,.5);\r\n    display : none;\r\n    transition : all ease-out .3s;\r\n    z-index : 999;\r\n`\r\n\r\nconst CenterDiv = styled.div`\r\n    position : fixed;\r\n    left : 50%;\r\n    top : 50%;\r\n    transform : translate(-50%,-50%);\r\n    padding: 10px;\r\n    background : white;\r\n    border-radius : 15px;\r\n    font-size : 13px;\r\n`\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <Bg id=\"loadingBg\">\r\n            <CenterDiv>\r\n                <LoadingSvg></LoadingSvg>\r\n                번호를 조합 중입니다\r\n            </CenterDiv>\r\n        </Bg>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import { useEffect, useRef } from 'react'\r\nimport Axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/ChartStore';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport { RankResult } from '../models/RankResult';\r\n\r\nconst UpdateInterval = () => {\r\n    const roundSize = useSelector((state: StoreState) => state.Reducer.recentRound)\r\n    const select1 = useSelector((state: StoreState) => state.Reducer.roundSelect1)\r\n    const select2 = useSelector((state: StoreState) => state.Reducer.roundSelect2)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setChartList = (value: number[]) => {\r\n        dispatch(actionCreators.chartList(value))\r\n    }\r\n    const setChartBonusList = (value: number[]) => {\r\n        dispatch(actionCreators.chartBonusList(value))\r\n    }\r\n    const setUserSum = (value: any) => {\r\n        dispatch(actionCreators.userChartSum(value))\r\n    }\r\n    const setUserChartList = (value: number[]) => {\r\n        dispatch(actionCreators.userChartList(value))\r\n    }\r\n\r\n    const setRoundSize = (value: number) => {\r\n        dispatch(actionCreators.recentRound(value))\r\n    }\r\n    const setRoundSelect2 = (value: number) => {\r\n        dispatch(actionCreators.roundSelect2(value))\r\n    }\r\n    const setRoundSelect1 = (value: number) => {\r\n        dispatch(actionCreators.roundSelect1(value))\r\n    }\r\n    //최신 회차가 몇인지 가져옴.\r\n    const getSize = async () => {\r\n        await Axios.post(`${process.env.REACT_APP_URL}/`, {\r\n            query: `\r\n        query{\r\n            roundSize\r\n        }\r\n        `}).then(res => {\r\n                var data = res.data.data.roundSize\r\n                setRoundSelect2(data)\r\n                setRoundSelect1(data - 30)\r\n                setRoundSize(data)\r\n                document.getElementById(\"root\")!.style.display = \"block\"\r\n\r\n            })\r\n    }\r\n\r\n    const winGraph = (skip: number, limit: number, bonus: boolean, sort: boolean) => {\r\n        if (roundSize === 0) return\r\n        Axios.post(`${process.env.REACT_APP_URL}/winGraph`, { skip: skip, limit: limit !== 0 ? limit : 1, bonus: bonus, sort: sort })\r\n            .then(res => {\r\n                if (!bonus) {\r\n                    setChartList(res.data)\r\n                }\r\n                else {\r\n                    setChartBonusList(res.data)\r\n                }\r\n            })\r\n    }\r\n\r\n    const getRankData = async () => {\r\n        Axios.post(`${process.env.REACT_APP_URL}/`, {\r\n            query: `\r\n        query{\r\n            resultSum(_id:\"id\"){\r\n                last fifth fourth third second first\r\n            }\r\n        }\r\n        `}).then(res => {\r\n                var data = res.data.data.resultSum\r\n                var list = Object.keys(data).map(i => {\r\n                    switch (i) {\r\n                        case \"first\":\r\n                            return [\"1등\", data[i]]\r\n                        case \"second\":\r\n                            return [\"2등\", data[i]]\r\n                        case \"third\":\r\n                            return [\"3등\", data[i]]\r\n                        case \"fourth\":\r\n                            return [\"4등\", data[i]]\r\n                        case \"fifth\":\r\n                            return [\"5등\", data[i]]\r\n                        case \"last\":\r\n                            return [\"꽝\", data[i]]\r\n                        default:\r\n                            break;\r\n                    }\r\n                })\r\n                setUserSum(list)\r\n            })\r\n    }\r\n\r\n    const getWinData = async () => {\r\n        Axios.get(`${process.env.REACT_APP_URL}/userWinNum`).then(res => {\r\n            setUserChartList(res.data)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    //회차 선택을 큰 수, 작은 수 순으로 할 경우를 위해 만든 대소 비교 함수.\r\n    const bigSmall = (val1: number, val2: number) => {\r\n        return val1 > val2 ? [val1, val2] : [val2, val1]\r\n    }\r\n\r\n    useEffect(() => {\r\n        //처음 그래프 정보 로드\r\n        getSize()\r\n        if(roundSize===0) return\r\n        var [big, small] = bigSmall(select1, select2)\r\n        winGraph(small - 1, big - small + 1, false, false)\r\n        winGraph(small - 1, big - small + 1, true, false)\r\n        getRankData()\r\n        getWinData()\r\n    }, [roundSize])\r\n\r\n    const id = useRef<any>()\r\n    useEffect(() => {\r\n        if(id) clearInterval(id.current)\r\n        id.current = setInterval(() => {\r\n            interval()\r\n        }, 15000);\r\n    }, [select1,select2])\r\n\r\n    function interval() {\r\n        var [big, small] = bigSmall(select1, select2)\r\n        winGraph(small - 1, big - small + 1, false, false)\r\n        winGraph(small - 1, big - small + 1, true, false)\r\n        getRankData()\r\n        getWinData()\r\n    }\r\n}\r\n\r\nexport default UpdateInterval\r\n","import FakeLotto from './sections/FakeLotto';\r\nimport ChartSelect from './sections/ChartSelect';\r\nimport SearchLotto from './sections/SearchLotto';\r\nimport { disableReactDevTools } from '@fvilers/disable-react-devtools';\r\nimport HallOfFame from './sections/HallOfFame';\r\nimport './App.css'\r\nimport UserResult from './sections/UserResult';\r\nimport Footer from './sections/Footer';\r\nimport {useEffect} from 'react'\r\nimport Loading from './components/Loading';\r\nimport UpdateInterval from './components/UpdateInterval'\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  disableReactDevTools();\r\n}\r\n\r\n\r\n\r\nlet pcCheck:string = window.navigator.userAgent.indexOf(\"Mobile\") > -1 ? \"true\" : \"false\"\r\nsessionStorage.setItem(\"mobile\",pcCheck)\r\n\r\nfunction App() {\r\n    UpdateInterval()\r\n  \r\n  return (\r\n        <div className=\"App\">\r\n          <h1>{process.env.REACT_APP_API_KEY}</h1>\r\n          <SearchLotto></SearchLotto>\r\n          <FakeLotto></FakeLotto>\r\n          <ChartSelect></ChartSelect>\r\n          <HallOfFame></HallOfFame>\r\n          <UserResult></UserResult>\r\n          <Footer></Footer>\r\n          <Loading></Loading>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { State, Reducer } from './store';\r\nimport { ChartState, ChartReducer } from './ChartStore'\r\n\r\nexport interface StoreState {\r\n    Reducer: State;\r\n    ChartReducer: ChartState; \r\n\r\n}\r\n\r\nexport default combineReducers<StoreState>({\r\n    Reducer,\r\n    ChartReducer\r\n});","import { css, keyframes } from 'styled-components'\r\n// 재사용성 높은 css들 모아놓고 테마로 씀\r\nconst theme = {\r\n  fadeUp: keyframes`\r\n    0% {\r\n      opacity: 0;\r\n      transform : translateY(10px);\r\n    }\r\n    \r\n    100% {\r\n      opacity: 1;\r\n      transform : translateY(0px);\r\n    }\r\n  `,\r\n  flexDiv: css`\r\n      display: flex;\r\n      flex-direction: row;\r\n    `,\r\n  noneOutline: css`\r\n    outline : 0;\r\n    cursor : pointer;\r\n    transition:all ease-out .3s;\r\n    padding : 4px 8px;\r\n    font-size : .9em;\r\n    `,\r\n  sectionCss: css`\r\n    margin-bottom : 60px;\r\n    animation: ${props => props.theme.fadeUp} .5s linear alternate;\r\n  `\r\n}\r\n\r\nexport default theme","import { createGlobalStyle } from 'styled-components'\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  #root{\r\n    box-sizing: border-box;\r\n    padding: 12px 20px;\r\n    color : #262626;\r\n    text-align : center;\r\n    align-items : center;\r\n    margin: auto;\r\n    width: 430px;\r\n    overflow: hidden;\r\n    min-height: 100vh;\r\n    display : none;\r\n    margin-bottom : 20vh;\r\n  }\r\n  .afterload{\r\n    display : block;\r\n  }\r\n  @media(max-width : 414px){\r\n    #root{\r\n      width : 100%;\r\n      font-size : 13px;\r\n    }\r\n  }\r\n  @media(max-width : 325px){\r\n    #root{\r\n      width : 320px;\r\n      font-size : 12px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { compose, createStore } from 'redux';\nimport rootReducer from './store/index';\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme'\n// **** (1) Provider 불러오기\nimport { Provider } from 'react-redux'\nimport Global from './global'\nimport * as dotenv from 'dotenv'\n\ndotenv.config()\n\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,composeEnhancers())\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n    <App />\n    <Global></Global>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}