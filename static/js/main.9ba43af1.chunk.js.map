{"version":3,"sources":["store/store.ts","components/Button.tsx","components/ResultNum.tsx","components/LineDiv.tsx","Debounce.ts","components/NumLineWrap.tsx","pages/Draw.tsx","components/NumList.tsx","components/Rank.tsx","components/DeleteSvg.tsx","components/SubTitle.tsx","models/RankResultNum.ts","models/RankResult.ts","pages/SelectNum.tsx","components/Chart.tsx","components/ButtonGroup.tsx","components/Arrow.tsx","components/AccumulateChart.tsx","components/PieChart.tsx","components/UserChart.tsx","pages/ChartSelect.tsx","pages/SearchLotto.tsx","components/NobodyWin.tsx","pages/HallOfFame.tsx","components/DoubleArrow.tsx","components/SlideFooterBtn.tsx","components/RollingNum.js","pages/UserResult.tsx","App.tsx","reportWebVitals.ts","store/index.ts","theme.ts","global.ts","index.tsx"],"names":["LIST","ALIST","RESIZE","GRAPHSIZE","DRAWCHECK","CORRECTED","BONUSCORRECT","RECENTROUND","TRIGGER","ROUNDSELECT1","ROUNDSELECT2","USERRESULT","actionCreators","list","newList","type","accumulateList","resizeOpt","value","graphSizeUp","size","graphSizeDown","drawCheck","corrected","recentRound","resultTrigger","bonusCorrect","roundSelect1","roundSelect2","userResult","initialState","graphSize","Btn","styled","button","props","float","border","bg","color","fontSize","sessionStorage","getItem","hoverBg","theme","noneOutline","Button","content","click","id","onClick","NumSpan","span","fadeUp","bonus","ResultNum","num","correct","Div","div","LineDiv","Debounce","func","timeout","timer","args","clearTimeout","setTimeout","NumLineWrapper","p","NumLineWrap","SmallDiv","Draw","trigger","setTrigger","setCorrect","setDraw","setbonusCorrect","useState","result","setResult","random","useCallback","arr","document","getElementById","setAttribute","setInterval","clearInterval","number","Math","floor","includes","innerText","toString","stop","parseInt","forEach","i","length","reset","removeAttribute","style","map","x","idx","selected","NumList","RankSpan","Rank","rankResultNum","rankResult","listSize","setUserResult","rankColor","setRankColor","sendResult","sumResult","resultNums","a","Axios","post","then","res","console","log","data","catch","err","useEffect","correctList","filter","bonusNum","indexOf","setLast","setFifth","setFourth","list2","setSecond","setSecondNums","setFirst","setFirstNums","setThird","setThirdNums","rank","getFirst","getSecond","getThird","name","window","prompt","trim","setWinnerName","pastResult","localStorage","newResult","JSON","parse","first","second","third","fourth","getFourth","fifth","getFifth","last","getLast","setItem","stringify","DeleteSvg","width","xmlns","data-name","viewBox","y","d","Head","h3","SubTitle","RankResultNum","firstNums","secondNums","thirdNums","winnerName","this","push","RankResult","obj","Section","section","sectionCss","NumDiv","SelectNum","useSelector","state","Reducer","draw","dispatch","useDispatch","setList","selectBtn","setSelectBtn","line","setLine","select","afterDraw","splice","nextElementSibling","firstChild","nodeName","confirm","deleteSelectLine","deleteLine","alert","sort","b","ChartWrapper","ScrollDiv","Chart","resize","expData","labels","datasets","borderWidth","hoverBorderWidth","backgroundColor","options","plugins","render","fontStyle","maintainAspectRatio","legend","display","scales","yAxes","ticks","suggestedMax","beginAtZero","redraw","height","Group","btnCss","css","selectBg","selectColor","FirstBtn","LastBtn","ButtonGroup","hover","Arrow","upDown","fill","transform","FlexDiv","Span","AccumulateChart","addAList","roundSize","select1","select2","winGraph","skip","limit","bigSmall","big","small","btnSelect","setBtnSelect","sortBtn","setSortBtn","idx2","Array","val1","val2","noBonus","onChange","e","val","target","PieChart","rankList","responsive","position","padding","boxWidth","arc","UserChart","getRankData","query","setRankList","resultSum","getWinData","get","rankChart","winNumChart","ChartSelect","graphSelect","setGraphSelect","selected2","body","getElementsByTagName","SearchLotto","setSelect","numList","setNumList","setRoundSize","getSize","getNum","winningNum","GoLotto","NobodyWin","scrollTo","GroupWrapper","HallOfFame","winDataByRank","marginBottom","Object","keys","DoubleArrow","version","stroke-width","BtnDiv","SlideFooterBtn","upDownBtn","setUpDownBtn","numberCounter","target_frame","target_number","addString","count","diff","target_count","counter","prototype","self","ceil","innerHTML","replace","FixedDiv","innerWidth","Title","innerHeight","LeftDiv","RightDiv","MainDivWrap","SmallSpan","MainCss","MainSpan","MainSpan2","MainSmallSpan","UserResult","sum","wordBreak","disableReactDevTools","HeadLine","h2","pcCheck","navigator","userAgent","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","keyframes","flexDiv","GlobalStyle","createGlobalStyle","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","ReactDOM"],"mappings":"mNAqBaA,EAAO,OACPC,EAAQ,QACRC,EAAS,SACTC,EAAY,YACZC,EAAY,YACZC,EAAY,YACZC,EAAe,eACfC,EAAc,cACdC,EAAU,UACVC,EAAe,eACfC,EAAe,eACfC,EAAa,aA2JnB,IAAMC,EAAiB,CAC5BC,KAjFF,SAAcC,GACZ,MAAO,CACLC,KAAMf,EACNc,QAASA,IA8ELE,eA3ER,SAAwBF,GACtB,MAAO,CACLC,KAAMd,EACNa,QAASA,IAwEWG,UArExB,SAAmBC,GACjB,MAAO,CACLH,KAAMb,EACNgB,MAAOA,IAkEwBC,YA/DnC,SAAqBC,GACnB,MAAO,CACLL,KAAMZ,EACNiB,KAAMA,IA4DsCC,cAzDhD,SAAuBD,GACrB,MAAO,CACLL,KAAMZ,EACNiB,KAAMA,IAsDqDE,UAnD/D,SAAmBJ,GACjB,MAAO,CACLH,KAAMX,EACNc,MAAOA,IAgD+DK,UA7C1E,SAAmBL,GACjB,MAAO,CACLH,KAAMV,EACNa,MAAOA,IA0C0EM,YAjCrF,SAAqBN,GACnB,MAAO,CACLH,KAAMR,EACNW,MAAOA,IA8BuFO,cA3BlG,SAAuBP,GACrB,MAAO,CACLH,KAAMP,EACNU,MAAOA,IAwBsGQ,aAvCjH,SAAsBR,GACpB,MAAO,CACLH,KAAMT,EACNY,MAAOA,IAoCoHS,aArB/H,SAAsBT,GACpB,MAAO,CACLH,KAAMN,EACNS,MAAOA,IAkBkIU,aAf7I,SAAsBV,GACpB,MAAO,CACLH,KAAML,EACNQ,MAAOA,IAYgJW,WAT3J,SAAoBX,GAClB,MAAO,CACLH,KAAMJ,EACNO,MAAOA,KAULY,EAAsB,CAC1BjB,KAAM,CAAC,IACPG,eAAgB,GAChBC,WAAW,EACXc,UAAW,KACXT,WAAW,EACXC,UAAW,GACXG,aAAc,GACdF,YAAa,EACbC,eAAe,EACfE,aAAc,EACdC,aAAc,EACdC,WAAY,I,wWCvLd,IAAMG,EAAMC,IAAOC,OAAV,KACS,SAAAC,GAAK,OAAIA,EAAMC,SACd,SAAAD,GAAK,OAAIA,EAAME,OAAS,oCAAsC,KAG1D,SAAAF,GAAK,OAAIA,EAAMG,IAAM,aAC1B,SAAAH,GAAK,OAAIA,EAAMI,OAAS,WAGpB,SAAAJ,GAAK,OAAIA,EAAMK,UAAY,UACvC,SAAAL,GAAK,MAAuC,SAAnCM,eAAeC,QAAQ,UAAvB,gCAAqEP,EAAMQ,SAAW,kBAAtF,oDAAoJR,EAAMQ,SAAW,kBAArK,wBACT,SAAAR,GAAK,OAAIA,EAAMS,MAAMC,eAUhBC,EARA,SAAC,GAAyE,IAAxEV,EAAuE,EAAvEA,MAAMG,EAAiE,EAAjEA,MAAMD,EAA2D,EAA3DA,GAAGS,EAAwD,EAAxDA,QAAQC,EAAgD,EAAhDA,MAAMC,EAA0C,EAA1CA,GAAGN,EAAuC,EAAvCA,QAAQN,EAA+B,EAA/BA,OAAQG,EAAuB,EAAvBA,SAC7D,OACI,cAACR,EAAD,CAAKQ,SAAUA,EAAUH,OAAQA,EAAQD,MAAOA,EAAOO,QAASA,EAASJ,MAAOA,EAAOD,GAAIA,EAAIY,QAASF,EAAOC,GAAIA,EAAnH,SACKF,K,6ZClBb,IAAMI,EAAUlB,IAAOmB,KAAV,KACI,SAAAjB,GAAK,OAAGA,EAAMS,MAAMS,UAOlB,SAAAlB,GAAK,OAAIA,EAAMT,cAAgBS,EAAMmB,MAAQ,mBAAsBnB,EAAMZ,UAAY,yBAA4B,WACtH,SAAAY,GAAK,OAAIA,EAAMZ,UAAY,oBAAsB,qBAchDgC,EARG,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,IAAIC,EAA4C,EAA5CA,QAAQ/B,EAAoC,EAApCA,aAAa4B,EAAuB,EAAvBA,MACzC,OACI,cAACH,EAAD,CAASzB,aAAcA,EAAcH,UAAWkC,EAASH,MAAOA,EAAhE,SACKE,K,ylBCxBb,IAAME,EAAMzB,IAAO0B,IAAV,KAGK,SAAAxB,GAAK,OAAIA,EAAMI,OAAS,WACpB,SAAAJ,GAAK,OAAIA,EAAMK,SAAS,OAAQ,KA6BnCoB,EAPC,SAAC,GAAoC,IAAnCrB,EAAkC,EAAlCA,MAAMQ,EAA4B,EAA5BA,QAAQP,EAAoB,EAApBA,SAC5B,OACI,cAACkB,EAAD,CAAKnB,MAAOA,EAAOC,SAAUA,EAA7B,SACKO,KC9BN,SAASc,EACZC,EACAC,GAEA,IAAIC,EACJ,OAAO,WAAsB,IAAD,uBAAjBC,EAAiB,yBAAjBA,EAAiB,gBAC1BC,aAAaF,GACbA,EAAQG,YAAW,WACjBL,EAAI,WAAJ,EAAQG,KACPF,I,oMCjBT,IAAMK,EAAiBnC,IAAOoC,EAAV,KAGH,SAAAlC,GAAK,OAAIA,EAAMS,MAAMS,UAcvBiB,EARK,SAAC,GAAqB,IAApBvB,EAAmB,EAAnBA,QAClB,OACI,cAACqB,EAAD,UACKrB,K,kXCRb,IAAMW,EAAMzB,IAAO0B,IAAV,KAGQ,SAAAxB,GAAK,OAAIA,EAAMS,MAAMS,UAIhCkB,EAAWtC,IAAO0B,IAAV,KAiHCa,EAlGF,SAAC,GAAuG,IAQ7GvB,EARQwB,EAAoG,EAApGA,QAASC,EAA2F,EAA3FA,WAAY7D,EAA+E,EAA/EA,KAAe8D,GAAgE,EAAzEC,QAAyE,EAAhED,YAAYlB,EAAoD,EAApDA,QAASoB,EAA2C,EAA3CA,gBAAiBnD,EAA0B,EAA1BA,aAA0B,EAIpFoD,mBAAmB,IAJiE,mBAIzGC,EAJyG,KAIjGC,EAJiG,KAY1GC,EAASC,uBAAY,SAACC,GAAwB,IAAD,EAC/C,UAAAC,SAASC,eAAe,mBAAxB,SAAqCC,aAAa,WAAY,QAC9D,IAAI9B,EAAM4B,SAASC,eAAe,OAClCpC,EAAKsC,aAAY,WAEb,IADK/B,GAAKgC,cAAcvC,GACjBO,GAAK,CACR,IAAIiC,EAASC,KAAKC,MAAuB,GAAhBD,KAAKT,SAAiB,GAC/C,IAAKE,EAAIS,SAASH,GAAS,CACvBjC,EAAIqC,UAAYJ,EAAOK,WACvB,UAGT,MACJ,IAGGC,EAAOlC,EAASqB,uBAAY,SAACzB,EAAyB/B,EAA8BqD,EAAuBlE,EAAuB4D,GAEpI,IAAIjB,EAAMwC,SAASZ,SAASC,eAAe,OAAQQ,WACvC,IAARrC,IACJgC,cAAcvC,GACdpC,EAAKoF,SAAQ,SAAAC,GACLA,EAAEN,SAASpC,KACW,IAAlBuB,EAAOoB,QACP1C,EAAQD,IAAO,EACfmB,EAAW,YAAIlB,MAGf/B,EAAa8B,IAAO,EACpBqB,EAAgB,YAAInD,SAIhCsD,EAAU,GAAD,mBAAKD,GAAL,CAAavB,KAIlBuB,EAAOoB,OAAS,EAChBhC,YAAW,WACPc,EAAO,GAAD,mBAAKF,GAAL,CAAavB,OACpB,MAGH4B,SAASC,eAAe,WAAYC,aAAa,WAAY,QAC7DZ,GAAW,OAKhB,IAAK,KAEF0B,EAAQlB,uBAAY,WACtBM,cAAcvC,GACdmC,SAASC,eAAe,OAAQQ,UAAY,IAC5ClB,EAAW,IACXE,EAAgB,IAChBG,EAAU,IACVb,YAAW,WACPO,GAAW,KACZ,KAEHU,SAASC,eAAe,WAAYgB,gBAAgB,YACpDjB,SAASC,eAAe,YAAagB,gBAAgB,cACtD,IAEH,OACI,eAAC,EAAD,CAAKpD,GAAG,UAAR,UACI,oBAAIA,GAAG,MAAMqD,MAAO,CAAC9D,SAAW,QAAhC,eACA,cAAC,EAAD,CAAQA,SAAS,QAAQS,GAAG,WAAWF,QAAQ,2BAAOC,MAAO,kBAAMiC,EAAO,OAC1E,cAAC,EAAD,CAAQzC,SAAS,QAAQS,GAAG,UAAUD,MAAO,kBAAM+C,EAAKtC,EAAS/B,EAAcqD,EAAQlE,EAAM4D,IAAU1B,QAAQ,iBAC/G,cAAC,EAAD,CAAQP,SAAS,QAAQS,GAAG,WAAWV,MAAM,oBAAoBD,GAAG,qBAAqBU,MAAOoD,EAAOrD,QAAQ,uBAC/G,cAAC,EAAD,CAASP,SAAU,GAAIO,QAAQ,8BAC/B,cAAC,EAAD,CAAaA,QAA2B,IAAlBgC,EAAOoB,OAAe,cAAC5B,EAAD,+HAA8CQ,EAAOwB,KAAI,SAACC,EAAGC,GACrG,OAAY,IAARA,EAEI,uBAAMxD,GAAG,YAAT,gBAAwB,cAAC,EAAD,CAAWvB,aAAcA,EAAa8E,GAAI/C,QAASA,EAAQ+C,GAAIlD,OAAO,EAAME,IAAKgD,OAIzG,cAAC,EAAD,CAAW9E,aAAcA,EAAa8E,GAAI/C,QAASA,EAAQ+C,GAAIhD,IAAKgD,a,uiBCrG5F,IAAMrD,EAAUlB,IAAOC,OAAV,KAcU,SAAAC,GAAK,OAAIA,EAAMuE,SAAW,kBAAoB,aACnD,SAAAvE,GAAK,OAAIA,EAAMuE,SAAW,QAAU,UAGT,SAAnCjE,eAAeC,QAAQ,UAAqB,GAAI,6CAc3CiE,EAPC,SAAC,GAAuC,IAAtC5D,EAAqC,EAArCA,QAAQC,EAA6B,EAA7BA,MAAM0D,EAAuB,EAAvBA,SAASzD,EAAc,EAAdA,GAErC,OACI,cAAC,EAAD,CAASA,GAAIA,EAAIyD,SAAUA,EAAUxD,QAAS,kBAAIF,EAAMD,IAAxD,SAAmEA,K,wNC1B3E,IAAM6D,GAAW3E,IAAOmB,KAAV,KACI,SAAAjB,GAAK,OAAIA,EAAMG,IAAM,UA+GxBuE,GAvGF,SAAC,GAA0G,IAAzGC,EAAwG,EAAxGA,cAAeC,EAAyF,EAAzFA,WAAWtC,EAA8E,EAA9EA,QAAS5D,EAAqE,EAArEA,KAAKmG,EAAgE,EAAhEA,SAASP,EAAuD,EAAvDA,IAAKhD,EAAkD,EAAlDA,QAAS/B,EAAyC,EAAzCA,aAAcuF,EAA2B,EAA3BA,cAA2B,EACjFnC,mBAAmB,CAAC,GAAI,KADyD,mBAC5GoC,EAD4G,KACjGC,EADiG,KAoD7GC,EAAU,uCAAG,WAAOC,EAAqBC,GAA5B,SAAAC,EAAA,sEACTC,IAAMC,KAAK,mDAAmD,CAAEJ,UAAYA,EAAWC,WAAaA,IACzGI,MAAK,SAAAC,GAAG,OAAGC,QAAQC,IAAIF,EAAIG,SAC3BC,OAAM,SAAAC,GAAG,OAAGJ,QAAQC,IAAIG,MAHV,2CAAH,wDA4ChB,OAtCAC,qBAAU,WACN,GAAIxD,GAEA,GADA0C,EAxDO,WACX,IAAIe,EAAkBrH,EAAK0F,KAAI,SAACC,EAAEC,GAAS,GAAGhD,EAAQ+C,GAAI,OAAOC,KAAM0B,QAAO,SAAC3B,GAAD,OAAUA,GAAG,KAC3FoB,QAAQC,IAAIK,GACZ,IAAIE,EAAmB1G,EAAa2G,SAAQ,GACxC/E,EAAiBzC,EAAK+E,SAASwC,GACnC,GAAIF,EAAY/B,OAAS,EAErB,OADAY,EAAWuB,UACJ,CAAC,SAAK,SAEZ,GAA2B,IAAvBJ,EAAY/B,OAEjB,OADAY,EAAWwB,WACJ,CAAC,UAAM,iBAEb,GAA2B,IAAvBL,EAAY/B,OAEjB,OADAY,EAAWyB,YACJ,CAAC,UAAM,iBAEb,GAA2B,IAAvBN,EAAY/B,QAAiB7C,EAUjC,OAA2B,IAAvB4E,EAAY/B,QACbsC,EAAS,YAAO5H,GACpBqH,EAAYjC,SAAQ,SAACC,GACjBuC,EAAMvC,GAAK,CAACuC,EAAMvC,GAAG,MAEzBuC,EAAM5H,EAAKwH,QAAQD,IAAa,CAACK,EAAM5H,EAAKwH,QAAQD,IAAY,GAChErB,EAAW2B,YACX5B,EAAc6B,cAAcF,GACrB,CAAC,UAAM,oBAGVA,EAAS,YAAO5H,GACpBqH,EAAYjC,SAAQ,SAACC,GACjBuC,EAAMvC,GAAK,CAACuC,EAAMvC,GAAG,MAEzBa,EAAW6B,WACX9B,EAAc+B,aAAaJ,GACpB,CAAC,UAAM,UA1Bd,IAAIA,EAAS,YAAO5H,GAOpB,OANAqH,EAAYjC,SAAQ,SAACC,GACjBuC,EAAMvC,GAAK,CAACuC,EAAMvC,GAAG,MAGzBa,EAAW+B,WACXhC,EAAciC,aAAaN,GACpB,CAAC,UAAM,YA+BD1D,IACViC,EAAS,IAAIP,EAAI,CAAC,IAAD,EACZuC,EAAOjC,EAAWkC,SAAS,EAAI,EAAKlC,EAAWmC,UAAU,EAAI,EAAKnC,EAAWoC,SAAS,EAAI,EAAI,EAClG,GAAGH,EAAK,EAAE,CAEN,IAFO,IAAD,EACFI,GAAO,UAAAC,OAAOC,OAAP,yCAAuBN,EAAvB,uVAA4GO,SAAU,eAE1HH,EAAKjD,OAAO,IACfiD,EAAOC,OAAOC,OAAO,gLAA2C,eAGpExC,EAAc0C,cAAcJ,GAEhChC,EAAWL,EAAWD,GACtB,IAAI2C,EAAaC,aAAahH,QAAQ,cACtC,GAAG+G,EAAW,CACV,IAAIE,EAAYC,KAAKC,MAAMJ,GAC3BE,EAAUG,OAAS/C,EAAWkC,SAC9BU,EAAUI,QAAUhD,EAAWmC,UAC/BS,EAAUK,OAASjD,EAAWoC,SAC9BQ,EAAUM,QAAUlD,EAAWmD,UAC/BP,EAAUQ,OAASpD,EAAWqD,SAC9BT,EAAUU,MAAQtD,EAAWuD,QAC7BrD,EAAc0C,GACdD,aAAaa,QAAQ,aAAaX,KAAKY,UAAUb,SAEjDD,aAAaa,QAAQ,aAAaX,KAAKY,UAAUzD,IACjDE,EAAc0C,GAElB,UAAAvE,SAASC,eAAe,oBAAxB,SAAsCrC,cAIzCmE,EAAa,CAAC,GAAI,OAExB,CAAC1C,IAGA,cAACmC,GAAD,CAAUtE,GAAI4E,EAAU,GAAxB,SACKA,EAAU,MCzHRuD,GANG,WACd,OACI,sBAAKC,MAAM,OAAQC,MAAM,6BAA6BC,YAAU,UAAUC,QAAQ,aAAarE,EAAE,MAAMsE,EAAE,MAAzG,UAA+G,sBAAMC,EAAE,sRAAqR,sBAAMA,EAAE,yEAAwE,sBAAMA,EAAE,+EAA8E,sBAAMA,EAAE,mF,wNCDlkB,IAAMC,GAAO/I,IAAOgJ,GAAV,MAmBKC,GANE,SAAC,GAAqB,IAApBnI,EAAmB,EAAnBA,QACf,OACI,cAACiI,GAAD,UAAOjI,K,kBClBFoI,GAAb,WAOI,aAAe,0BALPC,eAKM,OAJNC,gBAIM,OAHNC,eAGM,OAFNC,gBAEM,EACVC,KAAKJ,UAAY,GACjBI,KAAKH,WAAa,GAClBG,KAAKF,UAAY,GAVzB,0DAayBpK,GACjBsK,KAAKJ,UAAUK,KAAKvK,KAd5B,oCAgB0BA,GAClBsK,KAAKH,WAAWI,KAAKvK,KAjB7B,mCAmByBA,GACjBsK,KAAKF,UAAUG,KAAKvK,KApB5B,oCAsB0BA,GAClBsK,KAAKD,WAAarK,IAvB1B,mCA2BQ,OAAOsK,KAAKJ,YA3BpB,oCA8BQ,OAAOI,KAAKH,aA9BpB,mCAiCQ,OAAOG,KAAKF,YAjCpB,oCAoCQ,OAAOE,KAAKD,eApCpB,KCAaG,GAAb,WAQI,WAAYC,GAAmB,0BAPvB7B,WAOsB,OANtBC,YAMsB,OALtBC,WAKsB,OAJtBC,YAIsB,OAHtBE,WAGsB,OAFtBE,UAEsB,EAC1BmB,KAAK1B,OAAW,OAAH6B,QAAG,IAAHA,OAAA,EAAAA,EAAK7B,QAAS,EAC3B0B,KAAKzB,QAAY,OAAH4B,QAAG,IAAHA,OAAA,EAAAA,EAAK5B,SAAU,EAC7ByB,KAAKxB,OAAW,OAAH2B,QAAG,IAAHA,OAAA,EAAAA,EAAK3B,QAAS,EAC3BwB,KAAKvB,QAAY,OAAH0B,QAAG,IAAHA,OAAA,EAAAA,EAAK1B,SAAU,EAC7BuB,KAAKrB,OAAW,OAAHwB,QAAG,IAAHA,OAAA,EAAAA,EAAKxB,QAAS,EAC3BqB,KAAKnB,MAAU,OAAHsB,QAAG,IAAHA,OAAA,EAAAA,EAAKtB,OAAQ,EAdjC,wDAmBQmB,KAAK1B,OAAS,IAnBtB,kCAsBQ0B,KAAKzB,QAAU,IAtBvB,iCAyBQyB,KAAKxB,OAAS,IAzBtB,kCA4BQwB,KAAKvB,QAAU,IA5BvB,iCA+BQuB,KAAKrB,OAAS,IA/BtB,gCAkCQqB,KAAKnB,MAAQ,IAlCrB,+BAsCQ,OAAOmB,KAAK1B,QAtCpB,gCAyCQ,OAAO0B,KAAKzB,SAzCpB,+BA4CQ,OAAOyB,KAAKxB,QA5CpB,gCA+CQ,OAAOwB,KAAKvB,SA/CpB,+BAkDQ,OAAOuB,KAAKrB,QAlDpB,8BAqDQ,OAAOqB,KAAKnB,SArDpB,K,6UC8BA,IAAMuB,GAAU3J,IAAO4J,QAAV,MACP,SAAA1J,GAAK,OAAIA,EAAMS,MAAMkJ,cAGrBvH,GAAWtC,IAAO0B,IAAV,MAORoI,GAAS9J,IAAO0B,IAAV,MAqKGqI,GAnKG,WACd,IAAInL,EAAOoL,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQtL,QACxDuL,EAAOH,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQ7K,aACxDmC,EAAUwI,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQ5K,aAC3DG,EAAeuK,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQzK,gBAChE+C,EAAUwH,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQ1K,iBAEzD4K,EAAWC,cAEXC,EAAU,SAAC1L,GACbwL,EAASzL,EAAeC,KAAKA,KAE3B+D,EAAU,SAAC1D,GACbmL,EAASzL,EAAeU,UAAUJ,KAEhCyD,EAAa,SAACzD,GAChBmL,EAASzL,EAAeW,UAAUL,KAEhC2D,EAAkB,SAAC3D,GACrBmL,EAASzL,EAAec,aAAaR,KAEnCwD,EAAa,SAACxD,GAChBmL,EAASzL,EAAea,cAAcP,KAEpC+F,EAAgB,SAAC/F,GACnBmL,EAASzL,EAAeiB,WAAWX,KAzBnB,EA2Bc4D,mBAAoB,IA3BlC,mBA2Bb0H,EA3Ba,KA2BFC,EA3BE,OA4BI3H,mBAAiB,GA5BrB,mBA4Bb4H,EA5Ba,KA4BPC,EA5BO,KA+BpB1E,qBAAU,WACN,IAAIlD,EAAS2E,aAAahH,QAAQ,cAC/BqC,GAAQkC,EAAc2C,KAAKC,MAAM9E,MACrC,IAEH,IAGM6H,EAAS,SAACpJ,GACZ,IAAGqJ,IACH,GAAIhM,EAAK6L,GAAM9G,SAASpC,GAEpB3C,EAAK6L,GAAMI,OAAOjM,EAAK6L,GAAMrE,QAAQ7E,GAAM,GAC3CgJ,EAAUhJ,EAAM,IAAK,EACrBiJ,EAAa,YAAID,IACjBD,EAAQ,YAAI1L,QAEX,IAA0B,IAAtBA,EAAK6L,GAAMvG,OAAc,OAE9BqG,EAAUhJ,EAAM,IAAK,EACrBiJ,EAAa,YAAID,IACjB3L,EAAK6L,GAAMjB,KAAKjI,GAChB+I,EAAQ,YAAI1L,MAMhB0F,EAvBmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAuB9KA,KAAI,SAACC,EAAGC,GAAJ,OAAY,cAAC,EAAD,CAAS1D,QAASyD,EAAGE,SAAU8F,EAAU/F,GAAMxD,GAAE,aAAQuD,GAAKxD,MAAO4J,OAEhGxG,EAAQ,WACVzB,EAAW,IACXE,EAAgB,IAChBH,GAAW,GACXE,GAAQ,GACR+H,EAAQ,GACRF,EAAa,IACbF,EAAQ,CAAC,MAEb3E,QAAQC,IAAI,OAEZ,IAUMgF,EAAY,WAAO,IAAD,QACpB,MAAuG,UAApG,UAAAzH,SAASC,eAAe,mBAAxB,mBAAqC0H,0BAArC,mBAAyDA,0BAAzD,mBAA6EC,kBAA7E,eAAyFC,aACrF5D,OAAO6D,QAAQ,yMACd9G,KACO,KA0Cb+G,EAAmB,SAAC1G,GACnB5F,EAAKsF,SAASM,EAAI,GAAGgG,EAAa,IAPtB,SAAChG,GAChB5F,EAAKiM,OAAOrG,EAAK,GACjB8F,EAAQ,YAAI1L,IACZ8L,EAAQD,EAAO,GAKfU,CAAW3G,IAKXM,EAAa,IAAI2E,GACjB5E,EAAgB,IAAIqE,GACxB,OACI,eAACS,GAAD,WACI,cAAC,GAAD,CAAU7I,QAAQ,2CAClB,cAACgJ,GAAD,UACKxF,IAEL,cAAC,EAAD,CAAQ/D,SAAU,QAASD,MAAM,oBAAoBD,GAAG,qBAAqBS,QAAQ,kCAASC,MAlDvF,WACX,IAAG6J,IAEH,IADA,IAAI1G,EAAiBtF,EAAK6L,GAAMvG,OACvBD,EAAI,EAAGA,EAAI,EAAIC,EAAQD,IAC5B,OAAa,CACT,IAAI1C,EAAckC,KAAKC,MAAuB,GAAhBD,KAAKT,SAAiB,GACpD,IAAKpE,EAAK6L,GAAM9G,SAASpC,GAAM,CAAC,IAAD,EAC3B,UAAA4B,SAASC,eAAT,aAA8B7B,WAA9B,SAAsCR,QACtC,WA2CR,cAAC,EAAD,CAAQR,SAAU,QAASD,MAAM,oBAAoBD,GAAG,qBAAqBS,QAAQ,6BAASC,MArCtF,WACRnC,EAAK6L,GAAMvG,OAAS,GACrB0G,MACHhM,EAAK4K,KAAK,IACVc,EAAQ,YAAI1L,IACZ8L,EAAQD,EAAO,GACfD,EAAa,QAgCT,cAAC,EAAD,CAAQjK,SAAU,QAASD,MAAM,oBAAoBD,GAAG,qBAAqBS,QAAQ,yCAAWC,MA7BnF,WACjBnC,EAAK6L,GAAQ,GACbD,EAAa,IACbF,EAAQ,YAAI1L,OA2BR,cAAC,EAAD,CAAQ2B,SAAU,QAASD,MAAM,oBAAoBD,GAAG,2BAA2BK,QAAQ,oBAAoBI,QAAQ,iCAAQC,MAAOoD,IACtI,cAAC,EAAD,CAAQ5D,SAAU,QAASD,MAAM,gBAAgBD,GAAG,qBAAqBK,QAAQ,gBAAgBI,QAAQ,2BAAOC,MA3EzG,WACPnC,EAAK6L,GAAMvG,OAAS,EACpBkH,MAAM,gFAGNhE,OAAO6D,QAAP,wGACAtI,GAAQ,MAsEPwH,EAAO,cAAC,EAAD,CAAO1K,aAAcA,EAAcmD,gBAAiBA,EAAiBJ,QAASA,EAASC,WAAYA,EAAY7D,KAAMA,EAAM+D,QAASA,EAASD,WAAYA,EAAYlB,QAASA,IAAmB,GACzM,cAAC,EAAD,CAASjB,SAAU,GAAIO,QAAQ,wDAC/B,8BACKlC,EAAK0F,KAAI,SAACL,EAAGO,GAAJ,OAAY,cAAC,EAAD,CAAa1D,QAA8B,IAArBlC,EAAK4F,GAAKN,OAAgBtF,EAAKsF,OAAS,EAAI,eAAC,GAAD,4EAAsB,cAAC,EAAD,CAAUxD,QAAQ,UAAWL,GAAG,OAAOS,QAAS,cAAC,GAAD,IAAyBC,MAAO,kBAAMmK,EAAiB1G,SAA4B,cAAC,GAAD,6EAE/O,gCAAK,cAAC,GAAD,CAAMQ,cAAeA,EAAeH,cAAeA,EAAgBC,WAAYA,EAAYC,SAAUnG,EAAKsF,OAAQM,IAAKA,EAAM5F,KAAMA,EAAK4F,GAAMhD,QAASA,EAAS/B,aAAcA,EAAc+C,QAASA,IAE3M5D,EAAK4F,GAAK6G,MAAK,SAAC/F,EAAEgG,GAAH,OAAQhG,EAAEgG,KAAGhH,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAW9E,aAAcA,EAAa8E,GAAI/C,QAASA,EAAQ+C,GAAIhD,IAAKgD,OAEzGC,EAAM,EAAI,cAAC,EAAD,CAASrE,MAAM,QAAQO,QAAQ,UAAWL,GAAG,OAAOS,QAAS,cAAC,GAAD,IAAyBC,MAAO,kBAAMmK,EAAiB1G,MAAkB,iB,sMC7LjK,IAAM+G,GAAevL,IAAO0B,IAAV,MACJ,SAAAxB,GAAK,OAAIA,EAAMf,QAEvBqM,GAAYxL,IAAO0B,IAAV,MAyEA+J,GArED,WACV,IAAI7M,EAAOoL,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQnL,kBACxD2M,EAAS1B,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQlL,aAC1DG,EAAO6K,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQpK,aAGtD6L,EAAU,CACZC,OAAQhN,EAAK0F,KAAI,SAAAC,GAAC,gBAAOA,EAAE,GAAT,aAClBsH,SAAU,CACN,CACIhG,KAAMjH,EAAK0F,KAAI,SAAAC,GAAC,OAAIA,EAAE,MACtBuH,YAAa,EACbC,iBAAkB,EAClBC,gBACIpN,EAAK0F,KAAI,SAAAC,GACL,OAAIA,EAAE,GAAK,GAAW,UACbA,EAAE,GAAK,GAAW,UAClBA,EAAE,GAAK,GAAW,UAClBA,EAAE,GAAK,GAAW,OACf,gBAShC,OACI,8BAEI,cAACiH,GAAD,UACI,cAACD,GAAD,CAAcpM,KAAMA,EAApB,SACI,cAAC,OAAD,CACI8M,QACI,CACIC,QAAU,CACNN,OAAQ,CACJ,CACAO,OAAQ,QACRC,UAAY,UAIpBC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAc/N,EAAKsF,OAAQ,EAAItF,EAAK,GAAG,GAAgB,GAAXA,EAAK,GAAG,GAAS,EAC7DgO,aAAa,OAMjCC,OAAQnB,EACR7F,KAAM8F,EACNmB,OAAQ,IACRrE,MAAO,a,4sBC1D/B,IAAMsE,GAAQ/M,IAAO0B,IAAV,MAGLsL,GAASC,YAAH,MACN,SAAA/M,GAAK,OAAIA,EAAMS,MAAMC,eAER,SAAAV,GAAK,OAAIA,EAAMuE,SAAYvE,EAAMgN,UAAY,qBAAyBhN,EAAMG,IAAM,WACvF,SAAAH,GAAK,OAAIA,EAAMuE,SAAYvE,EAAMiN,aAAe,oBAAwBjN,EAAMI,OAAS,UAC/F,SAAAJ,GAAK,MAAyC,SAArCM,eAAeC,QAAQ,UAAvB,0CAEQP,EAAMgN,UAAY,qBAF1B,+BAGIhN,EAAMiN,aAAe,qBAHzB,4DAOYjN,EAAMgN,UAAY,qBAP9B,kCAQOhN,EAAMiN,aAAe,qBAR5B,kBAYTC,GAAWpN,IAAOC,OAAV,KACR+M,IAIAK,GAAUrN,IAAOC,OAAV,KACX+M,IAKIjN,GAAMC,IAAOC,OAAV,KACH+M,IA0BSM,GArBK,SAAC,GAAkF,IAAhFvM,EAA+E,EAA/EA,MAAOT,EAAwE,EAAxEA,MAAOD,EAAiE,EAAjEA,GAAIkN,EAA6D,EAA7DA,MAAOzM,EAAsD,EAAtDA,QAAS2D,EAA6C,EAA7CA,SAAU0I,EAAmC,EAAnCA,YAAaD,EAAsB,EAAtBA,SAExE5I,EAAMxD,EAAQwD,KAAI,SAACC,EAAGC,GACtB,OAAQA,GACJ,KAAK,EACD,OAAO,cAAC4I,GAAD,CAAU3I,SAAUA,EAASD,GAAMlE,MAAOA,EAAOD,GAAIA,EAAIkN,MAAOA,EAAOL,SAAUA,EAAUC,YAAaA,EAAalM,QAAS,kBAAMF,EAAMyD,GAAKA,IAA/I,SAAsJD,IACjK,KAAKzD,EAAQoD,OAAS,EAClB,OAAO,cAACmJ,GAAD,CAAS5I,SAAUA,EAASD,GAAMlE,MAAOA,EAAOD,GAAIA,EAAIkN,MAAOA,EAAOL,SAAUA,EAAUC,YAAaA,EAAalM,QAAS,kBAAMF,EAAMyD,GAAKA,IAA9I,SAAqJD,IAEhK,QACI,OAAO,cAAC,GAAD,CAAKE,SAAUA,EAASD,GAAMlE,MAAOA,EAAOD,GAAIA,EAAIkN,MAAOA,EAAOL,SAAUA,EAAUC,YAAaA,EAAalM,QAAS,kBAAMF,EAAMyD,GAAKA,IAA1I,SAAiJD,QAIpK,OACI,cAACwI,GAAD,UACKzI,KC7DEkJ,GAND,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,OAAOC,EAAgB,EAAhBA,KACnB,OACI,qBAAKjF,MAAM,QAAQpE,MAAO,CAACsJ,UAAS,iBAAaF,EAAS,IAAM,GAA5B,QAAsCC,KAAOA,GAAOhF,MAAM,6BAA6BC,YAAU,UAAUC,QAAQ,YAAYrE,EAAE,MAAMsE,EAAE,MAA7K,SAAmL,sBAAMC,EAAE,uO,iVCUnM,IAAM8E,GAAU5N,IAAO0B,IAAV,MAMPmM,GAAO7N,IAAOmB,KAAV,MA8HK2M,GAvHS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAGjBC,EAAYhE,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQ3K,eAC7D0O,EAAUjE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAQxK,gBAC1DwO,EAAUlE,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAQvK,gBAE1DyK,EAAWC,cASX8D,EAAW,SAACC,EAAcC,EAAehN,EAAgBgK,GACzC,IAAd2C,GACJzI,IAAMC,KAAK,oDAAqD,CAAE4I,KAAMA,EAAMC,MAAiB,IAAVA,EAAcA,EAAQ,EAAGhN,MAAOA,EAAOgK,KAAMA,IAC7H5F,MAAK,SAAAC,GACFqI,EAASrI,EAAIG,UAKzBG,qBAAU,WAAM,MAEOsI,EAASL,EAASC,GAFzB,mBAEPK,EAFO,KAEFC,EAFE,KAGZL,EAASK,EAAQ,EAAGD,EAAMC,EAAQ,GAAG,GAAO,KAC7C,CAACR,IA7ByC,MAgCXnL,mBAAoB,EAAC,GAAM,IAhChB,mBAgCtC4L,EAhCsC,KAgC3BC,EAhC2B,OAkCf7L,oBAAkB,GAlCH,mBAkCtC8L,EAlCsC,KAkC7BC,EAlC6B,KAqCvCnK,EAAW,SAACD,GACdkK,EAAaD,EAAUnK,KAAI,SAACL,EAAG4K,GAC3B,OAAIA,IAASrK,OAOjBF,EADM,IAAIwK,MAAMd,GAAWN,KAAK,GACtBpJ,KAAI,SAACC,EAAGC,GAAJ,OAAoB,wBAAkBvF,MAAOuF,EAAM,EAA/B,SAAmCA,EAAM,GAA5BA,MAI7C8J,EAAW,SAACS,EAAcC,GAC5B,OAAOD,EAAOC,EAAO,CAACD,EAAMC,GAAQ,CAACA,EAAMD,IAqBzCE,EAAUrN,GAAS,SAAC4C,GACtB,IAAIiK,EAAUjK,GAAd,CACAC,EAASD,GAF6B,MAGnB8J,EAASJ,EAASD,GAHC,mBAGjCM,EAHiC,KAG5BC,EAH4B,KAItCL,EAASK,EAAQ,EAAGD,EAAMC,EAAQ,GAAG,EAAOG,MAC7C,KAGGtN,EAAQO,GAAS,SAAC4C,GACpB,IAAIiK,EAAUjK,GAAd,CACAC,EAASD,GAF2B,MAGjB8J,EAASJ,EAASD,GAHD,mBAG/BM,EAH+B,KAG1BC,EAH0B,KAIpCL,EAASK,EAAQ,EAAGD,EAAMC,EAAQ,GAAG,EAAMG,MAC5C,KAIGtD,EAAOzJ,GAAS,WAAO,IAAD,EACL0M,EAASJ,EAASD,GADb,mBACnBM,EADmB,KACdC,EADc,KAEpBG,GACAR,EAASK,EAAQ,EAAGD,EAAMC,EAAQ,EAAGC,EAAU,IAAI,GACnDG,GAAW,KAEXT,EAASK,EAAQ,EAAGD,EAAMC,EAAQ,EAAGC,EAAU,IAAI,GACnDG,GAAW,MAEhB,KAGH,OACI,gCACI,cAAC,EAAD,CAAS9N,QAAS,gCACd,wBAAQ7B,MAAOgP,EAASiB,SAjDf,SAACC,GAClB,IA/CgBlQ,EA+CZmQ,EAAcrL,SAASoL,EAAEE,OAAOpQ,OADP,EAGVqP,EAASc,EAAKlB,GAHJ,mBAGxBK,EAHwB,KAGnBC,EAHmB,KA9CbvP,EAkDLmQ,EAjDXhF,EAASzL,EAAee,aAAaT,IAkDrCkP,EAASK,EAAQ,EAAGD,EAAMC,EAAQ,EAAGC,EAAU,GAAIE,IA4C3C,SACKrK,IAFS,qCAIlB,wBAAQrF,MAAOiP,EAASgB,SA3CV,SAACC,GACnB,IArDgBlQ,EAqDZmQ,EAAcrL,SAASoL,EAAEE,OAAOpQ,OADN,EAEXqP,EAASc,EAAKnB,GAFH,mBAEzBM,EAFyB,KAEpBC,EAFoB,KApDdvP,EAuDLmQ,EAtDXhF,EAASzL,EAAegB,aAAaV,IAuDrCkP,EAASK,EAAQ,EAAGD,EAAMC,EAAQ,EAAGC,EAAU,GAAIE,IAuC/C,SACSrK,IALS,kCASlB,eAACsJ,GAAD,WAAS,cAACC,GAAD,qDAAqB,cAAC,GAAD,CAAapJ,SAAUgK,EAAW3N,QAAS,CAAC,oCAAY,kCAAUC,MAAO,CAACkO,EAAS5N,KAAsB,cAAC,EAAD,CAAQjB,QAAQ,EAAMW,MAAOsK,EAAM3K,QAAQ,mBAAmBL,GAAG,QAAQS,QAAS,cAAC,GAAD,CAAO4M,KAAK,kBAAkBD,OAAQkB,SAE/P,cAAC,GAAD,Q,oMCnIZ,IAAMnD,GAAYxL,IAAO0B,IAAV,MAGT6J,GAAevL,IAAO0B,IAAV,MACJ,SAAAxB,GAAK,OAAIA,EAAMf,QAyEdmQ,GArEE,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAEX7D,EAAS1B,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQlL,aAC1DG,EAAO6K,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQpK,aAEtD6L,EAAU,CACZC,OAAQ,CAAC,UAAM,UAAK,UAAK,UAAK,UAAK,UACnCC,SAAU,CACN,CACIhG,KAAM,QAAC0J,QAAD,IAACA,OAAD,EAACA,EAAUvI,SAAX,OAAqBuI,QAArB,IAAqBA,OAArB,EAAqBA,EAAUvI,SAA/B,OAAwCuI,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAUrI,SAAlD,OAA2DqI,QAA3D,IAA2DA,OAA3D,EAA2DA,EAAUtH,UAArE,OAA+EsH,QAA/E,IAA+EA,OAA/E,EAA+EA,EAAUpH,SAAzF,OAAkGoH,QAAlG,IAAkGA,OAAlG,EAAkGA,EAAUlH,SAClHyD,YAAa,EACbC,iBAAkB,EAClBC,gBACI,CAAC,UAAW,UAAW,UAAW,UAAW,WAQ7D,OACI,8BAEI,cAAC,GAAD,UACI,cAAC,GAAD,CAAc7M,KAAMA,EAAK,KAAzB,SACA,cAAC,YAAD,CACI8M,QAAS,CACLuD,YAAY,EACZlD,OAAQ,CACJC,SAAS,EACTkD,SAAU,SACV7D,OAAS,CACL8D,QAAU,GACVC,SAAW,GACXvD,UAAY,OACZ7L,SAAW,KAKnB2L,QAAS,CACLN,OAAQ,CACJ,CACIO,OAAQ,QACRyD,KAAK,EACLH,SAAU,UACVlP,SAAW,GACX6L,UAAW,QAEf,CACID,OAAQ,aACR5L,SAAW,GACX6L,UAAW,WAK3BS,OAAQnB,EACR7F,KAAM8F,EACNmB,OAAQ,GACRrE,MAAO,a,yTCtE3B,IAAMmF,GAAU5N,IAAO0B,IAAV,MAMPmM,GAAO7N,IAAOmB,KAAV,MAgFK0O,GAzEG,SAAC,GAAsB,IAArB9B,EAAoB,EAApBA,SAGV+B,EAAW,uCAAG,sBAAAxK,EAAA,sDAChBC,IAAMC,KAAK,4CAA6C,CAACuK,MAAK,iJAM1DtK,MAAK,SAAAC,GACLsK,EAAY,IAAIvG,GAAW/D,EAAIG,KAAKA,KAAKoK,eAR7B,2CAAH,qDAYXC,EAAU,uCAAG,sBAAA5K,EAAA,sDACfC,IAAM4K,IAAI,uDAAuD1K,MAAK,SAAAC,GAClEC,QAAQC,IAAIF,EAAIG,MAChBkI,EAASrI,EAAIG,SAHF,2CAAH,qDAQhBG,qBAAU,WACN8J,MACD,IAzBiC,MA4BFjN,mBAAoB,EAAC,GAAM,IA5BzB,mBA4B7B4L,EA5B6B,KA4BlBC,EA5BkB,OA6BL7L,qBA7BK,mBA6B7B0M,EA7B6B,KA6BpBS,EA7BoB,KAgC9BvL,EAAW,SAACD,GACdiK,EAAUjK,IAAO,EACjBkK,EAAaD,EAAUnK,KAAI,SAACL,EAAG4K,GAC3B,OAAIA,IAASrK,OAWf4L,EAAYxO,GAAS,SAAC4C,GACpBiK,EAAUjK,KACdsL,IACArL,EAASD,MACV,KAEG6L,EAAczO,GAAS,SAAC4C,GACtBiK,EAAUjK,KACd0L,IACAzL,EAASD,MACV,KAMH,OACI,gCAGI,cAAC,EAAD,CAAS1D,QAAS,eAAC,GAAD,WAAS,cAAC,GAAD,iEAAuB,cAAC,GAAD,CAAaA,QAAS,CAAC,4BAAS,6BAAU2D,SAAUgK,EAAW1N,MAAO,CAACqP,EAAUC,UAElI5B,EAAU,GAAK,cAAC,GAAD,CAAUc,SAAUA,IAAwB,cAAC,GAAD,Q,uOCnFxE,IAAM3B,GAAU5N,IAAO0B,IAAV,MAKPiI,GAAU3J,IAAO4J,QAAV,MACP,SAAA1J,GAAK,OAAIA,EAAMS,MAAMkJ,cAyEZyG,GAvEK,WAEhB,IAAMlG,EAAWC,cAEX0D,EAAW,SAAClP,GACduL,EAASzL,EAAeI,eAAeF,KAErCG,EAAY,SAACC,GACfmL,EAASzL,EAAeK,UAAUC,KASlCE,EAAO6K,aAAY,SAACC,GAAD,OAAuBA,EAAMC,QAAQpK,aAjBtC,EAwCY+C,mBAAgB,IAxC5B,mBAwCf4L,EAxCe,KAwCJC,EAxCI,OAyCgB7L,mBAAgB,EAAC,GAAM,IAzCvC,mBAyCf0N,EAzCe,KAyCFC,EAzCE,KA2ChB/L,EAAW7C,GAAS,SAAC4C,GACvBiK,EAAUjK,IAAO,EACjBkK,EAAaD,EAAUnK,KAAI,SAACL,EAAG4K,GAC3B,OAAIA,IAASrK,QAGlB,KACGiM,EAAY7O,GAAS,SAAC4C,GACxB+L,EAAY/L,IAAO,EACnBgM,EAAeD,EAAYjM,KAAI,SAACL,EAAG4K,GAC/B,OAAIA,IAASrK,QAGlB,KACH,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAU1D,QAAQ,iDAClB,eAAC,GAAD,WACI,cAAC,GAAD,CAAaoM,SAAS,yBAAyBC,YAAY,oBAAoB1I,SAAU8L,EAAazP,QAAS,CAAC,yCAAY,0CAAaC,MAAO,CAAC0P,EAAWA,KAC5J,cAAC,GAAD,CAAahM,SAAUgK,EAAW3N,QAAS,CAAC,eAAM,gBAAOC,MAAO,CA3C7D,SAACyD,GACZC,EAASD,GACTxF,GAAU,GAXM,SAACG,GACjBiL,EAASzL,EAAeO,YAAYC,IAWpCD,CAAYC,EAAO,KACnBgE,SAASuN,KAAKC,qBAAqB,UAAU,GAAGtM,MAAMoE,MAAtD,UAAiEtJ,EAAO,IAAxE,MACA+C,YAAW,WACPlD,GAAU,KACX,MAGU,SAACwF,GACVrF,EAAO,MACXsF,EAASD,GACTxF,GAAU,GAnBQ,SAACG,GACnBiL,EAASzL,EAAeS,cAAcD,IAmBtCC,CAAcD,EAAO,KACrBgE,SAASuN,KAAKC,qBAAqB,UAAU,GAAGtM,MAAMoE,MAAtD,UAAiEtJ,EAAO,IAAxE,MACA+C,YAAW,WACPlD,GAAU,KACX,aA4BEuR,EAAY,GAAK,cAAC,GAAD,CAAiBxC,SAAUA,IAA+B,cAAC,GAAD,CAAWA,SAAUA,Q,oGC3E7G,IAAMtM,GAAMzB,IAAO0B,IAAV,MAoFMkP,GAhFK,WAAO,IAAD,EACK/N,mBAAiB,GADtB,mBACf8H,EADe,KACRkG,EADQ,OAEOhO,mBAAmB,IAF1B,mBAEfiO,EAFe,KAEPC,EAFO,KAIhB3G,EAAWC,cAEX2G,EAAe,SAAC/R,GAClBmL,EAASzL,EAAeY,YAAYN,KAMpC+O,EAAYhE,aAAY,SAACC,GAAD,OAAqBA,EAAMC,QAAQ3K,eAEzD0R,EAAO,uCAAG,sBAAA3L,EAAA,sEACNC,IAAMC,KAAK,4CAA6C,CAACuK,MAAK,iEAIhEtK,MAAK,SAAAC,GACL,IAZiBzG,EAYb4G,EAAOH,EAAIG,KAAKA,KAAKmI,UACzB6C,EAAUhL,GAbO5G,EAcD4G,EAbpBuE,EAASzL,EAAegB,aAAaV,IAcjC+R,EAAanL,GACb1C,SAASC,eAAe,QAASiB,MAAMkI,QAAU,QACjD2E,EAAOrL,MAXC,2CAAH,qDAiBPqL,EAAM,uCAAG,WAAO3P,GAAP,SAAA+D,EAAA,sEACLC,IAAMC,KAAK,4CAA6C,CAACuK,MAAK,gEAE1CxO,EAF0C,6GAMhEkE,MAAK,SAAAC,GACL,IAAIgE,EAAMhE,EAAIG,KAAKA,KAAKsL,WACpBvS,EAAO,GACX,IAAI,IAAIiH,KAAQ6D,EACZ9K,EAAK4K,KAAKE,EAAI7D,IAElBkL,EAAW,GAAD,OAAKnS,OAbR,2CAAH,sDAkBZoH,qBAAU,WACNiL,MACD,IAEH,IACI3M,EADM,IAAIwK,MAAMd,GAAWN,KAAK,GACtBpJ,KAAI,SAACC,EAAGC,GAAJ,OAAoB,wBAAkBvF,MAAOuF,EAAM,EAA/B,SAAmCA,EAAM,GAA5BA,MAQnD,OACI,eAAC,GAAD,WACI,cAAC,EAAD,CAASjE,SAAU,GAAIO,QAAS,2EAAe,wBAAQ7B,MAAO0L,EAAQuE,SAPzD,SAACC,GAClB0B,EAAU1B,EAAEE,OAAOpQ,OACnBiS,EAAO/B,EAAEE,OAAOpQ,QAKmC,SAAgDqF,IAA/D,oBAChC,4BAAIwM,EAAQxM,KAAI,SAACC,EAAGC,GAChB,OAAY,IAARA,EAEI,uCAAmB,cAAC,EAAD,CAAqBnD,OAAO,EAAME,IAAKgD,GAAvBC,KAAxBA,GAIX,cAAC,EAAD,CAAqBjD,IAAKgD,GAAVC,Y,sOClFxC,IAAM4M,GAAUpR,IAAOmB,KAAV,MAqBEkQ,GATG,SAAC,GAAqB,IAApBvQ,EAAmB,EAAnBA,QAChB,OACI,gCACI,6BAAKA,IACL,cAACsQ,GAAD,CAASnQ,QAAS,kBAAKmG,OAAOkK,SAAS,EAAE,IAAzC,sD,sLCVZ,IAAMC,GAAevR,IAAO0B,IAAV,MAGZiI,GAAU3J,IAAO0B,IAAV,MACP,SAAAxB,GAAK,OAAGA,EAAMS,MAAMkJ,cAsEX2H,GAnEI,WAEf,IAAMtB,EAAa,SAACnJ,GAChBxB,IAAMC,KAAK,4CAA6C,CACpDuK,MAAM,yDAAD,OAEiBhJ,EAFjB,iGAMLtB,MAAK,SAAAC,GACDqL,EAAWrL,EAAIG,KAAKA,KAAK4L,mBAXhB,EAca5O,mBAAoB,EAAC,GAAM,GAAO,IAd/C,mBAcd0H,EAdc,KAcHC,EAdG,OAeS3H,mBAAgB,IAfzB,mBAediO,EAfc,KAeLC,EAfK,KAiBrB/K,qBAAU,WACNkK,EAAW,WACZ,IAEH,IAAMzL,EAAW7C,GAAS,SAAC4C,GACvB,IAAG+F,EAAU/F,GAKb,OAJAgG,EAAaD,EAAUjG,KAAI,SAACL,EAAG4K,GAC3B,OAAIrK,IAAQqK,MAGRrK,GACJ,KAAK,EACD0L,EAAW,SACX,MACJ,KAAK,EACDA,EAAW,UACX,MACJ,KAAK,EACDA,EAAW,YAMrB,KAIF,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAUpP,QAAS,oCACnB,cAACyQ,GAAD,UACA,cAAC,EAAD,CAASzQ,QAAS,cAAC,GAAD,CAAaA,QAAS,CAAC,UAAM,UAAM,WAAO2D,SAAU8F,EAAWxJ,MAAO,CAAC0D,EAAUA,EAAUA,SAE3F,IAAjBqM,EAAQ5M,OAAa,cAAC,GAAD,CAAWpD,QAAQ,6HAA0C,GAClFgQ,EAAQxM,KAAI,SAAAoF,GACT,OACI,sBAAKrF,MAAO,CAACqN,aAAe,QAA5B,UACA,cAAC,EAAD,CAAS5Q,QAAS4I,EAAIvC,KAAK,WAC1BwK,OAAOC,KAAKlI,GAAKpF,KAAI,SAAAC,GAClB,GAAU,SAANA,EACA,OAAO,cAAC,EAAD,CAAWhD,IAAKmI,EAAInF,GAAG,GAAI9E,aAA4B,IAAdiK,EAAInF,GAAG,GAAyB/C,QAAuB,IAAdkI,EAAInF,GAAG,kBC/D7GsN,I,OANK,SAAC,GAAyB,IAAxBpE,EAAuB,EAAvBA,OAAOC,EAAgB,EAAhBA,KACzB,OACI,qBAAKjF,MAAM,OAAOpE,MAAO,CAACsJ,UAAS,iBAAaF,EAAS,IAAM,EAA5B,QAAqCC,KAAOA,GAAO9E,QAAQ,qCAAqCkJ,QAAQ,MAAMvN,EAAE,MAAMsE,EAAE,MAA3J,SAAiK,mBAAG8E,UAAU,iCAAb,SAA8C,sBAAM7E,EAAE,qzBAAqzBiJ,eAAa,qB,yYCLjiC,IAAMC,GAAShS,IAAO0B,IAAV,MA+BGuQ,GAbQ,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,UAAUC,EAAwB,EAAxBA,aAM/B,OACI,cAACH,GAAD,CAAQhR,GAAG,YAAYC,QANV,WACCkR,GAAXD,IAKH,SACI,cAAC,GAAD,CAAaxE,KAAK,QAAQD,OAAQyE,OC5BnC,SAASE,GAAcC,EAAcC,EAAeC,GACvDhJ,KAAKiJ,MAAQ,EAAGjJ,KAAKkJ,KAAO,EAC5BlJ,KAAKmJ,aAAe3O,SAASuO,GAC7B/I,KAAK8I,aAAelP,SAASC,eAAeiP,GAC5C9I,KAAKxH,MAAQ,KACbwH,KAAKgJ,UAAYA,EACjBhJ,KAAKoJ,U,wzDAETP,GAAcQ,UAAUD,QAAU,WAC9B,IAAIE,EAAOtJ,KACXA,KAAKkJ,KAAOlJ,KAAKmJ,aAAenJ,KAAKiJ,MAElCjJ,KAAKkJ,KAAO,IACXI,EAAKL,OAAS/O,KAAKqP,KAAKvJ,KAAKkJ,KAAO,IAGxClJ,KAAK8I,aAAaU,UAAYxJ,KAAKiJ,MAAM3O,WAAWmP,QAAQ,wBAAyB,KAAOzJ,KAAKgJ,UAE9FhJ,KAAKiJ,MAAQjJ,KAAKmJ,aACjBnJ,KAAKxH,MAAQG,YAAW,WAAa2Q,EAAKF,YAAc,IAExD1Q,aAAasH,KAAKxH,QCV9B,IAAMkR,GAAWjT,IAAO0B,IAAV,MAEA,SAAAxB,GAAK,OAAIA,EAAMgS,UAAY,GAAK,KAEjC9K,OAAO8L,WAAa,IAAM,QAAU,OAW3CC,GAAQnT,IAAOoC,EAAV,KACOgF,OAAOgM,YAAc,IAAM,QAAU,SAKjDC,GAAUrT,IAAO0B,IAAV,MAOP4R,GAAWtT,IAAO0B,IAAV,MAOR6R,GAAcvT,IAAO0B,IAAV,MAMX8R,GAAYxT,IAAOmB,KAAV,KAEGiG,OAAOgM,YAAc,IAAM,QAAU,QAEjDK,GAAUxG,YAAH,MAKPyG,GAAW1T,IAAOmB,KAAV,KAGIiG,OAAOgM,YAAc,IAAM,OAAS,QAChDK,IAGAE,GAAY3T,IAAOmB,KAAV,KAGGiG,OAAOgM,YAAc,IAAM,OAAS,QAChDK,IAEAG,GAAgB5T,IAAOmB,KAAV,KACDiG,OAAOgM,YAAc,IAAM,OAAS,QACnC,SAAAlT,GAAK,OAAIA,EAAMG,MACpB,SAAAH,GAAK,OAAIA,EAAMI,QAEvBmT,IA8CSI,GA1CI,WAAO,IAAD,EAEahR,oBAAkB,GAF/B,mBAEdqP,EAFc,KAEHC,EAFG,KAIf0B,EAAa7J,aAAY,SAACC,GAAD,OAAqBA,EAAMC,QAAQtK,cAUlE,OARAoG,qBAAU,WACN,GAAGkM,EAAU,CACT,IAAI4B,EAAM/P,SAAS8P,EAAWhM,OAAS9D,SAAS8P,EAAW/L,QAAU/D,SAAS8P,EAAW9L,OAAShE,SAAS8P,EAAW7L,QAAUjE,SAAS8P,EAAW3L,OAASnE,SAAS8P,EAAWzL,MACjL,IAAIgK,GAAc,QAAa,IAAJ0B,EAAU,UACrC,IAAI1B,GAAc,QAAS0B,EAAK,aAErC,CAAC5B,EAAU2B,IAGV,eAACZ,GAAD,CAAUf,UAAWA,EAArB,UACI,cAAC,GAAD,CAAgBA,UAAWA,EAAWC,aAAcA,IACpD,8BACI,cAACgB,GAAD,iDAEJ,eAACI,GAAD,WACI,eAACF,GAAD,WACI,cAACG,GAAD,wCACA,8BAAK,cAACE,GAAD,CAAU1S,GAAG,eAEtB,eAACsS,GAAD,WACI,cAACE,GAAD,kCACA,8BAAK,cAACG,GAAD,CAAW3S,GAAG,kBAGvB,sBAAKqD,MAAO,CAAC0P,UAAW,cAAxB,UACA,eAACH,GAAD,CAAevT,GAAG,qBAAqBC,MAAM,gBAA7C,qBAAiEuT,EAAWhM,OAAS,EAArF,YACA,eAAC+L,GAAD,CAAevT,GAAG,wBAAwBC,MAAM,kBAAhD,qBAAsEuT,EAAW/L,QAAU,EAA3F,YACA,eAAC8L,GAAD,CAAevT,GAAG,mBAAmBC,MAAM,kBAA3C,qBAAiEuT,EAAW9L,OAAS,EAArF,YACA,eAAC6L,GAAD,sBAAmBC,EAAW7L,QAAU,EAAxC,YACA,eAAC4L,GAAD,sBAAmBC,EAAW3L,OAAS,EAAvC,YACA,eAAC0L,GAAD,qBAAkBC,EAAWzL,MAAQ,EAArC,mB,8FC9Gd4L,eAGF,IAAMC,GAAWjU,IAAOkU,GAAV,MAMVC,GAAiB/M,OAAOgN,UAAUC,UAAUjO,QAAQ,WAAa,EAAI,OAAS,QAClF5F,eAAe8H,QAAQ,SAAS6L,IAkBjBG,OAhBf,WAGE,OACM,sBAAKC,UAAU,MAAf,UACE,cAACN,GAAD,8DACA,cAAC,GAAD,IACA,cAAC,GAAD,IAEA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCpBKO,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjP,MAAK,YAAkD,IAA/CkP,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCFCO,gBAA4B,CACvC9K,Q9BwMG,WAGG,IAFRD,EAEO,uDAFCpK,EACRoV,EACO,uCACP,OAAQA,EAAOnW,MACb,KAAKf,EACH,OAAO,2BACFkM,GADL,IAEErL,KAAMqW,EAAOpW,UAEjB,KAAKb,EACH,OAAO,2BACFiM,GADL,IAEElL,eAAgBkW,EAAOpW,UAE3B,KAAKZ,EACH,OAAO,2BACFgM,GADL,IAEEjL,UAAWiW,EAAOhW,QAEtB,KAAKf,EACH,OAAO,2BACF+L,GADL,IAEEnK,UAAWmV,EAAO9V,OAEtB,KAAKhB,EACH,OAAO,2BACF8L,GADL,IAEE5K,UAAW4V,EAAOhW,QAEtB,KAAKb,EACH,OAAO,2BACF6L,GADL,IAEE3K,UAAW2V,EAAOhW,QAEtB,KAAKZ,EACH,OAAO,2BACF4L,GADL,IAEExK,aAAcwV,EAAOhW,QAEzB,KAAKX,EACH,OAAO,2BACF2L,GADL,IAEE1K,YAAa0V,EAAOhW,QAExB,KAAKV,EACH,OAAO,2BACF0L,GADL,IAEEzK,cAAeyV,EAAOhW,QAE1B,KAAKT,EACH,OAAO,2BACFyL,GADL,IAEEvK,aAAcuV,EAAOhW,QAEzB,KAAKR,EACH,OAAO,2BACFwL,GADL,IAEEtK,aAAcsV,EAAOhW,QAEvB,KAAKP,EACL,OAAO,2BACFuL,GADL,IAEErK,WAAYqV,EAAOhW,QAEvB,QACE,OAAOgL,M,0rB+BhRb,IA6BetJ,GA7BD,CACZS,OAAQ8T,YAAF,MAWNC,QAASlI,YAAF,MAIPrM,YAAaqM,YAAF,MAOXpD,WAAYoD,YAAF,MAEK,SAAA/M,GAAK,OAAIA,EAAMS,MAAMS,W,orBC1BtC,IAoCegU,GApCKC,YAAH,MCiBXC,GAAmBlO,OAAOmO,sCAAwCC,KAClEC,GAAQC,aAAYC,GAAYL,MAEtCM,IAASzJ,OACP,cAAC,IAAD,CAAUsJ,MAAOA,GAAjB,SACE,eAAC,IAAD,CAAe9U,MAAOA,GAAtB,UACA,cAAC,GAAD,IACA,cAAC,GAAD,SAGFwC,SAASC,eAAe,SAO1BoR,M","file":"static/js/main.9ba43af1.chunk.js","sourcesContent":["// types\r\n\r\nimport { RankResult } from \"../models/RankResult\";\r\n\r\n//interface를 통해 타입을 정해준다.\r\nexport interface State {\r\n  list: number[][];\r\n  accumulateList: number[][];\r\n  resizeOpt: boolean;\r\n  graphSize: number;\r\n  drawCheck: boolean;\r\n  corrected: boolean[];\r\n  bonusCorrect: boolean[];\r\n  recentRound: number;\r\n  resultTrigger: boolean;\r\n  roundSelect1: number\r\n  roundSelect2: number\r\n  userResult: any\r\n}\r\n\r\n//액션 타입\r\nexport const LIST = \"LIST\";\r\nexport const ALIST = \"ALIST\";\r\nexport const RESIZE = \"RESIZE\";\r\nexport const GRAPHSIZE = \"GRAPHSIZE\";\r\nexport const DRAWCHECK = \"DRAWCHECK\";\r\nexport const CORRECTED = \"CORRECTED\";\r\nexport const BONUSCORRECT = \"BONUSCORRECT\";\r\nexport const RECENTROUND = \"RECENTROUND\";\r\nexport const TRIGGER = \"TRIGGER\";\r\nexport const ROUNDSELECT1 = \"ROUNDSELECT1\"\r\nexport const ROUNDSELECT2 = \"ROUNDSELECT2\"\r\nexport const USERRESULT = \"USERRESULT\"\r\n\r\n\r\n//액션 인터페이스 , 함수의 인자를 여기서 설정한다.\r\ninterface ListAction {\r\n  newList: number[][];\r\n  type: typeof LIST;\r\n}\r\n\r\ninterface AccumulateListAction {\r\n  newList: number[][];\r\n  type: typeof ALIST;\r\n}\r\n\r\ninterface ResizeOpt {\r\n  value: boolean;\r\n  type: typeof RESIZE;\r\n}\r\ninterface GraphSize {\r\n  size: number;\r\n  type: typeof GRAPHSIZE;\r\n}\r\ninterface DrawCheck {\r\n  value: boolean;\r\n  type: typeof DRAWCHECK;\r\n}\r\ninterface Corrected {\r\n  value: boolean[];\r\n  type: typeof CORRECTED;\r\n}\r\ninterface bonusCorrect {\r\n  value: boolean[];\r\n  type: typeof BONUSCORRECT;\r\n}\r\ninterface RecentRound {\r\n  value: number;\r\n  type: typeof RECENTROUND;\r\n}\r\n\r\ninterface ResultTrigger {\r\n  value: boolean;\r\n  type: typeof TRIGGER;\r\n}\r\ninterface RoundSelect1 {\r\n  value: number;\r\n  type: typeof ROUNDSELECT1;\r\n}\r\ninterface RoundSelect2 {\r\n  value: number;\r\n  type: typeof ROUNDSELECT2;\r\n}\r\ninterface UserResult {\r\n  value: any;\r\n  type: typeof USERRESULT;\r\n}\r\n\r\ntype ActionTypes = ListAction |\r\n  AccumulateListAction |\r\n  ResizeOpt | GraphSize |\r\n  DrawCheck | Corrected |\r\n  RecentRound |\r\n  ResultTrigger |\r\n  bonusCorrect |\r\n  RoundSelect1 |\r\n  RoundSelect2 | \r\n  UserResult\r\n// interface ActionTypes {\r\n//   actionTypes : ListAction | List2Action\r\n// }\r\n// | ChangeInputAction;\r\n\r\n// actions\r\n\r\n\r\n//액션 인터페이스 설정한 내용을 토대로 함수 작성.\r\nfunction list(newList: number[][]) {\r\n  return {\r\n    type: LIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction accumulateList(newList: number[]) {\r\n  return {\r\n    type: ALIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction resizeOpt(value: boolean) {\r\n  return {\r\n    type: RESIZE,\r\n    value: value\r\n  };\r\n}\r\nfunction graphSizeUp(size: number) {\r\n  return {\r\n    type: GRAPHSIZE,\r\n    size: size\r\n  };\r\n}\r\nfunction graphSizeDown(size: number) {\r\n  return {\r\n    type: GRAPHSIZE,\r\n    size: size\r\n  };\r\n}\r\nfunction drawCheck(value: boolean) {\r\n  return {\r\n    type: DRAWCHECK,\r\n    value: value\r\n  };\r\n}\r\nfunction corrected(value: boolean[]) {\r\n  return {\r\n    type: CORRECTED,\r\n    value: value\r\n  };\r\n}\r\nfunction bonusCorrect(value: boolean[]) {\r\n  return {\r\n    type: BONUSCORRECT,\r\n    value: value\r\n  };\r\n}\r\nfunction recentRound(value: number) {\r\n  return {\r\n    type: RECENTROUND,\r\n    value: value\r\n  };\r\n}\r\nfunction resultTrigger(value: boolean) {\r\n  return {\r\n    type: TRIGGER,\r\n    value: value\r\n  };\r\n}\r\nfunction roundSelect1(value: number) {\r\n  return {\r\n    type: ROUNDSELECT1,\r\n    value: value\r\n  };\r\n}\r\nfunction roundSelect2(value: number) {\r\n  return {\r\n    type: ROUNDSELECT2,\r\n    value: value\r\n  };\r\n}\r\nfunction userResult(value: any) {\r\n  return {\r\n    type: USERRESULT,\r\n    value: value\r\n  };\r\n}\r\n\r\n//액션 함수 export\r\nexport const actionCreators = {\r\n  list, accumulateList, resizeOpt, graphSizeUp, graphSizeDown, drawCheck, corrected, recentRound, resultTrigger, bonusCorrect, roundSelect1, roundSelect2, userResult\r\n};\r\n\r\n//초기값 선언 타입은 가장 위에서 선언한 인터페이스\r\nconst initialState: State = {\r\n  list: [[]],\r\n  accumulateList: [],\r\n  resizeOpt: false,\r\n  graphSize: 1160,\r\n  drawCheck: false,\r\n  corrected: [],\r\n  bonusCorrect: [],\r\n  recentRound: 0,\r\n  resultTrigger: false,\r\n  roundSelect1: 1,\r\n  roundSelect2: 1,\r\n  userResult: {}\r\n};\r\n\r\n// reducers\r\nexport function Reducer(\r\n  state = initialState,\r\n  action: ActionTypes\r\n): State {\r\n  switch (action.type) {\r\n    case LIST:\r\n      return {\r\n        ...state,\r\n        list: action.newList\r\n      };\r\n    case ALIST:\r\n      return {\r\n        ...state,\r\n        accumulateList: action.newList\r\n      };\r\n    case RESIZE:\r\n      return {\r\n        ...state,\r\n        resizeOpt: action.value\r\n      };\r\n    case GRAPHSIZE:\r\n      return {\r\n        ...state,\r\n        graphSize: action.size\r\n      };\r\n    case DRAWCHECK:\r\n      return {\r\n        ...state,\r\n        drawCheck: action.value\r\n      };\r\n    case CORRECTED:\r\n      return {\r\n        ...state,\r\n        corrected: action.value\r\n      };\r\n    case BONUSCORRECT:\r\n      return {\r\n        ...state,\r\n        bonusCorrect: action.value\r\n      };\r\n    case RECENTROUND:\r\n      return {\r\n        ...state,\r\n        recentRound: action.value\r\n      };\r\n    case TRIGGER:\r\n      return {\r\n        ...state,\r\n        resultTrigger: action.value\r\n      };\r\n    case ROUNDSELECT1:\r\n      return {\r\n        ...state,\r\n        roundSelect1: action.value\r\n      };\r\n    case ROUNDSELECT2:\r\n      return {\r\n        ...state,\r\n        roundSelect2: action.value\r\n      };\r\n      case USERRESULT:\r\n      return {\r\n        ...state,\r\n        userResult: action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n//기본 버튼.\r\ninterface btnProps {\r\n    color?: string\r\n    bg? : string\r\n    hoverBg? : string\r\n    float? : string\r\n    border? : boolean\r\n    fontSize? : string\r\n}\r\ninterface btnStyle {\r\n    color?: string;\r\n    bg?: string;\r\n    content: any;\r\n    click?: any;\r\n    id?: string;\r\n    hoverBg? : string\r\n    float? : string\r\n    fontSize? : string\r\n    border? : boolean\r\n}\r\nconst Btn = styled.button<btnProps>`\r\n        float : ${props => props.float};\r\n        border : ${props => props.border ? \"1px solid rgba(193,193,193,0.565)\" : 0};\r\n        margin-bottom : 5px;\r\n        margin-right : 5px;\r\n        background : ${props => props.bg || \"#EAEAEA\"};\r\n        color : ${props => props.color || \"unset\"};\r\n        border-radius : 5px;\r\n        font-weight : 600;\r\n        font-size : ${props => props.fontSize || \".9em\"} !important;\r\n        ${props => sessionStorage.getItem(\"mobile\")===\"true\" ? `&:active{background : ${props.hoverBg || \"rgb(70, 77, 82)\"}; color : white;}`: `&:hover{background : ${props.hoverBg || \"rgb(86,115,235)\"}; color : white;}`}\r\n        ${props => props.theme.noneOutline}\r\n    `\r\nconst Button = ({float,color,bg,content,click,id,hoverBg,border, fontSize}:btnStyle) => {\r\n    return (\r\n        <Btn fontSize={fontSize} border={border} float={float} hoverBg={hoverBg} color={color} bg={bg} onClick={click} id={id}> \r\n            {content}\r\n        </Btn>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import styled from 'styled-components'\r\n\r\n//내가 뽑은 혹은 추첨한 로또 번호 리스트로 뿌려줄 span\r\ninterface spanProps{\r\n    //맞춘 번호는 색다르게.\r\n    bonus? : boolean\r\n    corrected?: boolean\r\n    bonusCorrect?: boolean\r\n\r\n}\r\n\r\ninterface resultProps {\r\n    num : number\r\n    bonus? : boolean\r\n    correct? : boolean\r\n    bonusCorrect? : boolean\r\n\r\n}\r\n\r\nconst NumSpan = styled.span<spanProps>`\r\n    animation: ${props=> props.theme.fadeUp} .5s linear alternate;\r\n    display : inline-block;\r\n    width : 30px;\r\n    border : 1px solid rgba(86, 115, 235, 0.19);\r\n    padding : 4px 0px;\r\n    margin-bottom : 5px;\r\n    margin-right : 5px;\r\n    background : ${props => props.bonusCorrect || props.bonus ? \"rgb(224,230,251)\" : (props.corrected ? \"rgba(235, 83, 116,.12)\" :  \"white\")};\r\n    color : ${props => props.corrected ? \"rgb(235, 83, 116)\" : \"rgb(70, 77, 82)\"};\r\n    border-radius : 150px;\r\n    font-size : 16px !important;\r\n    font-weight : 600;\r\n`\r\n\r\nconst ResultNum = ({num,correct,bonusCorrect,bonus}:resultProps) => {\r\n    return (\r\n        <NumSpan bonusCorrect={bonusCorrect} corrected={correct} bonus={bonus}>\r\n            {num}\r\n        </NumSpan>\r\n    )\r\n}\r\n\r\nexport default ResultNum\r\n","import styled from 'styled-components'\r\n//양옆에 라인이 있는 div 커스터마이징 할 수 있게 props 설정해줌\r\ninterface styleProps {\r\n    color? : string;\r\n    fontSize? : number;\r\n}\r\ninterface props {\r\n    color? : string;\r\n    fontSize? : number;\r\n    content : any;\r\n}\r\n\r\n\r\nconst Div = styled.div<styleProps>`\r\n    margin-top : 10px;\r\n    margin-bottom : 5px;\r\n    color : ${props => props.color || 'unset'};\r\n    font-size : ${props => props.fontSize+\"px\" || 'unset'};\r\n    font-weight : 600;\r\n    display: flex;\r\n    align-items: center;\r\n    &:before{\r\n        content: \"\";\r\n        margin-right : 8px;\r\n        flex: 0%;\r\n        height: 1px;\r\n        background: rgba(134, 134, 134, 0.19);\r\n        z-index: -100;\r\n    }\r\n    &:after{\r\n        content: \"\";\r\n        margin-left : 8px;\r\n        flex: 0%;\r\n        height: 1px;\r\n        background: rgba(134, 134, 134, 0.19);\r\n        z-index: -100;\r\n    }\r\n`\r\n\r\nconst LineDiv = ({color,content,fontSize}:props) => {\r\n    return (\r\n        <Div color={color} fontSize={fontSize}>\r\n            {content}\r\n        </Div>\r\n    )\r\n}\r\nexport default LineDiv\r\n\r\n","// export function Debounce<Params extends any[]>(callback: (...args: Params) => any, milliseconds: number) {\r\n//     let debounceChek: NodeJS.Timeout\r\n//     return function (...args: Params) {\r\n//         // clearTimeout을 settimeout전에 걸어줘서 아무리 많이 버튼을 눌러도 \r\n//         //그 전 setTimeout들은 전부 삭제되고 마지막 setTimeout만 실행된다.\r\n//         clearTimeout(debounceChek);\r\n//         debounceChek = setTimeout(() => {\r\n//         console.log(debounceChek)\r\n//             callback(...args);\r\n//         }, milliseconds);\r\n//     }\r\n// }\r\nexport function Debounce<Params extends any[]>(\r\n    func: (...args: Params) => any,\r\n    timeout: number\r\n  ) {\r\n    let timer: NodeJS.Timeout;\r\n    return (...args: Params) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        func(...args);\r\n      }, timeout);\r\n    }\r\n  }","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport ResultNum from './ResultNum'\r\n\r\nconst NumLineWrapper = styled.p`\r\n    border-bottom : 1px solid rgba(134,134,134,0.19);\r\n    padding-bottom : 15px;\r\n    animation: ${props => props.theme.fadeUp} .5s linear alternate;\r\n`\r\ntype props = {\r\n    content : any\r\n}\r\n\r\nconst NumLineWrap = ({content}:props) => {\r\n    return (\r\n        <NumLineWrapper>\r\n            {content}\r\n        </NumLineWrapper>\r\n    )\r\n}\r\n\r\nexport default NumLineWrap\r\n","import React, { useState, useCallback } from 'react'\r\nimport { Debounce } from '../Debounce'\r\nimport Button from '../components/Button'\r\nimport ResultNum from '../components/ResultNum';\r\nimport LineDiv from '../components/LineDiv';\r\nimport styled from 'styled-components'\r\nimport NumLineWrap from '../components/NumLineWrap';\r\n\r\nconst Div = styled.div`\r\n    border-top : 1px solid rgba(134,134,134,0.19);\r\n    background: rgba(134,134,134,0.07);\r\n    animation: ${props => props.theme.fadeUp} .5s linear alternate;\r\n    margin-bottom : 15px;\r\n    margin-top : 15px;\r\n`\r\nconst SmallDiv = styled.div`\r\n    color : gray;\r\n    font-size : 12px;\r\n`\r\ntype props = {\r\n    list: number[][]\r\n    setDraw: Function\r\n    setCorrect: Function\r\n    correct: boolean[]\r\n    setbonusCorrect: Function\r\n    bonusCorrect: boolean[]\r\n    setTrigger: Function\r\n    trigger: boolean\r\n}\r\n\r\nconst Draw = ({ trigger, setTrigger, list, setDraw, setCorrect, correct, setbonusCorrect, bonusCorrect }: props) => {\r\n\r\n    //useSelector로 state에 접근\r\n    // var list = useSelector((state: StoreState) => state.Reducer.list);\r\n    const [result, setResult] = useState<number[]>([]);\r\n    //정답 유무를 구별할 boolean 배열. 동적으로 style component를 변경하려면 props를 state로 관리해야한다. \r\n    // const [correct,setCorrect] = useState<boolean[]>([])\r\n\r\n    let id: NodeJS.Timeout;\r\n\r\n\r\n\r\n    const random = useCallback((arr: Array<number>) => {\r\n        document.getElementById('startBtn')?.setAttribute(\"disabled\", \"true\");\r\n        var num = document.getElementById(\"num\")\r\n        id = setInterval(() => {\r\n            if (!num) clearInterval(id)\r\n            while (num) {\r\n                let number = Math.floor((Math.random() * 45) + 1)\r\n                if (!arr.includes(number)) {\r\n                    num.innerText = number.toString()\r\n                    break;\r\n                }\r\n            }\r\n        }, 50);\r\n    }, [])\r\n\r\n    //state가 변경되어 렌더링이 되면 이전에 시작된 interval값을 찾지 못하기 때문에 usecallback으로 함수 재생성을 막아줘야함.\r\n    const stop = Debounce(useCallback((correct: Array<boolean>, bonusCorrect: Array<boolean>, result: Array<number>, list: Array<number[]>, trigger: boolean) => {\r\n\r\n        let num = parseInt(document.getElementById('num')!.innerText)\r\n        if (num === 0) return\r\n        clearInterval(id)\r\n        list.forEach(i => {\r\n            if (i.includes(num)) {\r\n                if (result.length !== 6) {\r\n                    correct[num] = true;\r\n                    setCorrect([...correct])\r\n                }\r\n                else {\r\n                    bonusCorrect[num] = true;\r\n                    setbonusCorrect([...bonusCorrect])\r\n                }\r\n            }\r\n        })\r\n        setResult([...result, num])\r\n\r\n\r\n\r\n        if (result.length < 6)\r\n            setTimeout(() => {\r\n                random([...result, num])\r\n            }, 600);\r\n\r\n        else {\r\n            document.getElementById('stopBtn')!.setAttribute(\"disabled\", \"true\");\r\n            setTrigger(true)\r\n            // setTimeout(() => {\r\n            //     alert(`${correct.filter(x => x).length}개 맞추셨습니다!`)\r\n            // }, 500);\r\n        }\r\n    }, []), 700)\r\n\r\n    const reset = useCallback(() => {\r\n        clearInterval(id)\r\n        document.getElementById('num')!.innerText = \"0\"\r\n        setCorrect([])\r\n        setbonusCorrect([])\r\n        setResult([])\r\n        setTimeout(() => {\r\n            setTrigger(false)\r\n        }, 200);\r\n\r\n        document.getElementById('stopBtn')!.removeAttribute(\"disabled\")\r\n        document.getElementById('startBtn')!.removeAttribute(\"disabled\")\r\n    }, [])\r\n\r\n    return (\r\n        <Div id=\"drawSec\">\r\n            <h1 id=\"num\" style={{fontSize : \"30px\"}}>0</h1>\r\n            <Button fontSize=\"1.1em\" id=\"startBtn\" content=\"추첨시작\" click={() => random([])}></Button>\r\n            <Button fontSize=\"1.1em\" id=\"stopBtn\" click={() => stop(correct, bonusCorrect, result, list, trigger)} content=\"뽑기\"></Button>\r\n            <Button fontSize=\"1.1em\" id=\"resetBtn\" color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" click={reset} content=\"초기화\"></Button>\r\n            <LineDiv fontSize={15} content=\"추첨 결과\"></LineDiv>\r\n            <NumLineWrap content={result.length === 0 ? <SmallDiv>추첨시작을 누른 후 당첨숫자를 뽑아보세요</SmallDiv> : result.map((x, idx) => {\r\n                if (idx === 6)\r\n                    return (\r\n                        <span id=\"bonusSpan\">+  <ResultNum bonusCorrect={bonusCorrect[x]} correct={correct[x]} bonus={true} num={x}></ResultNum></span>\r\n                    )\r\n                else\r\n                    return (\r\n                        <ResultNum bonusCorrect={bonusCorrect[x]} correct={correct[x]} num={x}></ResultNum>\r\n                    )\r\n            })}></NumLineWrap>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default Draw\r\n","import { useState } from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\ninterface numSpanProps {\r\n    selected?: boolean\r\n}\r\n\r\ninterface props{\r\n    content : number\r\n    click : Function\r\n    selected?: boolean\r\n    id : string\r\n}\r\n//이런 식으로 자주 쓰일 것 같은 css를 만들어놓고 편리하게 사용 가능.\r\n// const hoverForPC = css`\r\n//     &:hover{\r\n//         background : rgb(70, 77, 82);\r\n//         color : white;\r\n//     }\r\n// `\r\nconst NumSpan = styled.button<numSpanProps>`\r\n        @media(max-width : 414px){\r\n            padding : 6px 0px;\r\n            width : 30px;\r\n            font-size : 12px;\r\n        }\r\n        width : 35px;\r\n        outline : 0;\r\n        cursor : pointer;\r\n        border : 0;\r\n        transition:all ease-out .5s;\r\n        padding : 8px 0px;\r\n        margin-bottom : 5px;\r\n        margin-right : 5px;\r\n        background : ${props => props.selected ? \"rgb(70, 77, 82)\" : \"#EAEAEA\"};\r\n        color : ${props => props.selected ? \"white\" : \"unset\"};\r\n        border-radius : 10px;\r\n        font-weight : 600;\r\n        ${sessionStorage.getItem(\"mobile\")===\"true\" ? '': '&:hover{background : rgba(70, 77, 82,.7)}'}\r\n    `\r\n\r\n\r\n\r\n\r\n\r\nconst NumList = ({content,click,selected,id}:props) => {\r\n    \r\n    return (\r\n        <NumSpan id={id} selected={selected} onClick={()=>click(content)}>{content}</NumSpan>\r\n    )\r\n}\r\n\r\nexport default NumList\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { RankResult } from '../models/RankResult.js'\r\nimport { RankResultNum } from '../models/RankResultNum'\r\nimport Axios from 'axios'\r\n\r\ntype props = {\r\n    trigger?: boolean\r\n    list: number[]\r\n    bonusCorrect: boolean[]\r\n    correct: boolean[]\r\n    listSize: number\r\n    idx:number\r\n    rankResult:RankResult\r\n    rankResultNum:RankResultNum\r\n    setUserResult: Function\r\n}\r\n\r\ntype RankProps = {\r\n    bg: string\r\n}\r\n\r\nconst RankSpan = styled.span<RankProps>`\r\n    background: ${props => props.bg || 'none'};\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n    color: white;\r\n    float : left;\r\n`\r\n\r\n\r\nconst Rank = ({rankResultNum, rankResult,trigger, list,listSize,idx, correct, bonusCorrect, setUserResult }: props) => {\r\n    const [rankColor, setRankColor] = useState<string[]>([\"\", \"\"])\r\n\r\n\r\n    const result = () => {\r\n        var correctList:any = list.map((x,idx) => {if(correct[x]) return idx}).filter((x:any)=> x>=0)\r\n        console.log(correctList)\r\n        var bonusNum: number = bonusCorrect.indexOf(true)\r\n        var bonus: boolean = list.includes(bonusNum)\r\n        if (correctList.length < 3) {\r\n            rankResult.setLast()\r\n            return [\"꽝\", \"black\"]\r\n        }\r\n        else if (correctList.length === 3) {\r\n            rankResult.setFifth()\r\n            return [\"5등\", \"darkslateblue\"]\r\n        }\r\n        else if (correctList.length === 4) {\r\n            rankResult.setFourth()\r\n            return [\"4등\", \"darkgoldenrod\"]\r\n        }\r\n        else if (correctList.length === 5 && !bonus) {\r\n            var list2:any = [...list]\r\n            correctList.forEach((i:any)=>{\r\n                list2[i] = [list2[i],1]\r\n            })\r\n            \r\n            rankResult.setThird()\r\n            rankResultNum.setThirdNums(list2)\r\n            return [\"3등\", \"darkcyan\"]\r\n        }\r\n        else if (correctList.length === 5) {\r\n            var list2:any = [...list]\r\n            correctList.forEach((i:any)=>{\r\n                list2[i] = [list2[i],1]\r\n            })\r\n            list2[list.indexOf(bonusNum)] = [list2[list.indexOf(bonusNum)], 2]\r\n            rankResult.setSecond()\r\n            rankResultNum.setSecondNums(list2)\r\n            return [\"2등\", \"cornflowerblue\"]\r\n        }\r\n        else {\r\n            var list2:any = [...list]\r\n            correctList.forEach((i:any)=>{\r\n                list2[i] = [list2[i],1]\r\n            })\r\n            rankResult.setFirst()\r\n            rankResultNum.setFirstNums(list2)\r\n            return [\"1등\", \"coral\"]\r\n        }\r\n    }\r\n\r\n    const sendResult = async (sumResult:RankResult,resultNums:RankResultNum) => {\r\n        await Axios.post('https://lotto-server-mongo.herokuapp.com/winData',{ sumResult : sumResult, resultNums : resultNums})\r\n        .then(res=> console.log(res.data))\r\n        .catch(err=> console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (trigger){\r\n            setRankColor(result())\r\n            if(listSize-1===idx){\r\n                var rank = rankResult.getFirst>0 ? 1 : (rankResult.getSecond>0 ? 2 : (rankResult.getThird>0 ? 3 : 0))\r\n                if(rank>0){\r\n                    var name = window.prompt(`축하합니다 ${rank}등에 당첨되셨습니다! 명예의 전당에 올릴 성함(닉네임)을 알려주세요! 취소를 누르시면 익명으로 등록됩니다.   **1글자 ~ 10글자**`)?.trim() || \"익명\"\r\n                    while(true){\r\n                        if(name.length>10)\r\n                        name = window.prompt(\"10글자 이하로 부탁드립니다 취소를 누르시면 익명으로 등록됩니다.\") || \"익명\"\r\n                        else break;\r\n                    }\r\n                    rankResultNum.setWinnerName(name)\r\n                }\r\n                sendResult(rankResult,rankResultNum)\r\n                var pastResult = localStorage.getItem(\"userResult\")\r\n                if(pastResult){\r\n                    var newResult = JSON.parse(pastResult);\r\n                    newResult.first += rankResult.getFirst\r\n                    newResult.second += rankResult.getSecond\r\n                    newResult.third += rankResult.getThird\r\n                    newResult.fourth += rankResult.getFourth\r\n                    newResult.fifth += rankResult.getFifth\r\n                    newResult.last += rankResult.getLast\r\n                    setUserResult(newResult)\r\n                    localStorage.setItem(\"userResult\",JSON.stringify(newResult))\r\n                }else{\r\n                    localStorage.setItem(\"userResult\",JSON.stringify(rankResult))\r\n                    setUserResult(newResult)\r\n                }\r\n                document.getElementById(\"footerBtn\")?.click()\r\n                \r\n            }\r\n        } \r\n        else setRankColor([\"\", \"\"])\r\n        \r\n    }, [trigger])\r\n\r\n    return (\r\n        <RankSpan bg={rankColor[1]}>\r\n            {rankColor[0]}\r\n        </RankSpan>\r\n    )\r\n}\r\n\r\nexport default Rank\r\n","import React from 'react'\r\n\r\nconst DeleteSvg = () => {\r\n    return (\r\n        <svg width=\"25px\"  xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 100 95\" x=\"0px\" y=\"0px\"><path d=\"M84.81,17.49H66.68L62.23,8.55a3,3,0,0,0-2.69-1.66H40.45a3,3,0,0,0-2.69,1.66l-4.45,8.94H15.19a3,3,0,0,0,0,6h4.27V81.11a12,12,0,0,0,12,12H68.54a12,12,0,0,0,12-12V23.49h4.27a3,3,0,0,0,0-6Zm-42.5-4.6H57.69L60,17.49H40ZM74.54,81.11a6,6,0,0,1-6,6H31.46a6,6,0,0,1-6-6V23.49H74.54Z\"/><path d=\"M50,81.51a3,3,0,0,0,3-3V32.21a3,3,0,0,0-6,0v46.3A3,3,0,0,0,50,81.51Z\"/><path d=\"M62.77,81.51a3,3,0,0,0,3-3V32.21a3,3,0,0,0-6,0v46.3A3,3,0,0,0,62.77,81.51Z\"/><path d=\"M37.23,81.51a3,3,0,0,0,3-3V32.21a3,3,0,1,0-6,0v46.3A3,3,0,0,0,37.23,81.51Z\"/></svg>\r\n    )\r\n}\r\n\r\nexport default DeleteSvg\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Head = styled.h3`\r\n    background : rgb(86,115,235);\r\n    color : white;\r\n    border-radius : 15px;\r\n    padding : 5px 10px;\r\n    transition:all ease-out .5s;\r\n\r\n`\r\n\r\ntype props = {\r\n    content : any\r\n}\r\n\r\nconst SubTitle = ({content}:props) => {\r\n    return (\r\n        <Head>{content}</Head>\r\n    )\r\n}\r\n\r\nexport default SubTitle\r\n","export class RankResultNum {\r\n    //맞은 숫자는 1, 맞은 보너스 숫자는 2로 표현\r\n    private firstNums! : number[][]\r\n    private secondNums! : number[][]\r\n    private thirdNums! : number[][]\r\n    private winnerName! : string\r\n    \r\n    constructor() {\r\n        this.firstNums = []\r\n        this.secondNums = []\r\n        this.thirdNums = []\r\n    }\r\n    \r\n    public  setFirstNums(value:number[]) {\r\n        this.firstNums.push(value)\r\n    } \r\n    public  setSecondNums(value:number[]) {\r\n        this.secondNums.push(value)\r\n    }\r\n    public  setThirdNums(value:number[]) {\r\n        this.thirdNums.push(value)\r\n    }\r\n    public  setWinnerName(value:string) {\r\n        this.winnerName = value\r\n    }\r\n\r\n    public get getFirstNums() {\r\n        return this.firstNums \r\n    }\r\n    public get getSecondNums() {\r\n        return this.secondNums \r\n    }\r\n    public get getThirdNums() {\r\n        return this.thirdNums \r\n    }\r\n    public get getWinnerName() {\r\n        return this.winnerName \r\n    }\r\n    \r\n}","export class RankResult {\r\n    private first: number\r\n    private second: number\r\n    private third: number\r\n    private fourth: number\r\n    private fifth: number\r\n    private last: number\r\n\r\n    constructor(obj?: RankResult) {\r\n        this.first = obj?.first || 0\r\n        this.second = obj?.second || 0\r\n        this.third = obj?.third || 0\r\n        this.fourth = obj?.fourth || 0\r\n        this.fifth = obj?.fifth || 0\r\n        this.last = obj?.last || 0\r\n    }\r\n\r\n\r\n    public setFirst() {\r\n        this.first += 1\r\n    }\r\n    public setSecond() {\r\n        this.second += 1\r\n    }\r\n    public setThird() {\r\n        this.third += 1\r\n    }\r\n    public setFourth() {\r\n        this.fourth += 1\r\n    }\r\n    public setFifth() {\r\n        this.fifth += 1\r\n    }\r\n    public setLast() {\r\n        this.last += 1\r\n    }\r\n\r\n    public get getFirst() {\r\n        return this.first\r\n    }\r\n    public get getSecond() {\r\n        return this.second\r\n    }\r\n    public get getThird() {\r\n        return this.third\r\n    }\r\n    public get getFourth() {\r\n        return this.fourth\r\n    }\r\n    public get getFifth() {\r\n        return this.fifth\r\n    }\r\n    public get getLast() {\r\n        return this.last\r\n    }\r\n\r\n}","import { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\nimport React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from '../components/Button';\r\n\r\nimport ResultNum from '../components/ResultNum';\r\nimport LineDiv from '../components/LineDiv';\r\n\r\nimport Draw from './Draw';\r\nimport NumList from '../components/NumList';\r\nimport NumLineWrap from '../components/NumLineWrap';\r\nimport Rank from '../components/Rank';\r\nimport DeleteSvg from '../components/DeleteSvg';\r\nimport SubTitle from '../components/SubTitle';\r\nimport { RankResultNum } from '../models/RankResultNum';\r\nimport { RankResult } from '../models/RankResult';\r\n\r\n//ts에서 props를 사용하는 방법\r\n\r\n\r\n//이런 식으로 자주 쓰일 것 같은 css를 만들어놓고 편리하게 사용 가능.\r\n// const hoverForPC = css`\r\n//     &:hover{\r\n//         background : rgb(70, 77, 82);\r\n//         color : white;\r\n//     }\r\n// `\r\nconst Section = styled.section`\r\n    ${props => props.theme.sectionCss}\r\n`\r\n\r\nconst SmallDiv = styled.div`\r\n    color : gray;\r\n    font-size : 12px;\r\n    display : flex;\r\n    flex-direction : column-reverse;\r\n`\r\n\r\nconst NumDiv = styled.div`\r\n    `\r\nconst SelectNum = () => {\r\n    var list = useSelector((state: StoreState) => state.Reducer.list);\r\n    var draw = useSelector((state: StoreState) => state.Reducer.drawCheck);\r\n    var correct = useSelector((state: StoreState) => state.Reducer.corrected);\r\n    var bonusCorrect = useSelector((state: StoreState) => state.Reducer.bonusCorrect);\r\n    var trigger = useSelector((state: StoreState) => state.Reducer.resultTrigger);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setList = (list: number[][]) => {\r\n        dispatch(actionCreators.list(list))\r\n    }\r\n    const setDraw = (value: boolean) => {\r\n        dispatch(actionCreators.drawCheck(value))\r\n    }\r\n    const setCorrect = (value: boolean[]) => {\r\n        dispatch(actionCreators.corrected(value))\r\n    }\r\n    const setbonusCorrect = (value: boolean[]) => {\r\n        dispatch(actionCreators.bonusCorrect(value))\r\n    }\r\n    const setTrigger = (value: boolean) => {\r\n        dispatch(actionCreators.resultTrigger(value))\r\n    }\r\n    const setUserResult = (value: any) => {\r\n        dispatch(actionCreators.userResult(value))\r\n    }\r\n    const [selectBtn, setSelectBtn] = useState<boolean[]>([])\r\n    const [line, setLine] = useState<number>(0)\r\n\r\n\r\n    useEffect(() => {\r\n        var result = localStorage.getItem(\"userResult\")\r\n        if(result) setUserResult(JSON.parse(result))\r\n    }, [])\r\n\r\n    let allNum: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\r\n\r\n    //번호 선택 이벤트\r\n    const select = (num: number) => {\r\n        if(afterDraw()) return\r\n        if (list[line].includes(num)) {\r\n            //번호 선택 해제. 배열에서 제거하고 스타일 변경을 위해 false로 변경.\r\n            list[line].splice(list[line].indexOf(num), 1)\r\n            selectBtn[num - 1] = false\r\n            setSelectBtn([...selectBtn])\r\n            setList([...list])\r\n        }\r\n        else if (list[line].length === 6) return\r\n        else {\r\n            selectBtn[num - 1] = true\r\n            setSelectBtn([...selectBtn])\r\n            list[line].push(num)\r\n            setList([...list])\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    let map = allNum.map((x, idx) => <NumList content={x} selected={selectBtn[idx]} id={`btn${x}`} click={select}></NumList>)\r\n\r\n    const reset = () => {\r\n        setCorrect([])\r\n        setbonusCorrect([])\r\n        setTrigger(false)\r\n        setDraw(false)\r\n        setLine(0)\r\n        setSelectBtn([])\r\n        setList([[]])\r\n    }\r\n    console.log(\"aaa\")\r\n\r\n    const submit = () => {\r\n        if (list[line].length < 6) {\r\n            alert(\"총 6개의 번호를 선택해주세요\")\r\n            return\r\n        }\r\n        if (window.confirm(`선택한 로또번호로 추첨하시겠습니까?`)) {\r\n            setDraw(true)\r\n        }\r\n    }\r\n\r\n    const afterDraw = () => {\r\n        if(document.getElementById(\"resetBtn\")?.nextElementSibling?.nextElementSibling?.firstChild?.nodeName==='SPAN'){\r\n            if(window.confirm(\"추첨이 시작된 로또이므로 번호를 추가할 수 없습니다. 초기화하시겠습니까?\")){\r\n                reset()\r\n                return true\r\n            } \r\n            else return true\r\n        }\r\n        else return false\r\n    }\r\n\r\n    const random = () => {\r\n        if(afterDraw()) return\r\n        var length: number = list[line].length\r\n        for (var i = 0; i < 6 - length; i++) {\r\n            while (true) {\r\n                var num: number = Math.floor((Math.random() * 45) + 1)\r\n                if (!list[line].includes(num)) {\r\n                    document.getElementById(`btn${num}`)?.click()\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const addLine = () => {\r\n        if (list[line].length < 6) return\r\n        if(afterDraw()) return\r\n        list.push([])\r\n        setList([...list])\r\n        setLine(line + 1)\r\n        setSelectBtn([])\r\n    }\r\n\r\n    const resetOneLine = () => {\r\n        list[line] = []\r\n        setSelectBtn([])\r\n        setList([...list])\r\n    }\r\n\r\n    const deleteLine = (idx: number) => {\r\n        list.splice(idx, 1)\r\n        setList([...list])\r\n        setLine(line - 1)\r\n    }\r\n\r\n    const deleteSelectLine = (idx:number) => {\r\n        if(list.length===idx+1) setSelectBtn([])\r\n        deleteLine(idx)\r\n    }\r\n\r\n  \r\n\r\n    var rankResult = new RankResult()\r\n    var rankResultNum = new RankResultNum()\r\n    return (\r\n        <Section>\r\n            <SubTitle content=\"가상 로또 추첨\"></SubTitle>\r\n            <NumDiv>\r\n                {map}\r\n            </NumDiv>\r\n            <Button fontSize={\"1.1em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"나머지 랜덤\" click={random}></Button>\r\n            <Button fontSize={\"1.1em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"한 줄 추가\" click={addLine}></Button>\r\n            <Button fontSize={\"1.1em\"} color=\"rgb(86, 115, 235)\" bg=\"rgb(224, 230, 251)\" content=\"현재 줄 초기화\" click={resetOneLine}></Button>\r\n            <Button fontSize={\"1.1em\"} color=\"rgb(235, 83, 116)\" bg=\"rgba(235, 83, 116, 0.12)\" hoverBg=\"rgb(235, 83, 116)\" content=\"전체초기화\" click={reset}></Button>\r\n            <Button fontSize={\"1.1em\"} color=\"rgb(255,94,0)\" bg=\"rgba(255,94,0,.12)\" hoverBg=\"rgb(255,94,0)\" content=\"추첨하기\" click={submit}></Button>\r\n            {draw ? <Draw  bonusCorrect={bonusCorrect} setbonusCorrect={setbonusCorrect} trigger={trigger} setTrigger={setTrigger} list={list} setDraw={setDraw} setCorrect={setCorrect} correct={correct}></Draw> : ''}\r\n            <LineDiv fontSize={15} content=\"내가 뽑은 로또 번호\"></LineDiv>\r\n            <div>\r\n                {list.map((i, idx) => <NumLineWrap content={list[idx].length === 0 ? (list.length > 1 ? <SmallDiv>새 번호를 선택해주세요<Button   hoverBg=\"#EAEAEA\"  bg=\"none\" content={<DeleteSvg></DeleteSvg>} click={() => deleteSelectLine(idx)}></Button></SmallDiv> :<SmallDiv>새 번호를 선택해주세요</SmallDiv>) \r\n\r\n                : <div><Rank setUserResult={setUserResult} rankResultNum={rankResultNum}  rankResult={rankResult} listSize={list.length} idx={idx}  list={list[idx]} correct={correct} bonusCorrect={bonusCorrect} trigger={trigger}></Rank> \r\n\r\n                {list[idx].sort((a,b)=> a-b).map(x => <ResultNum bonusCorrect={bonusCorrect[x]} correct={correct[x]} num={x}></ResultNum>)}\r\n\r\n                {idx > 0 ? <Button  float=\"right\" hoverBg=\"#EAEAEA\"  bg=\"none\" content={<DeleteSvg></DeleteSvg>} click={() => deleteSelectLine(idx)}></Button> : ''}</div>}></NumLineWrap>)}\r\n            </div>\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default SelectNum\r\n\r\n","import { useState } from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\n\r\ntype wrapperProps = {\r\n    size: number\r\n}\r\n\r\n\r\nconst ChartWrapper = styled.div<wrapperProps>`\r\n    width : ${props => props.size}px\r\n`\r\nconst ScrollDiv = styled.div`\r\n    overflow-x : auto;\r\n`\r\n\r\nconst Chart = () => {\r\n    var list = useSelector((state: StoreState) => state.Reducer.accumulateList);\r\n    var resize = useSelector((state: StoreState) => state.Reducer.resizeOpt);\r\n    var size = useSelector((state: StoreState) => state.Reducer.graphSize);\r\n\r\n\r\n    const expData = {\r\n        labels: list.map(x => `${x[0]}번`),\r\n        datasets: [\r\n            {\r\n                data: list.map(x => x[1]),\r\n                borderWidth: 2,\r\n                hoverBorderWidth: 3,\r\n                backgroundColor:\r\n                    list.map(x => {\r\n                        if (x[0] < 11) return \"#fbc400\"\r\n                        else if (x[0] < 21) return \"#69c8f2\"\r\n                        else if (x[0] < 31) return \"#ff7272\"\r\n                        else if (x[0] < 41) return \"#aaa\"\r\n                        else return \"#b0d840\"\r\n                    })\r\n                ,\r\n            }\r\n        ]\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ScrollDiv>\r\n                <ChartWrapper size={size}>\r\n                    <Bar\r\n                        options={\r\n                            {\r\n                                plugins : {\r\n                                    labels: [\r\n                                        {\r\n                                        render: 'value',\r\n                                        fontStyle : \"bold\"\r\n                                      },\r\n                                    ]\r\n                                },\r\n                                maintainAspectRatio: false,\r\n                                legend: {\r\n                                    display: false\r\n                                },\r\n                                scales: {\r\n                                    yAxes: [{\r\n                                        ticks: {\r\n                                            suggestedMax: list.length >0 ? list[0][1] + list[0][1]*0.1 : 0,\r\n                                            beginAtZero: true\r\n                                        }\r\n                                    }],\r\n                                }\r\n                            }\r\n                        }\r\n                        redraw={resize}\r\n                        data={expData}\r\n                        height={300}\r\n                        width={100}\r\n                    />\r\n                </ChartWrapper>\r\n            </ScrollDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import styled, { css } from 'styled-components'\r\n\r\ntype props = {\r\n    click: any\r\n    content: string[]\r\n    hover?: string\r\n    bg?: string\r\n    color?: string\r\n    selected: boolean[]\r\n    selectColor?: string\r\n    selectBg?: string\r\n}\r\ntype btnProps = {\r\n    hover?: string\r\n    bg?: string\r\n    color?: string\r\n    selected: boolean\r\n    selectColor?: string\r\n    selectBg?: string\r\n}\r\n\r\nconst Group = styled.div`\r\nmargin-right : 10px;\r\n`\r\nconst btnCss = css<btnProps>`\r\n    ${props => props.theme.noneOutline}\r\n    border : 1px solid rgba(193,193,193,0.565);\r\n    background : ${props => props.selected ? (props.selectBg || \"rgb(224, 230, 251)\") : (props.bg || \"white\")};\r\n    color : ${props => props.selected ? (props.selectColor || \"rgb(86, 115, 235)\") : (props.color || \"gray\")};\r\n    ${props => sessionStorage.getItem(\"mobile\") === \"true\" ?\r\n        `&:active{\r\n        background : ${props.selectBg || \"rgb(224, 230, 251)\"};\r\n         color : ${props.selectColor || \"rgb(86, 115, 235);\"}\r\n        }`\r\n        :\r\n        `&:hover{\r\n            background : ${props.selectBg || \"rgb(224, 230, 251)\"};\r\n            color : ${props.selectColor || \"rgb(86, 115, 235);\"}\r\n        }`\r\n    }\r\n`\r\nconst FirstBtn = styled.button`\r\n    ${btnCss}\r\n    border-top-left-radius : 4px;\r\n    border-bottom-left-radius : 4px;\r\n`\r\nconst LastBtn = styled.button`\r\n${btnCss}\r\n    border-top-right-radius : 4px;\r\n    border-bottom-right-radius : 4px;\r\n    border-left : none;\r\n`\r\nconst Btn = styled.button`\r\n    ${btnCss}\r\n    border-left : none;\r\n`\r\n\r\n\r\nconst ButtonGroup = ({ click, color, bg, hover, content, selected, selectColor, selectBg }: props) => {\r\n\r\n    var map = content.map((x, idx) => {\r\n        switch (idx) {\r\n            case 0:\r\n                return <FirstBtn selected={selected[idx]} color={color} bg={bg} hover={hover} selectBg={selectBg} selectColor={selectColor} onClick={() => click[idx](idx)}>{x}</FirstBtn>\r\n            case content.length - 1:\r\n                return <LastBtn selected={selected[idx]} color={color} bg={bg} hover={hover} selectBg={selectBg} selectColor={selectColor} onClick={() => click[idx](idx)}>{x}</LastBtn>\r\n\r\n            default:\r\n                return <Btn selected={selected[idx]} color={color} bg={bg} hover={hover} selectBg={selectBg} selectColor={selectColor} onClick={() => click[idx](idx)}>{x}</Btn>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Group>\r\n            {map}\r\n        </Group>\r\n    )\r\n}\r\n\r\nexport default ButtonGroup\r\n","import React from 'react'\r\n\r\ntype props ={\r\n    upDown:boolean\r\n    fill:string\r\n}\r\n\r\nconst Arrow = ({upDown,fill}:props) => {\r\n    return (\r\n        <svg width=\"1.1em\" style={{transform : `rotate(${upDown ? 90 : -90}deg)`, fill : fill}} xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 64 64\" x=\"0px\" y=\"0px\"><path d=\"M50.50851,27.936H23.39865l8.95849-8.72266a3.99994,3.99994,0,0,0-5.58008-5.73242L10.70089,29.13421a3.99979,3.99979,0,0,0,0,5.73242L26.77706,50.519a3.99994,3.99994,0,1,0,5.58008-5.73242L23.26657,35.936H50.50851a4,4,0,1,0,0-8Z\"/></svg>\r\n    )\r\n}\r\n\r\nexport default Arrow\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport Axios from 'axios'\r\nimport Chart from './Chart'\r\nimport ButtonGroup from './ButtonGroup';\r\nimport styled from 'styled-components'\r\nimport LineDiv from './LineDiv';\r\nimport { Debounce } from '../Debounce'\r\nimport Arrow from './Arrow';\r\nimport Button from './Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\n\r\n\r\ntype props = {\r\n    addAList: Function\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n    display : inline-flex;\r\n    line-height : 1;\r\n    margin-right : 10px;\r\n`\r\n\r\nconst Span = styled.span`\r\n    font-size : .8em;\r\n    color : gray;\r\n    margin-right : 10px;\r\n    margin-top : 7px;\r\n    font-weight : 600;\r\n`\r\nconst AccumulateChart = ({ addAList }: props) => {\r\n\r\n    //로또 회차정보\r\n    const roundSize = useSelector((state: StoreState) => state.Reducer.recentRound)\r\n    const select1 = useSelector((state:StoreState) => state.Reducer.roundSelect1)\r\n    const select2 = useSelector((state:StoreState) => state.Reducer.roundSelect2)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setSelect1 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect1(value))\r\n    }\r\n    const setSelect2 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect2(value))\r\n    }\r\n\r\n    const winGraph = (skip: number, limit: number, bonus: boolean, sort: boolean) => {\r\n        if (roundSize === 0) return\r\n        Axios.post('https://lotto-server-mongo.herokuapp.com/winGraph', { skip: skip, limit: limit !== 0 ? limit : 1, bonus: bonus, sort: sort })\r\n            .then(res => {\r\n                addAList(res.data)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //처음 그래프 정보 로드\r\n        var [big, small] = bigSmall(select1, select2)\r\n        winGraph(small - 1, big - small + 1, false, false)\r\n    }, [roundSize])\r\n\r\n    //버튼 토글 \r\n    const [btnSelect, setBtnSelect] = useState<boolean[]>([true, false])\r\n    //sort버튼 토글\r\n    const [sortBtn, setSortBtn] = useState<boolean>(false)\r\n\r\n    //버튼 클릭 이벤트\r\n    const selected = (idx: number) => {\r\n        setBtnSelect(btnSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }\r\n\r\n    //최신회차까지 옵션 생성 1회차부터기때문에 +1\r\n    var arr = new Array(roundSize).fill(0)\r\n    var map = arr.map((x, idx: number) => <option key={idx} value={idx + 1}>{idx + 1}</option>)\r\n\r\n\r\n    //회차 선택을 큰 수, 작은 수 순으로 할 경우를 위해 만든 대소 비교 함수.\r\n    const bigSmall = (val1: number, val2: number) => {\r\n        return val1 > val2 ? [val1, val2] : [val2, val1]\r\n    }\r\n\r\n    //옵션1 이벤트\r\n    const handleChange = (e: any) => {\r\n        var val: number = parseInt(e.target.value)\r\n\r\n        var [big, small] = bigSmall(val, select2)\r\n        setSelect1(val)\r\n        winGraph(small - 1, big - small + 1, btnSelect[1], sortBtn)\r\n    }\r\n\r\n    //옵션2 이벤트\r\n    const handleChange2 = (e: any) => {\r\n        var val: number = parseInt(e.target.value)\r\n        var [big, small] = bigSmall(val, select1)\r\n        setSelect2(val)\r\n        winGraph(small - 1, big - small + 1, btnSelect[1], sortBtn)\r\n    }\r\n\r\n    //보너스 미포함 그래프\r\n    const noBonus = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        selected(idx)\r\n        var [big, small] = bigSmall(select2, select1)\r\n        winGraph(small - 1, big - small + 1, false, sortBtn)\r\n    }, 200)\r\n\r\n    //보너스 포함 그래프\r\n    const bonus = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        selected(idx)\r\n        var [big, small] = bigSmall(select2, select1)\r\n        winGraph(small - 1, big - small + 1, true, sortBtn)\r\n    }, 200)\r\n\r\n\r\n    //정렬\r\n    const sort = Debounce(() => {\r\n        var [big, small] = bigSmall(select2, select1)\r\n        if (sortBtn) {\r\n            winGraph(small - 1, big - small + 1, btnSelect[1], false)\r\n            setSortBtn(false)\r\n        } else {\r\n            winGraph(small - 1, big - small + 1, btnSelect[1], true)\r\n            setSortBtn(true)\r\n        }\r\n    }, 200)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LineDiv content={<div>\r\n                <select value={select1} onChange={handleChange}>\r\n                    {map}\r\n                </select>  회차부터&nbsp;&nbsp;\r\n            <select value={select2} onChange={handleChange2}>\r\n                    {map}\r\n                </select>  회차까지\r\n            </div>}></LineDiv>\r\n\r\n            <FlexDiv><Span>가장 많이 뽑힌</Span><ButtonGroup selected={btnSelect} content={[\"번호(보너스X)\", \"보너스번호\"]} click={[noBonus, bonus]}></ButtonGroup><Button border={true} click={sort} hoverBg=\"rgb(224,230,251)\" bg=\"white\" content={<Arrow fill=\"rgb(86,115,235)\" upDown={sortBtn}></Arrow>}></Button></FlexDiv>\r\n            \r\n            <Chart></Chart>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccumulateChart\r\n","import { useState, useEffect } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport \"chartjs-plugin-labels\"\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport { RankResult } from '../models/RankResult';\r\n\r\ntype wrapperProps = {\r\n    size: number\r\n}\r\ntype props = {\r\n    rankList?:RankResult\r\n}\r\n\r\nconst ScrollDiv = styled.div`\r\n    overflow-x : auto;\r\n`\r\nconst ChartWrapper = styled.div<wrapperProps>`\r\n    width : ${props => props.size}px\r\n`\r\n\r\n\r\nconst PieChart = ({rankList}:props) => {\r\n    \r\n    var resize = useSelector((state: StoreState) => state.Reducer.resizeOpt);\r\n    var size = useSelector((state: StoreState) => state.Reducer.graphSize);\r\n\r\n    const expData = {\r\n        labels: [\"1등\", \"2등\",\"3등\",\"4등\",\"5등\",\"꽝\"],\r\n        datasets: [\r\n            {\r\n                data: [rankList?.getFirst, rankList?.getFirst,rankList?.getThird,rankList?.getFourth,rankList?.getFifth,rankList?.getLast],\r\n                borderWidth: 2,\r\n                hoverBorderWidth: 3,\r\n                backgroundColor:\r\n                    [\"#fbc400\", \"#69c8f2\", \"#ff7272\", \"#b0d840\", \"#aaa\"]\r\n                ,\r\n            }\r\n        ]\r\n    };\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ScrollDiv>\r\n                <ChartWrapper size={size-1170}>\r\n                <Doughnut\r\n                    options={{\r\n                        responsive: true,\r\n                        legend: {\r\n                            display: true,\r\n                            position: \"bottom\",\r\n                            labels : {\r\n                                padding : 10,\r\n                                boxWidth : 25,\r\n                                fontStyle : \"bold\",\r\n                                fontSize : 13\r\n\r\n                            }\r\n                        },\r\n\r\n                        plugins: {\r\n                            labels: [\r\n                                {\r\n                                    render: 'label',\r\n                                    arc: true,\r\n                                    position: 'outside',\r\n                                    fontSize : 14,\r\n                                    fontStyle: 'bold'\r\n                                },\r\n                                {\r\n                                    render: 'percentage',\r\n                                    fontSize : 14,\r\n                                    fontStyle: 'bold'\r\n                                }\r\n                            ]\r\n                        }\r\n                    }}\r\n                    redraw={resize}\r\n                    data={expData}\r\n                    height={95}\r\n                    width={100}\r\n                />\r\n                </ChartWrapper>\r\n            </ScrollDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PieChart\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport Chart from './Chart'\r\nimport ButtonGroup from './ButtonGroup';\r\nimport styled from 'styled-components'\r\nimport LineDiv from './LineDiv';\r\nimport { Debounce } from '../Debounce'\r\nimport PieChart from './PieChart';\r\nimport { RankResult } from '../models/RankResult';\r\n\r\ntype props = {\r\n    addAList: Function\r\n}\r\n\r\nconst FlexDiv = styled.div`\r\n    display : inline-flex;\r\n    line-height : 1;\r\n    margin-right : 10px;\r\n`\r\n\r\nconst Span = styled.span`\r\n    font-size : .8em;\r\n    color : gray;\r\n    margin-right : 10px;\r\n    margin-top : 7px;\r\n`\r\n\r\nconst UserChart = ({addAList}:props) => {\r\n\r\n\r\n    const getRankData = async () => {\r\n        Axios.post('https://lotto-server-mongo.herokuapp.com/', {query : `\r\n        query{\r\n            resultSum(_id:\"id\"){\r\n                first second third fourth fifth last\r\n            }\r\n        }\r\n        `}).then(res => {\r\n            setRankList(new RankResult(res.data.data.resultSum))\r\n        })\r\n    }\r\n\r\n    const getWinData = async () => {\r\n        Axios.get('https://lotto-server-mongo.herokuapp.com/userWinNum').then(res => {\r\n            console.log(res.data)\r\n            addAList(res.data)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getRankData()\r\n    }, [])\r\n\r\n    //버튼 토글 \r\n    const [btnSelect, setBtnSelect] = useState<boolean[]>([true, false])\r\n    const [rankList,setRankList] = useState<RankResult>()\r\n\r\n    //버튼 클릭 이벤트\r\n    const selected = (idx: number) => {\r\n        btnSelect[idx] = true\r\n        setBtnSelect(btnSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }\r\n\r\n   \r\n\r\n  \r\n\r\n   \r\n\r\n    const rankChart = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        getRankData()\r\n        selected(idx)\r\n    }, 200)\r\n\r\n    const winNumChart = Debounce((idx: number) => {\r\n        if (btnSelect[idx]) return\r\n        getWinData()\r\n        selected(idx)\r\n    }, 200)\r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n\r\n            <LineDiv content={<FlexDiv><Span>유저들의 가상 로또</Span><ButtonGroup content={[\"당첨 비율\", \"당첨 번호\"]} selected={btnSelect} click={[rankChart,winNumChart]}></ButtonGroup></FlexDiv>}></LineDiv>\r\n            \r\n            {btnSelect[0] ? <PieChart rankList={rankList}></PieChart> : <Chart></Chart>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserChart\r\n","import { useState } from 'react'\r\nimport AccumulateChart from '../components/AccumulateChart'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport SubTitle from '../components/SubTitle';\r\nimport ButtonGroup from '../components/ButtonGroup';\r\nimport UserChart from '../components/UserChart';\r\nimport styled from 'styled-components'\r\nimport { Debounce } from '../Debounce'\r\n\r\nconst FlexDiv = styled.div`\r\n    display : inline-flex;\r\n    line-height : 1;\r\n    margin-right : 10px;\r\n`\r\nconst Section = styled.section`\r\n    ${props => props.theme.sectionCss}\r\n`\r\nconst ChartSelect = () => {\r\n\r\n    const dispatch = useDispatch(); // 디스패치 함수를 가져옵니다\r\n\r\n    const addAList = (newList: number[]) => {\r\n        dispatch(actionCreators.accumulateList(newList))\r\n    }\r\n    const resizeOpt = (value: boolean) => {\r\n        dispatch(actionCreators.resizeOpt(value))\r\n    }\r\n    const graphSizeUp = (size: number) => {\r\n        dispatch(actionCreators.graphSizeUp(size))\r\n    }\r\n    const graphSizeDown = (size: number) => {\r\n        dispatch(actionCreators.graphSizeDown(size))\r\n    }\r\n\r\n    var size = useSelector((state: StoreState) => state.Reducer.graphSize);\r\n\r\n    const sizeUp = (idx: number) => {\r\n        selected(idx)\r\n        resizeOpt(true)\r\n        graphSizeUp(size + 400)\r\n        document.body.getElementsByTagName(\"canvas\")[0].style.width = `${size + 400}px`\r\n        setTimeout(() => {\r\n            resizeOpt(false)\r\n        }, 100);\r\n\r\n    }\r\n    const sizeDown = (idx: number) => {\r\n        if (size < 361) return\r\n        selected(idx)\r\n        resizeOpt(true)\r\n        graphSizeDown(size - 400)\r\n        document.body.getElementsByTagName(\"canvas\")[0].style.width = `${size - 400}px`\r\n        setTimeout(() => {\r\n            resizeOpt(false)\r\n        }, 100);\r\n    }\r\n\r\n    const [btnSelect, setBtnSelect] = useState<any[]>([])\r\n    const [graphSelect, setGraphSelect] = useState<any[]>([true, false])\r\n\r\n    const selected = Debounce((idx: number) => {\r\n        btnSelect[idx] = true\r\n        setBtnSelect(btnSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }, 200)\r\n    const selected2 = Debounce((idx: number) => {\r\n        graphSelect[idx] = true\r\n        setGraphSelect(graphSelect.map((i, idx2) => {\r\n            if (idx2 === idx) return true\r\n            else return false;\r\n        }))\r\n    }, 200)\r\n    return (\r\n        <Section>\r\n            <SubTitle content=\"로또 분석 그래프\"></SubTitle>\r\n            <FlexDiv>\r\n                <ButtonGroup selectBg=\"rgba(235, 83, 116,.12)\" selectColor=\"rgb(235, 83, 116)\" selected={graphSelect} content={[\"실제 로또 통계\", \"가상 로또 통계\"]} click={[selected2, selected2]}></ButtonGroup>\r\n                <ButtonGroup selected={btnSelect} content={[\"확대\", \"축소\"]} click={[sizeUp, sizeDown]}></ButtonGroup>\r\n            </FlexDiv>\r\n\r\n            {graphSelect[0] ? <AccumulateChart addAList={addAList}></AccumulateChart> : <UserChart addAList={addAList}></UserChart>}\r\n\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default ChartSelect\r\n","import { useEffect , useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../store'\r\nimport LineDiv from '../components/LineDiv'\r\nimport Axios from 'axios'\r\nimport ResultNum from '../components/ResultNum';\r\nimport styled from 'styled-components'\r\n\r\nconst Div = styled.div`\r\n    margin-bottom : 30px;\r\n`\r\n\r\nconst SearchLotto = () => {\r\n    const [select,setSelect] = useState<number>(0)\r\n    const [numList,setNumList] = useState<number[]>([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setRoundSize = (value:number) => {\r\n        dispatch(actionCreators.recentRound(value))\r\n    }\r\n    const setRoundSelect2 = (value:number) => {\r\n        dispatch(actionCreators.roundSelect2(value))\r\n    }\r\n\r\n    var roundSize = useSelector((state:StoreState)=> state.Reducer.recentRound)\r\n\r\n    const getSize = async () => {\r\n        await Axios.post('https://lotto-server-mongo.herokuapp.com/', {query : `\r\n        query{\r\n            roundSize\r\n        }\r\n        `}).then(res => {\r\n            var data = res.data.data.roundSize\r\n            setSelect(data)\r\n            setRoundSelect2(data)\r\n            setRoundSize(data)\r\n            document.getElementById(\"root\")!.style.display = \"block\"\r\n            getNum(data)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    const getNum = async (num : number) => {\r\n        await Axios.post('https://lotto-server-mongo.herokuapp.com/', {query : `\r\n            query{\r\n                winningNum(_id: ${num}){\r\n                    num1 num2 num3 num4 num5 num6 bonus\r\n                }\r\n            }\r\n        `}).then(res=> {\r\n            var obj = res.data.data.winningNum\r\n            var list = []\r\n            for(var data in obj){\r\n                list.push(obj[data])\r\n            }\r\n            setNumList([...list])\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getSize()\r\n    }, [])\r\n\r\n    var arr = new Array(roundSize).fill(0)\r\n    var map = arr.map((x, idx: number) => <option key={idx} value={idx + 1}>{idx + 1}</option>)\r\n\r\n\r\n    const handleChange = (e:any) => {\r\n        setSelect(e.target.value)\r\n        getNum(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Div>\r\n            <LineDiv fontSize={15} content={<div>지난 로또 조회  <select value={select} onChange={handleChange}>{map}</select>회차</div>}></LineDiv>\r\n            <p>{numList.map((x, idx) => {\r\n                if (idx === 6)\r\n                    return (\r\n                        <span key={idx}>+  <ResultNum key={idx} bonus={true} num={x}></ResultNum></span>\r\n                    )\r\n                else\r\n                    return (\r\n                        <ResultNum key={idx} num={x}></ResultNum>\r\n                    )\r\n            })}</p>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default SearchLotto\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nconst GoLotto = styled.span`\r\n    cursor : pointer;\r\n    text-decoration : underline;\r\n    color : rgba(235,83,116,0.72);\r\n    &:hover{\r\n        color : rgb(235,83,116);\r\n    }\r\n`\r\ntype props = {\r\n    content : string\r\n}\r\n\r\nconst NobodyWin = ({content}:props) => {\r\n    return (\r\n        <div>\r\n            <h4>{content}</h4>\r\n            <GoLotto onClick={()=> window.scrollTo(0,0)}>추첨하러가기</GoLotto>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NobodyWin\r\n","import { useState, useEffect } from 'react'\r\nimport SubTitle from '../components/SubTitle'\r\nimport Axios from 'axios'\r\nimport ButtonGroup from '../components/ButtonGroup'\r\nimport NumLineWrap from '../components/NumLineWrap'\r\nimport ResultNum from '../components/ResultNum'\r\nimport LineDiv from '../components/LineDiv'\r\nimport { Debounce } from '../Debounce'\r\nimport NobodyWin from '../components/NobodyWin'\r\nimport styled from 'styled-components'\r\n\r\nconst GroupWrapper = styled.div`\r\n    margin-bottom : 15px;\r\n`\r\nconst Section = styled.div`\r\n    ${props=> props.theme.sectionCss}\r\n`\r\n\r\nconst HallOfFame = () => {\r\n\r\n    const getWinData = (rank: string) => {\r\n        Axios.post('https://lotto-server-mongo.herokuapp.com/', {\r\n            query: `\r\n        query{    \r\n            winDataByRank(rank:\"${rank}\"){\r\n                num1 num2 num3 num4 num5 num6 name\r\n            }\r\n        }\r\n        `}).then(res => {\r\n                setNumList(res.data.data.winDataByRank)\r\n            })\r\n    }\r\n    const [selectBtn, setSelectBtn] = useState<boolean[]>([true, false, false])\r\n    const [numList, setNumList] = useState<any[]>([])\r\n\r\n    useEffect(() => {\r\n        getWinData(\"first\")\r\n    }, [])\r\n\r\n    const selected = Debounce((idx: number) => {\r\n        if(selectBtn[idx]) return\r\n        setSelectBtn(selectBtn.map((i, idx2) => {\r\n            if (idx === idx2) return true\r\n            else return false\r\n        }))\r\n        switch (idx) {\r\n            case 0:\r\n                getWinData(\"first\")\r\n                break;\r\n            case 1:\r\n                getWinData(\"second\")\r\n                break;\r\n            case 2:\r\n                getWinData(\"third\")\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    },200)\r\n\r\n\r\n\r\n    return (\r\n        <Section>\r\n            <SubTitle content={\"명예의 전당\"}></SubTitle>\r\n            <GroupWrapper>\r\n            <LineDiv content={<ButtonGroup content={[\"1등\", \"2등\", \"3등\"]} selected={selectBtn} click={[selected, selected, selected]}></ButtonGroup>}></LineDiv>\r\n            </GroupWrapper>\r\n            {numList.length===0 ? <NobodyWin content=\"당첨된 사람이 없습니다. 당첨에 도전해보세요!\"></NobodyWin>: ''}\r\n            {numList.map(obj => {\r\n                return (\r\n                    <div style={{marginBottom : \"15px\"}}>\r\n                    <LineDiv content={obj.name+\"님\"}></LineDiv>\r\n                    {Object.keys(obj).map(x => {\r\n                        if (x !== \"name\")\r\n                            return <ResultNum num={obj[x][0]} bonusCorrect={obj[x][1] === 2 ? true : false} correct={obj[x][1] === 1 ? true : false}></ResultNum>\r\n                    })}\r\n                    </div>\r\n                )\r\n            })}\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default HallOfFame\r\n","import React from 'react'\r\n\r\ntype props ={\r\n    upDown:boolean\r\n    fill:string\r\n}\r\n\r\nconst DoubleArrow = ({upDown,fill}:props) => {\r\n    return (\r\n        <svg width=\"15px\" style={{transform : `rotate(${upDown ? 180 : 0}deg)`, fill : fill}} viewBox=\"0 -50 180.21003 320.50464999999997\" version=\"1.1\" x=\"0px\" y=\"0px\"><g transform=\"translate(194.21574,104.37169)\"><path d=\"m -149.23767,-59.392579 -44.97807,44.979111 12.4348,12.4347954 12.43479,12.4347976 32.36812,-32.366688 c 17.80247,-17.801677 32.52623,-32.366685 32.71947,-32.366685 0.19325,0 14.976582,14.624585 32.851856,32.499079 L -38.9062,10.72091 -26.455957,-1.6984506 -14.005714,-14.117809 -59.131619,-59.244751 c -24.819252,-24.819813 -45.126371,-45.126939 -45.126941,-45.126939 -7.1e-4,0 -20.24117,20.240596 -44.97911,44.979111 z m 0,115.711105 -44.97807,44.979114 12.4348,12.43479 12.43479,12.4348 32.36812,-32.366694 c 17.80247,-17.80167 32.52623,-32.36668 32.71947,-32.36668 0.19325,0 14.976582,14.62458 32.851856,32.49908 L -38.9062,126.43202 -26.455957,114.01266 -14.005714,101.5933 -59.131619,56.466356 c -24.819252,-24.81982 -45.126371,-45.126942 -45.126941,-45.126942 -7.1e-4,0 -20.24117,20.240602 -44.97911,44.979112 z\" stroke-width=\"0.35277775\"/></g></svg>\r\n    )\r\n}\r\n\r\nexport default DoubleArrow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport DoubleArrow from './DoubleArrow'\r\n\r\nconst BtnDiv = styled.div`\r\n    background : rgb(86,115,235);\r\n    position : fixed;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    bottom : 20vh;\r\n    width : 50px;\r\n    height : 30px;\r\n    box-shadow : rgba(0, 0, 0, 0.28) -1px 1px 20px;\r\n    border-top-right-radius: 10px;\r\n    border-top-left-radius: 10px;\r\n    cursor : pointer;\r\n    \r\n`\r\ntype props={\r\n    upDownBtn:boolean\r\n    setUpDownBtn:Function\r\n}\r\nconst SlideFooterBtn = ({upDownBtn,setUpDownBtn}:props) => {\r\n    const clickBtn = () => {\r\n        if(upDownBtn) setUpDownBtn(false)\r\n        else setUpDownBtn(true)\r\n    }\r\n\r\n    return (\r\n        <BtnDiv id=\"footerBtn\" onClick={clickBtn}>\r\n            <DoubleArrow fill=\"white\" upDown={upDownBtn}></DoubleArrow>\r\n        </BtnDiv>\r\n    )\r\n}\r\n\r\nexport default SlideFooterBtn\r\n","import React from 'react'\r\n\r\n    export function numberCounter(target_frame, target_number, addString) {\r\n        this.count = 0; this.diff = 0;\r\n        this.target_count = parseInt(target_number);\r\n        this.target_frame = document.getElementById(target_frame);\r\n        this.timer = null;\r\n        this.addString = addString\r\n        this.counter();\r\n    };\r\n    numberCounter.prototype.counter = function() {\r\n        var self = this;\r\n        this.diff = this.target_count - this.count;\r\n         \r\n        if(this.diff > 0) {\r\n            self.count += Math.ceil(this.diff / 5);\r\n        }\r\n         \r\n        this.target_frame.innerHTML = this.count.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + this.addString;\r\n         \r\n        if(this.count < this.target_count) {\r\n            this.timer = setTimeout(function() { self.counter(); }, 20);\r\n        } else {\r\n            clearTimeout(this.timer);\r\n        }\r\n    };\r\n    \r\n","import { useState, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport SlideFooterBtn from '../components/SlideFooterBtn'\r\nimport { useSelector } from 'react-redux'\r\nimport { StoreState } from '../store/index'\r\nimport { numberCounter } from '../components/RollingNum'\r\n\r\ntype Props = {\r\n    upDownBtn?: boolean\r\n    bg?: string\r\n    color?: string\r\n}\r\n\r\nconst FixedDiv = styled.div<Props>`\r\n    position: fixed;\r\n    bottom: ${props => props.upDownBtn ? 0 : -20}vh;\r\n    z-index: 999;\r\n    width: ${window.innerWidth > 400 ? \"400px\" : \"95%\"};\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    height: 20vh;\r\n    background: white;\r\n    border-top-right-radius: 50px;\r\n    border-top-left-radius: 50px;\r\n    box-shadow : rgba(0, 0, 0, 0.28) -1px 1px 20px;\r\n    transition:all ease-out .5s;\r\n`\r\n\r\nconst Title = styled.p`\r\n    font-size : ${window.innerHeight > 568 ? \"1.3em\" : \"1.1em\"};\r\n    font-weight : 600;\r\n    margin-bottom : 0px;\r\n    margin-top : 5px;\r\n`\r\nconst LeftDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n    width : 60%;\r\n    padding-left : 40px;\r\n`\r\nconst RightDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: left;\r\n    width: 40%;\r\n`\r\n\r\nconst MainDivWrap = styled.div`\r\n    display : inline-flex;\r\n    margin-bottom : 2vh;\r\n    width : 100%;\r\n`\r\n\r\nconst SmallSpan = styled.span`\r\n    color : gray;\r\n    font-size : ${window.innerHeight > 568 ? \"1.1em\" : \".9em\"};\r\n`\r\nconst MainCss = css`\r\n    padding : 0px 4px;\r\n    border-radius : 5px;\r\n    font-weight : 600;\r\n`\r\nconst MainSpan = styled.span`\r\n    background : rgb(224,230,251);\r\n    color : rgb(86,115,235);\r\n    font-size : ${window.innerHeight > 568 ? \"21px\" : \"1.1em\"};\r\n    ${MainCss}\r\n    \r\n`\r\nconst MainSpan2 = styled.span`\r\n    background: rgba(235,83,116,0.12);\r\n    color : rgb(235,83,116);\r\n    font-size : ${window.innerHeight > 568 ? \"21px\" : \"1.1em\"};\r\n    ${MainCss}\r\n`\r\nconst MainSmallSpan = styled.span<Props>`\r\n    font-size : ${window.innerHeight > 568 ? \"15px\" : \"10px\"};\r\n    background : ${props => props.bg};\r\n    color : ${props => props.color};\r\n    margin-right : 3px;\r\n    ${MainCss}\r\n`\r\n\r\n\r\nconst UserResult = () => {\r\n\r\n    const [upDownBtn, setUpDownBtn] = useState<boolean>(false)\r\n    \r\n    const UserResult = useSelector((state:StoreState)=> state.Reducer.userResult)\r\n\r\n    useEffect(() => {\r\n        if(upDownBtn){\r\n            var sum = parseInt(UserResult.first) + parseInt(UserResult.second) + parseInt(UserResult.third) + parseInt(UserResult.fourth) + parseInt(UserResult.fifth) + parseInt(UserResult.last)\r\n            new numberCounter(\"roll1\", sum*1000, \"원\")\r\n            new numberCounter(\"roll2\", sum, \"개\")\r\n        } \r\n    }, [upDownBtn,UserResult])\r\n\r\n    return (\r\n        <FixedDiv upDownBtn={upDownBtn}>\r\n            <SlideFooterBtn upDownBtn={upDownBtn} setUpDownBtn={setUpDownBtn}></SlideFooterBtn>\r\n            <div>\r\n                <Title>내 로또 내역</Title>\r\n            </div>\r\n            <MainDivWrap>\r\n                <LeftDiv>\r\n                    <SmallSpan>소비 금액</SmallSpan>\r\n                    <div><MainSpan id=\"roll1\"></MainSpan></div>\r\n                </LeftDiv>\r\n                <RightDiv>\r\n                    <SmallSpan>구매 수</SmallSpan>\r\n                    <div><MainSpan2 id=\"roll2\"></MainSpan2></div>\r\n                </RightDiv>\r\n            </MainDivWrap>\r\n                <div style={{wordBreak: \"break-word\"}}>\r\n                <MainSmallSpan bg=\"rgba(255,94,0,.12)\" color=\"rgb(255,94,0)\">1등 {UserResult.first || 0}회</MainSmallSpan>\r\n                <MainSmallSpan bg=\"rgba(235,83,116,0.12)\" color=\"rgb(235,83,116)\">2등 {UserResult.second || 0}회</MainSmallSpan>\r\n                <MainSmallSpan bg=\"rgb(224,230,251)\" color=\"rgb(86,115,235)\">3등 {UserResult.third || 0}회</MainSmallSpan>\r\n                <MainSmallSpan>4등 {UserResult.fourth || 0}회</MainSmallSpan>\r\n                <MainSmallSpan>5등 {UserResult.fifth || 0}회</MainSmallSpan>\r\n                <MainSmallSpan>꽝 {UserResult.last || 0}회</MainSmallSpan>\r\n                </div>\r\n        </FixedDiv>\r\n    )\r\n}\r\n\r\nexport default UserResult\r\n","import SelectNum from './pages/SelectNum';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components'\nimport ChartSelect from './pages/ChartSelect';\nimport SearchLotto from './pages/SearchLotto';\nimport { disableReactDevTools } from '@fvilers/disable-react-devtools';\nimport HallOfFame from './pages/HallOfFame';\nimport './App.css'\nimport UserResult from './pages/UserResult';\n\nif (process.env.NODE_ENV === 'production') {\n  disableReactDevTools();\n}\n\nconst HeadLine = styled.h2`\nposition: relative;\n`\n\n\n\nlet pcCheck:string = window.navigator.userAgent.indexOf(\"Mobile\") > -1 ? \"true\" : \"false\"\nsessionStorage.setItem(\"mobile\",pcCheck)\n\nfunction App() {\n  \n  \n  return (\n        <div className=\"App\">\n          <HeadLine>로또 추첨기 with TypeScript</HeadLine>\n          <SearchLotto></SearchLotto>\n          <SelectNum></SelectNum>\n          {/* <Route path='/result' component={TsTest}></Route> */}\n          <ChartSelect></ChartSelect>\n          <HallOfFame></HallOfFame>\n          <UserResult></UserResult>\n        </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { State, Reducer} from './store';\r\n\r\nexport interface StoreState {\r\n    Reducer: State;\r\n}\r\n\r\nexport default combineReducers<StoreState>({\r\n    Reducer\r\n});","import { css, keyframes } from 'styled-components'\r\n// 재사용성 높은 css들 모아놓고 테마로 씀\r\nconst theme = {\r\n  fadeUp: keyframes`\r\n    0% {\r\n      opacity: 0;\r\n      transform : translateY(10px);\r\n    }\r\n    \r\n    100% {\r\n      opacity: 1;\r\n      transform : translateY(0px);\r\n    }\r\n  `,\r\n  flexDiv: css`\r\n      display: flex;\r\n      flex-direction: row;\r\n    `,\r\n  noneOutline: css`\r\n    outline : 0;\r\n    cursor : pointer;\r\n    transition:all ease-out .5s;\r\n    padding : 4px 8px;\r\n    font-size : .9em;\r\n    `,\r\n  sectionCss: css`\r\n    margin-bottom : 60px;\r\n    animation: ${props => props.theme.fadeUp} .5s linear alternate;\r\n  `\r\n}\r\n\r\nexport default theme","import { createGlobalStyle } from 'styled-components'\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  html{\r\n    scroll-behavior : smooth;\r\n    @import url('./App.css');\r\n    font-family : 'Noto Sans' !important;\r\n  }\r\n  #root{\r\n    box-sizing: border-box;\r\n    padding: 12px 20px;\r\n    text-align : center;\r\n    align-items : center;\r\n    margin: auto;\r\n    width: 430px;\r\n    overflow: hidden;\r\n    min-height: 100vh;\r\n    display : none;\r\n    margin-bottom : 20vh;\r\n  }\r\n  .afterload{\r\n    display : block;\r\n  }\r\n  @media(max-width : 414px){\r\n    #root{\r\n      width : 100%;\r\n      font-size : 13px;\r\n    }\r\n  }\r\n  @media(max-width : 325px){\r\n    #root{\r\n      width : 320px;\r\n      font-size : 10px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { compose, createStore } from 'redux';\nimport rootReducer from './store/index';\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme'\n// **** (1) Provider 불러오기\nimport { Provider } from 'react-redux'\nimport Global from './global'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,composeEnhancers())\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n    <App />\n    <Global></Global>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}