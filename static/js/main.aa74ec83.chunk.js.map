{"version":3,"sources":["Button.tsx","ResultNum.tsx","TsTest.tsx","Debounce.tsx","SelectNum.tsx","store/store.ts","App.tsx","reportWebVitals.ts","store/index.tsx","theme..js","global.js","index.tsx"],"names":["Btn","styled","button","props","bg","color","Button","content","click","id","onClick","NumSpan","span","corrected","ResultNum","num","correct","TsTest","list","useSelector","state","Reducer","useState","result","setResult","setCorrect","random","useCallback","arr","document","getElementById","setAttribute","setInterval","number","Math","floor","includes","innerText","toString","stop","func","timeout","timer","args","clearTimeout","setTimeout","Debounce","parseInt","clearInterval","length","reset","removeAttribute","sort","a","b","map","x","selected","NumDiv","div","SelectNum","addList","history","useHistory","selectBtn","setSelectBtn","numList","setNumList","idx","splice","indexOf","push","select","alert","window","confirm","LIST","LIST2","actionCreators","newList","type","list2","initialState","App","dispatch","useDispatch","className","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","size","theme","mainColor","mobile","tablet","laptop","desktop","GlobalStyle","createGlobalStyle","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","ReactDOM"],"mappings":"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","file":"static/js/main.aa74ec83.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\ninterface btnProps {\r\n    color?: string\r\n    bg? : string\r\n}\r\ntype btnStyle = {\r\n    color?: string;\r\n    bg?: string;\r\n    content: string;\r\n    click?: any;\r\n    id?: string;\r\n}\r\nconst Btn = styled.button<btnProps>`\r\n        border : 0;\r\n        padding : 5px 10px;\r\n        margin-bottom : 5px;\r\n        margin-right : 5px;\r\n        background : ${props => props.bg || \"#EAEAEA\"};\r\n        color : ${props => props.color || \"black\"};\r\n        border-radius : 10px;\r\n        font-weight : 600;\r\n        &:hover{\r\n            background : black;\r\n            color : white;\r\n        }\r\n    `\r\nconst Button = ({color,bg,content,click,id}:btnStyle) => {\r\n    return (\r\n        <Btn color={color} bg={bg} onClick={click} id={id}> \r\n            {content}\r\n        </Btn>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import styled from 'styled-components'\r\n\r\ninterface spanProps{\r\n    corrected?: boolean\r\n}\r\n\r\ntype resultProps = {\r\n    num : number\r\n    correct : boolean\r\n}\r\n\r\nconst NumSpan = styled.span<spanProps>`\r\n    display : inline-block;\r\n    width : 30px;\r\n    border : 0;\r\n    padding : 5px 0px;\r\n    margin-bottom : 5px;\r\n    margin-right : 5px;\r\n    background : ${props => props.corrected ? \"black\" : \"#EAEAEA\"};\r\n    color : ${props => props.corrected ? \"white\" : \"black\"};\r\n    border-radius : 50px;\r\n    font-weight : 600;\r\n`\r\n\r\nconst ResultNum = ({num,correct}:resultProps) => {\r\n    return (\r\n        <NumSpan corrected={correct}>\r\n            {num}\r\n        </NumSpan>\r\n    )\r\n}\r\n\r\nexport default ResultNum\r\n","import React ,{ useState, useEffect, useCallback } from 'react'\r\nimport { Debounce } from './Debounce'\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from './store'\r\nimport styled from 'styled-components';\r\nimport Btn from './Button'\r\nimport ResultNum from './ResultNum';\r\n\r\n\r\n\r\nconst TsTest = () => {\r\n    \r\n    //useSelector로 state에 접근\r\n    var list = useSelector((state: StoreState) => state.Reducer.list);\r\n    const [result, setResult] = useState<number[]>([]);\r\n    const [correct,setCorrect] = useState<boolean[]>([])\r\n\r\n    let id: NodeJS.Timeout;\r\n\r\n    \r\n\r\n    const random = useCallback((arr: any[]) => {\r\n        document.getElementById('startBtn')!.setAttribute(\"disabled\",\"true\");\r\n\r\n        id = setInterval(() => {\r\n            while (true) {\r\n                let number = Math.floor((Math.random() * 6) + 1)\r\n                if (!arr.includes(number)) {\r\n                     document.getElementById('num')!.innerText = number.toString()\r\n\r\n                    // setNum(number)\r\n                    break;\r\n                }\r\n            }\r\n        }, 50);\r\n    },[])\r\n\r\n    //state가 변경되어 렌더링이 되면 이전에 시작된 interval값을 찾지 못하기 때문에 usecallback으로 함수 재생성을 막아줘야함.\r\n    const stop = Debounce(useCallback((result :Array<number>,list:Array<number>) => {\r\n\r\n        let num = parseInt(document.getElementById('num')!.innerText)\r\n        if(num===0) return\r\n        clearInterval(id)\r\n        if(list.includes(num)) {\r\n            correct[num] = true;\r\n            setCorrect([...correct])\r\n        }\r\n        setResult([...result, num])\r\n\r\n        if(result.length<5)\r\n        setTimeout(() => {\r\n            random([...result,num])\r\n        }, 700);\r\n\r\n        else  document.getElementById('stopBtn')!.setAttribute(\"disabled\",\"true\");\r\n    }, []),700)\r\n\r\n    const reset = useCallback(() => {\r\n        clearInterval(id)\r\n        document.getElementById('num')!.innerText = \"0\"\r\n\r\n        setResult([])\r\n        setCorrect([])\r\n        document.getElementById('stopBtn')!.removeAttribute(\"disabled\")\r\n        document.getElementById('startBtn')!.removeAttribute(\"disabled\")\r\n    },[])\r\n \r\n    return (\r\n        <div>\r\n            <h1 id=\"num\">0</h1>\r\n            <Btn id=\"startBtn\" content=\"추첨시작\" click={()=> random([])}></Btn>\r\n            <Btn id=\"stopBtn\" click={() => stop(result,list)} content=\"뽑기\"></Btn>\r\n            <Btn id=\"resetBtn\" color=\"white\" bg=\"black\" click={reset} content=\"초기화\"></Btn>\r\n            <p>추첨 결과 : {result.sort((a,b)=> a-b).map(x => <ResultNum correct={correct[x]} num={x}></ResultNum>)}</p>\r\n            <p>내가 고른 숫자 : {list.sort((a,b)=> a-b).map(x => <ResultNum correct={correct[x]} num={x}></ResultNum>)}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TsTest\r\n","// export function Debounce<Params extends any[]>(callback: (...args: Params) => any, milliseconds: number) {\r\n//     let debounceChek: NodeJS.Timeout\r\n//     return function (...args: Params) {\r\n//         // clearTimeout을 settimeout전에 걸어줘서 아무리 많이 버튼을 눌러도 \r\n//         //그 전 setTimeout들은 전부 삭제되고 마지막 setTimeout만 실행된다.\r\n//         clearTimeout(debounceChek);\r\n//         debounceChek = setTimeout(() => {\r\n//         console.log(debounceChek)\r\n//             callback(...args);\r\n//         }, milliseconds);\r\n//     }\r\n// }\r\nimport { useCallback } from 'react'\r\nexport function Debounce<Params extends any[]>(\r\n    func: (...args: Params) => any,\r\n    timeout: number\r\n  ): (...args: Params) => void {\r\n    let timer: NodeJS.Timeout;\r\n    return (...args: Params) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        func(...args);\r\n      }, timeout);\r\n    }\r\n  }","import { useSelector } from 'react-redux';\r\nimport { StoreState } from './store'\r\nimport React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './Button';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n//ts에서 props를 사용하는 방법\r\ntype props = {\r\n    addList: Function\r\n}\r\ninterface numSpanProps {\r\n    selected?: boolean\r\n}\r\nconst NumSpan = styled.button<numSpanProps>`\r\n        width : 35px;\r\n        border : 0;\r\n        padding : 5px 0px;\r\n        margin-bottom : 5px;\r\n        margin-right : 5px;\r\n        background : ${props => props.selected ? \"black\" : \"#EAEAEA\"};\r\n        color : ${props => props.selected ? \"white\" : \"black\"};\r\n        border-radius : 10px;\r\n        font-weight : 600;\r\n        &:hover{\r\n            background : black;\r\n            color : white;\r\n        }\r\n    `\r\nconst NumDiv = styled.div`\r\n        max-width : 360px;\r\n        display : inline-flex;\r\n        flex-flow : wrap;\r\n    `\r\n\r\nconst SelectNum = ({ addList }: props) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [selectBtn, setSelectBtn] = useState<boolean[]>([])\r\n    const [numList,setNumList] = useState<number[]>([])\r\n\r\n    let allNum: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]\r\n    const select = (num: number) => {\r\n        if (numList.includes(num)) {\r\n            numList.splice(numList.indexOf(num), 1)\r\n            selectBtn[num - 1] = false\r\n            setSelectBtn([...selectBtn])\r\n            setNumList([...numList])\r\n        }\r\n        else if (numList.length === 6) return\r\n        else {\r\n            selectBtn[num - 1] = true\r\n            setSelectBtn([...selectBtn])\r\n            numList.push(num)\r\n            setNumList([...numList])\r\n        }\r\n    }\r\n\r\n    let map = allNum.map((x, idx) => <NumSpan selected={selectBtn[idx]} id={`btn${x}`} onClick={() => select(x)}>{x}</NumSpan>)\r\n\r\n    const reset = () => {\r\n        setSelectBtn([...selectBtn.map<boolean>(x=>{\r\n            if(x) x=false\r\n            return x;\r\n        })])\r\n        setNumList([])\r\n    }\r\n    const submit = () => {\r\n        if(numList.length<6){\r\n            alert(\"총 6개의 번호를 선택해주세요\")\r\n            return\r\n        }\r\n        if(window.confirm(`로또번호 ${numList} 를 제출하시겠습니까?`)){\r\n            addList(numList)\r\n            history.push('/hoonsbory/lotto-ts-react/result')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NumDiv>\r\n                {map}\r\n            </NumDiv>\r\n            <Button color=\"white\" bg=\"blue\" content=\"초기화\" click={reset}></Button>\r\n            <Button color=\"white\" bg=\"red\" content=\"번호제출\" click={submit}></Button>\r\n            <p>내가 뽑은 로또 번호 : {numList.sort((a, b) => a - b).map(x => `${x}   `)}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectNum\r\n","// types\r\n\r\nexport interface State {\r\n  list: number[];\r\n  list2: number[]\r\n}\r\n\r\nexport const LIST = \"LIST\";\r\nexport const LIST2 = \"LIST2\";\r\n\r\n\r\ninterface ListAction {\r\n  newList: number[];\r\n  type: typeof LIST;\r\n}\r\n\r\ninterface List2Action {\r\n  newList: number[];\r\n  type: typeof LIST2;\r\n}\r\n\r\n\r\n\r\nexport type ActionTypes =\r\n  | ListAction\r\n  | List2Action\r\n// | ChangeInputAction;\r\n\r\n// actions\r\n\r\n\r\nfunction list(newList: number[]) {\r\n  return {\r\n    type: LIST,\r\n    newList: newList\r\n  };\r\n}\r\nfunction list2(newList: number[]) {\r\n  return {\r\n    type: LIST2,\r\n    newList: newList\r\n  };\r\n}\r\nexport const actionCreators = {\r\n  list, list2\r\n};\r\n\r\n// reducers\r\n\r\nconst initialState: State = {\r\n  list: [],\r\n  list2: [1,2,3,4,5]\r\n};\r\n\r\nexport function Reducer(\r\n  state = initialState,\r\n  action: ActionTypes\r\n): State {\r\n  switch (action.type) {\r\n    case LIST:\r\n      return {\r\n        ...state,\r\n        list: action.newList\r\n      };\r\n    case LIST2:\r\n      return {\r\n        ...state,\r\n        list2: action.newList\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport TsTest from './TsTest';\nimport SelectNum from './SelectNum';\nimport { useDispatch } from 'react-redux';\nimport { actionCreators } from './store/store';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useState } from 'react'\n\n\nfunction App() {\n  const dispatch = useDispatch(); // 디스패치 함수를 가져옵니다\n  const addList = (newList: number[]) => {\n    dispatch(actionCreators.list(newList))\n  }\n  const [a, setA] = useState<number>(123)\n  return (\n    <Router>\n      <Switch>\n        <div className=\"App\">\n          <Route exact path='/hoonsbory/lotto-ts-react' render={()=> <SelectNum addList={addList}></SelectNum>}></Route>\n          <Route path='/hoonsbory/lotto-ts-react/result' component={TsTest}></Route>\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { State, Reducer} from './store';\r\n\r\nexport interface StoreState {\r\n    Reducer: State;\r\n}\r\n\r\nexport default combineReducers<StoreState>({\r\n    Reducer\r\n});","const size = {\r\n    mobile: '600px',\r\n    tablet: '900px',\r\n    laptop: '1200px',\r\n    desktop: '1800px',\r\n  }\r\n  \r\n  const theme = {\r\n    mainColor: '#0a4297',\r\n    mobile: `(max-width: ${size.mobile})`,\r\n    tablet: `(max-width: ${size.tablet})`,\r\n    laptop: `(max-width: ${size.laptop})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n  }\r\n  \r\n  export default theme","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;  \r\n  }\r\n\r\n  body {\r\n    box-sizing: border-box;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { compose, createStore } from 'redux';\nimport rootReducer from './store/index';\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme.'\n// **** (1) Provider 불러오기\nimport { Provider } from 'react-redux'\nimport Global from './global'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,composeEnhancers())\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n    <App />\n    <Global></Global>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}